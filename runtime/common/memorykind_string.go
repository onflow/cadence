// Code generated by "stringer -type=MemoryKind -trimprefix=MemoryKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryKindUnknown-0]
	_ = x[MemoryKindBool-1]
	_ = x[MemoryKindAddress-2]
	_ = x[MemoryKindString-3]
	_ = x[MemoryKindCharacter-4]
	_ = x[MemoryKindMetaType-5]
	_ = x[MemoryKindNumber-6]
	_ = x[MemoryKindArray-7]
	_ = x[MemoryKindDictionary-8]
	_ = x[MemoryKindComposite-9]
	_ = x[MemoryKindOptional-10]
	_ = x[MemoryKindNil-11]
	_ = x[MemoryKindVoid-12]
	_ = x[MemoryKindTypeValue-13]
	_ = x[MemoryKindPathValue-14]
	_ = x[MemoryKindCapabilityValue-15]
	_ = x[MemoryKindLinkValue-16]
	_ = x[MemoryKindStorageReferenceValue-17]
	_ = x[MemoryKindEphemeralReferenceValue-18]
	_ = x[MemoryKindInterpretedFunction-19]
	_ = x[MemoryKindHostFunction-20]
	_ = x[MemoryKindBoundFunction-21]
	_ = x[MemoryKindBigInt-22]
	_ = x[MemoryKindPrimitiveStaticType-23]
	_ = x[MemoryKindCompositeStaticType-24]
	_ = x[MemoryKindInterfaceStaticType-25]
	_ = x[MemoryKindVariableSizedStaticType-26]
	_ = x[MemoryKindConstantSizedStaticType-27]
	_ = x[MemoryKindDictionaryStaticType-28]
	_ = x[MemoryKindOptionalStaticType-29]
	_ = x[MemoryKindRestrictedStaticType-30]
	_ = x[MemoryKindReferenceStaticType-31]
	_ = x[MemoryKindCapabilityStaticType-32]
	_ = x[MemoryKindFunctionStaticType-33]
	_ = x[MemoryKindCadenceVoid-34]
	_ = x[MemoryKindCadenceOptional-35]
	_ = x[MemoryKindCadenceBool-36]
	_ = x[MemoryKindCadenceString-37]
	_ = x[MemoryKindRawString-38]
	_ = x[MemoryKindAddressLocation-39]
	_ = x[MemoryKindBytes-40]
	_ = x[MemoryKindVariable-41]
	_ = x[MemoryKindTokenIdentifier-42]
	_ = x[MemoryKindTokenComment-43]
	_ = x[MemoryKindTokenNumericLiteral-44]
	_ = x[MemoryKindTokenSyntax-45]
	_ = x[MemoryKindProgram-46]
	_ = x[MemoryKindIdentifier-47]
	_ = x[MemoryKindArgument-48]
	_ = x[MemoryKindBlock-49]
	_ = x[MemoryKindFunctionBlock-50]
	_ = x[MemoryKindParameter-51]
	_ = x[MemoryKindParameterList-52]
	_ = x[MemoryKindTransfer-53]
	_ = x[MemoryKindMembers-54]
	_ = x[MemoryKindTypeAnnotation-55]
	_ = x[MemoryKindFunctionDeclaration-56]
	_ = x[MemoryKindCompositeDeclaration-57]
	_ = x[MemoryKindInterfaceDeclaration-58]
	_ = x[MemoryKindEnumCaseDeclaration-59]
	_ = x[MemoryKindFieldDeclaration-60]
	_ = x[MemoryKindTransactionDeclaration-61]
	_ = x[MemoryKindImportDeclaration-62]
	_ = x[MemoryKindVariableDeclaration-63]
	_ = x[MemoryKindSpecialFunctionDeclaration-64]
	_ = x[MemoryKindPragmaDeclaration-65]
	_ = x[MemoryKindAssignmentStatement-66]
	_ = x[MemoryKindBreakStatement-67]
	_ = x[MemoryKindContinueStatement-68]
	_ = x[MemoryKindEmitStatement-69]
	_ = x[MemoryKindExpressionStatement-70]
	_ = x[MemoryKindForStatement-71]
	_ = x[MemoryKindIfStatement-72]
	_ = x[MemoryKindReturnStatement-73]
	_ = x[MemoryKindSwapStatement-74]
	_ = x[MemoryKindSwitchStatement-75]
	_ = x[MemoryKindWhileStatement-76]
	_ = x[MemoryKindBooleanExpression-77]
	_ = x[MemoryKindNilExpression-78]
	_ = x[MemoryKindStringExpression-79]
	_ = x[MemoryKindIntegerExpression-80]
	_ = x[MemoryKindFixedPointExpression-81]
	_ = x[MemoryKindArrayExpression-82]
	_ = x[MemoryKindDictionaryExpression-83]
	_ = x[MemoryKindIdentifierExpression-84]
	_ = x[MemoryKindInvocationExpression-85]
	_ = x[MemoryKindMemberExpression-86]
	_ = x[MemoryKindIndexExpression-87]
	_ = x[MemoryKindConditionalExpression-88]
	_ = x[MemoryKindUnaryExpression-89]
	_ = x[MemoryKindBinaryExpression-90]
	_ = x[MemoryKindFunctionExpression-91]
	_ = x[MemoryKindCastingExpression-92]
	_ = x[MemoryKindCreateExpression-93]
	_ = x[MemoryKindDestroyExpression-94]
	_ = x[MemoryKindReferenceExpression-95]
	_ = x[MemoryKindForceExpression-96]
	_ = x[MemoryKindPathExpression-97]
	_ = x[MemoryKindConstantSizedType-98]
	_ = x[MemoryKindDictionaryType-99]
	_ = x[MemoryKindFunctionType-100]
	_ = x[MemoryKindInstantiationType-101]
	_ = x[MemoryKindNominalType-102]
	_ = x[MemoryKindOptionalType-103]
	_ = x[MemoryKindReferenceType-104]
	_ = x[MemoryKindRestrictedType-105]
	_ = x[MemoryKindVariableSizedType-106]
	_ = x[MemoryKindLast-107]
}

const _MemoryKind_name = "UnknownBoolAddressStringCharacterMetaTypeNumberArrayDictionaryCompositeOptionalNilVoidTypeValuePathValueCapabilityValueLinkValueStorageReferenceValueEphemeralReferenceValueInterpretedFunctionHostFunctionBoundFunctionBigIntPrimitiveStaticTypeCompositeStaticTypeInterfaceStaticTypeVariableSizedStaticTypeConstantSizedStaticTypeDictionaryStaticTypeOptionalStaticTypeRestrictedStaticTypeReferenceStaticTypeCapabilityStaticTypeFunctionStaticTypeCadenceVoidCadenceOptionalCadenceBoolCadenceStringRawStringAddressLocationBytesVariableTokenIdentifierTokenCommentTokenNumericLiteralTokenSyntaxProgramIdentifierArgumentBlockFunctionBlockParameterParameterListTransferMembersTypeAnnotationFunctionDeclarationCompositeDeclarationInterfaceDeclarationEnumCaseDeclarationFieldDeclarationTransactionDeclarationImportDeclarationVariableDeclarationSpecialFunctionDeclarationPragmaDeclarationAssignmentStatementBreakStatementContinueStatementEmitStatementExpressionStatementForStatementIfStatementReturnStatementSwapStatementSwitchStatementWhileStatementBooleanExpressionNilExpressionStringExpressionIntegerExpressionFixedPointExpressionArrayExpressionDictionaryExpressionIdentifierExpressionInvocationExpressionMemberExpressionIndexExpressionConditionalExpressionUnaryExpressionBinaryExpressionFunctionExpressionCastingExpressionCreateExpressionDestroyExpressionReferenceExpressionForceExpressionPathExpressionConstantSizedTypeDictionaryTypeFunctionTypeInstantiationTypeNominalTypeOptionalTypeReferenceTypeRestrictedTypeVariableSizedTypeLast"

var _MemoryKind_index = [...]uint16{0, 7, 11, 18, 24, 33, 41, 47, 52, 62, 71, 79, 82, 86, 95, 104, 119, 128, 149, 172, 191, 203, 216, 222, 241, 260, 279, 302, 325, 345, 363, 383, 402, 422, 440, 451, 466, 477, 490, 499, 514, 519, 527, 542, 554, 573, 584, 591, 601, 609, 614, 627, 636, 649, 657, 664, 678, 697, 717, 737, 756, 772, 794, 811, 830, 856, 873, 892, 906, 923, 936, 955, 967, 978, 993, 1006, 1021, 1035, 1052, 1065, 1081, 1098, 1118, 1133, 1153, 1173, 1193, 1209, 1224, 1245, 1260, 1276, 1294, 1311, 1327, 1344, 1363, 1378, 1392, 1409, 1423, 1435, 1452, 1463, 1475, 1488, 1502, 1519, 1523}

func (i MemoryKind) String() string {
	if i >= MemoryKind(len(_MemoryKind_index)-1) {
		return "MemoryKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryKind_name[_MemoryKind_index[i]:_MemoryKind_index[i+1]]
}
