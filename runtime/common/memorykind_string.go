// Code generated by "stringer -type=MemoryKind -trimprefix=MemoryKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryKindUnknown-0]
	_ = x[MemoryKindBool-1]
	_ = x[MemoryKindAddress-2]
	_ = x[MemoryKindString-3]
	_ = x[MemoryKindCharacter-4]
	_ = x[MemoryKindMetaType-5]
	_ = x[MemoryKindNumber-6]
	_ = x[MemoryKindArrayBase-7]
	_ = x[MemoryKindArrayLength-8]
	_ = x[MemoryKindDictionaryBase-9]
	_ = x[MemoryKindDictionarySize-10]
	_ = x[MemoryKindCompositeBase-11]
	_ = x[MemoryKindCompositeSize-12]
	_ = x[MemoryKindOptional-13]
	_ = x[MemoryKindNil-14]
	_ = x[MemoryKindVoid-15]
	_ = x[MemoryKindTypeValue-16]
	_ = x[MemoryKindPathValue-17]
	_ = x[MemoryKindCapabilityValue-18]
	_ = x[MemoryKindLinkValue-19]
	_ = x[MemoryKindStorageReferenceValue-20]
	_ = x[MemoryKindEphemeralReferenceValue-21]
	_ = x[MemoryKindInterpretedFunction-22]
	_ = x[MemoryKindHostFunction-23]
	_ = x[MemoryKindBoundFunction-24]
	_ = x[MemoryKindBigInt-25]
	_ = x[MemoryKindPrimitiveStaticType-26]
	_ = x[MemoryKindCompositeStaticType-27]
	_ = x[MemoryKindInterfaceStaticType-28]
	_ = x[MemoryKindVariableSizedStaticType-29]
	_ = x[MemoryKindConstantSizedStaticType-30]
	_ = x[MemoryKindDictionaryStaticType-31]
	_ = x[MemoryKindOptionalStaticType-32]
	_ = x[MemoryKindRestrictedStaticType-33]
	_ = x[MemoryKindReferenceStaticType-34]
	_ = x[MemoryKindCapabilityStaticType-35]
	_ = x[MemoryKindFunctionStaticType-36]
	_ = x[MemoryKindCadenceVoid-37]
	_ = x[MemoryKindCadenceOptional-38]
	_ = x[MemoryKindCadenceBool-39]
	_ = x[MemoryKindCadenceString-40]
	_ = x[MemoryKindCadenceCharacter-41]
	_ = x[MemoryKindCadenceAddress-42]
	_ = x[MemoryKindCadenceInt-43]
	_ = x[MemoryKindCadenceNumber-44]
	_ = x[MemoryKindRawString-45]
	_ = x[MemoryKindAddressLocation-46]
	_ = x[MemoryKindBytes-47]
	_ = x[MemoryKindVariable-48]
	_ = x[MemoryKindValueToken-49]
	_ = x[MemoryKindSyntaxToken-50]
	_ = x[MemoryKindSpaceToken-51]
	_ = x[MemoryKindProgram-52]
	_ = x[MemoryKindIdentifier-53]
	_ = x[MemoryKindArgument-54]
	_ = x[MemoryKindBlock-55]
	_ = x[MemoryKindFunctionBlock-56]
	_ = x[MemoryKindParameter-57]
	_ = x[MemoryKindParameterList-58]
	_ = x[MemoryKindTransfer-59]
	_ = x[MemoryKindMembers-60]
	_ = x[MemoryKindTypeAnnotation-61]
	_ = x[MemoryKindDictionaryEntry-62]
	_ = x[MemoryKindFunctionDeclaration-63]
	_ = x[MemoryKindCompositeDeclaration-64]
	_ = x[MemoryKindInterfaceDeclaration-65]
	_ = x[MemoryKindEnumCaseDeclaration-66]
	_ = x[MemoryKindFieldDeclaration-67]
	_ = x[MemoryKindTransactionDeclaration-68]
	_ = x[MemoryKindImportDeclaration-69]
	_ = x[MemoryKindVariableDeclaration-70]
	_ = x[MemoryKindSpecialFunctionDeclaration-71]
	_ = x[MemoryKindPragmaDeclaration-72]
	_ = x[MemoryKindAssignmentStatement-73]
	_ = x[MemoryKindBreakStatement-74]
	_ = x[MemoryKindContinueStatement-75]
	_ = x[MemoryKindEmitStatement-76]
	_ = x[MemoryKindExpressionStatement-77]
	_ = x[MemoryKindForStatement-78]
	_ = x[MemoryKindIfStatement-79]
	_ = x[MemoryKindReturnStatement-80]
	_ = x[MemoryKindSwapStatement-81]
	_ = x[MemoryKindSwitchStatement-82]
	_ = x[MemoryKindWhileStatement-83]
	_ = x[MemoryKindBooleanExpression-84]
	_ = x[MemoryKindNilExpression-85]
	_ = x[MemoryKindStringExpression-86]
	_ = x[MemoryKindIntegerExpression-87]
	_ = x[MemoryKindFixedPointExpression-88]
	_ = x[MemoryKindArrayExpression-89]
	_ = x[MemoryKindDictionaryExpression-90]
	_ = x[MemoryKindIdentifierExpression-91]
	_ = x[MemoryKindInvocationExpression-92]
	_ = x[MemoryKindMemberExpression-93]
	_ = x[MemoryKindIndexExpression-94]
	_ = x[MemoryKindConditionalExpression-95]
	_ = x[MemoryKindUnaryExpression-96]
	_ = x[MemoryKindBinaryExpression-97]
	_ = x[MemoryKindFunctionExpression-98]
	_ = x[MemoryKindCastingExpression-99]
	_ = x[MemoryKindCreateExpression-100]
	_ = x[MemoryKindDestroyExpression-101]
	_ = x[MemoryKindReferenceExpression-102]
	_ = x[MemoryKindForceExpression-103]
	_ = x[MemoryKindPathExpression-104]
	_ = x[MemoryKindConstantSizedType-105]
	_ = x[MemoryKindDictionaryType-106]
	_ = x[MemoryKindFunctionType-107]
	_ = x[MemoryKindInstantiationType-108]
	_ = x[MemoryKindNominalType-109]
	_ = x[MemoryKindOptionalType-110]
	_ = x[MemoryKindReferenceType-111]
	_ = x[MemoryKindRestrictedType-112]
	_ = x[MemoryKindVariableSizedType-113]
	_ = x[MemoryKindPosition-114]
	_ = x[MemoryKindRange-115]
	_ = x[MemoryKindElaboration-116]
	_ = x[MemoryKindLast-117]
}

const _MemoryKind_name = "UnknownBoolAddressStringCharacterMetaTypeNumberArrayBaseArrayLengthDictionaryBaseDictionarySizeCompositeBaseCompositeSizeOptionalNilVoidTypeValuePathValueCapabilityValueLinkValueStorageReferenceValueEphemeralReferenceValueInterpretedFunctionHostFunctionBoundFunctionBigIntPrimitiveStaticTypeCompositeStaticTypeInterfaceStaticTypeVariableSizedStaticTypeConstantSizedStaticTypeDictionaryStaticTypeOptionalStaticTypeRestrictedStaticTypeReferenceStaticTypeCapabilityStaticTypeFunctionStaticTypeCadenceVoidCadenceOptionalCadenceBoolCadenceStringCadenceCharacterCadenceAddressCadenceIntCadenceNumberRawStringAddressLocationBytesVariableValueTokenSyntaxTokenSpaceTokenProgramIdentifierArgumentBlockFunctionBlockParameterParameterListTransferMembersTypeAnnotationDictionaryEntryFunctionDeclarationCompositeDeclarationInterfaceDeclarationEnumCaseDeclarationFieldDeclarationTransactionDeclarationImportDeclarationVariableDeclarationSpecialFunctionDeclarationPragmaDeclarationAssignmentStatementBreakStatementContinueStatementEmitStatementExpressionStatementForStatementIfStatementReturnStatementSwapStatementSwitchStatementWhileStatementBooleanExpressionNilExpressionStringExpressionIntegerExpressionFixedPointExpressionArrayExpressionDictionaryExpressionIdentifierExpressionInvocationExpressionMemberExpressionIndexExpressionConditionalExpressionUnaryExpressionBinaryExpressionFunctionExpressionCastingExpressionCreateExpressionDestroyExpressionReferenceExpressionForceExpressionPathExpressionConstantSizedTypeDictionaryTypeFunctionTypeInstantiationTypeNominalTypeOptionalTypeReferenceTypeRestrictedTypeVariableSizedTypePositionRangeElaborationLast"

var _MemoryKind_index = [...]uint16{0, 7, 11, 18, 24, 33, 41, 47, 56, 67, 81, 95, 108, 121, 129, 132, 136, 145, 154, 169, 178, 199, 222, 241, 253, 266, 272, 291, 310, 329, 352, 375, 395, 413, 433, 452, 472, 490, 501, 516, 527, 540, 556, 570, 580, 593, 602, 617, 622, 630, 640, 651, 661, 668, 678, 686, 691, 704, 713, 726, 734, 741, 755, 770, 789, 809, 829, 848, 864, 886, 903, 922, 948, 965, 984, 998, 1015, 1028, 1047, 1059, 1070, 1085, 1098, 1113, 1127, 1144, 1157, 1173, 1190, 1210, 1225, 1245, 1265, 1285, 1301, 1316, 1337, 1352, 1368, 1386, 1403, 1419, 1436, 1455, 1470, 1484, 1501, 1515, 1527, 1544, 1555, 1567, 1580, 1594, 1611, 1619, 1624, 1635, 1639}

func (i MemoryKind) String() string {
	if i >= MemoryKind(len(_MemoryKind_index)-1) {
		return "MemoryKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryKind_name[_MemoryKind_index[i]:_MemoryKind_index[i+1]]
}
