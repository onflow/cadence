// Code generated by "stringer -type=BinaryOperationKind"; DO NOT EDIT.

package sema

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BinaryOperationKindUnknown-0]
	_ = x[BinaryOperationKindArithmetic-1]
	_ = x[BinaryOperationKindNonEqualityComparison-2]
	_ = x[BinaryOperationKindBooleanLogic-3]
	_ = x[BinaryOperationKindEquality-4]
	_ = x[BinaryOperationKindNilCoalescing-5]
	_ = x[BinaryOperationKindBitwise-6]
}

const _BinaryOperationKind_name = "BinaryOperationKindUnknownBinaryOperationKindArithmeticBinaryOperationKindNonEqualityComparisonBinaryOperationKindBooleanLogicBinaryOperationKindEqualityBinaryOperationKindNilCoalescingBinaryOperationKindBitwise"

var _BinaryOperationKind_index = [...]uint8{0, 26, 55, 95, 126, 153, 185, 211}

func (i BinaryOperationKind) String() string {
	if i >= BinaryOperationKind(len(_BinaryOperationKind_index)-1) {
		return "BinaryOperationKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _BinaryOperationKind_name[_BinaryOperationKind_index[i]:_BinaryOperationKind_index[i+1]]
}
