// Code generated by "stringer -type=InvalidNumberLiteralKind"; DO NOT EDIT.

package parser2

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidNumberLiteralKindUnknown-0]
	_ = x[InvalidNumberLiteralKindLeadingUnderscore-1]
	_ = x[InvalidNumberLiteralKindTrailingUnderscore-2]
	_ = x[InvalidNumberLiteralKindUnknownPrefix-3]
	_ = x[InvalidNumberLiteralKindMissingDigits-4]
}

const _InvalidNumberLiteralKind_name = "InvalidNumberLiteralKindUnknownInvalidNumberLiteralKindLeadingUnderscoreInvalidNumberLiteralKindTrailingUnderscoreInvalidNumberLiteralKindUnknownPrefixInvalidNumberLiteralKindMissingDigits"

var _InvalidNumberLiteralKind_index = [...]uint8{0, 31, 72, 114, 151, 188}

func (i InvalidNumberLiteralKind) String() string {
	if i >= InvalidNumberLiteralKind(len(_InvalidNumberLiteralKind_index)-1) {
		return "InvalidNumberLiteralKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _InvalidNumberLiteralKind_name[_InvalidNumberLiteralKind_index[i]:_InvalidNumberLiteralKind_index[i+1]]
}
