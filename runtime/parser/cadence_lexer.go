/*
 * Cadence - The resource-oriented smart contract programming language
 *
 * Copyright 2019-2020 Dapper Labs, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated from parser/Cadence.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 84, 615,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 4, 63, 9, 63, 4, 64, 9, 64, 4, 65,
	9, 65, 4, 66, 9, 66, 4, 67, 9, 67, 4, 68, 9, 68, 4, 69, 9, 69, 4, 70, 9,
	70, 4, 71, 9, 71, 4, 72, 9, 72, 4, 73, 9, 73, 4, 74, 9, 74, 4, 75, 9, 75,
	4, 76, 9, 76, 4, 77, 9, 77, 4, 78, 9, 78, 4, 79, 9, 79, 4, 80, 9, 80, 4,
	81, 9, 81, 4, 82, 9, 82, 4, 83, 9, 83, 4, 84, 9, 84, 4, 85, 9, 85, 4, 86,
	9, 86, 4, 87, 9, 87, 4, 88, 9, 88, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4,
	3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10,
	3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3,
	14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18,
	3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3, 22, 3,
	22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 26,
	3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3,
	30, 3, 30, 3, 31, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 33, 3, 33,
	3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 36, 3, 36, 3,
	37, 3, 37, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38,
	3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3,
	40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 41, 3, 41,
	3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3, 42, 3, 42, 3, 42, 3,
	42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 43, 3, 43, 3, 43, 3, 43,
	3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 45, 3, 45, 3, 45, 3, 45, 3,
	45, 3, 46, 3, 46, 3, 46, 3, 46, 3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 48,
	3, 48, 3, 48, 3, 48, 3, 48, 3, 49, 3, 49, 3, 49, 3, 49, 3, 50, 3, 50, 3,
	50, 3, 50, 3, 51, 3, 51, 3, 51, 3, 51, 3, 51, 3, 51, 3, 51, 3, 52, 3, 52,
	3, 52, 3, 52, 3, 53, 3, 53, 3, 53, 3, 53, 3, 53, 3, 54, 3, 54, 3, 54, 3,
	54, 3, 54, 3, 54, 3, 54, 3, 54, 3, 55, 3, 55, 3, 55, 3, 55, 3, 55, 3, 55,
	3, 55, 3, 56, 3, 56, 3, 56, 3, 56, 3, 56, 3, 56, 3, 57, 3, 57, 3, 57, 3,
	57, 3, 57, 3, 57, 3, 57, 3, 57, 3, 57, 3, 58, 3, 58, 3, 58, 3, 58, 3, 59,
	3, 59, 3, 59, 3, 59, 3, 60, 3, 60, 3, 60, 3, 61, 3, 61, 3, 61, 3, 61, 3,
	61, 3, 62, 3, 62, 3, 62, 3, 62, 3, 62, 3, 62, 3, 63, 3, 63, 3, 63, 3, 63,
	3, 64, 3, 64, 3, 64, 3, 65, 3, 65, 3, 65, 3, 65, 3, 65, 3, 66, 3, 66, 3,
	66, 3, 66, 3, 66, 3, 66, 3, 67, 3, 67, 3, 67, 3, 67, 3, 68, 3, 68, 3, 68,
	3, 68, 3, 68, 3, 68, 3, 68, 3, 69, 3, 69, 3, 69, 3, 69, 3, 69, 3, 70, 3,
	70, 3, 70, 3, 70, 3, 70, 3, 70, 3, 70, 3, 71, 3, 71, 3, 71, 3, 71, 3, 71,
	3, 71, 3, 71, 3, 71, 3, 72, 3, 72, 7, 72, 474, 10, 72, 12, 72, 14, 72,
	477, 11, 72, 3, 73, 5, 73, 480, 10, 73, 3, 74, 3, 74, 5, 74, 484, 10, 74,
	3, 75, 3, 75, 7, 75, 488, 10, 75, 12, 75, 14, 75, 491, 11, 75, 3, 75, 5,
	75, 494, 10, 75, 3, 75, 3, 75, 3, 75, 7, 75, 499, 10, 75, 12, 75, 14, 75,
	502, 11, 75, 3, 75, 5, 75, 505, 10, 75, 3, 76, 3, 76, 7, 76, 509, 10, 76,
	12, 76, 14, 76, 512, 11, 76, 3, 77, 3, 77, 3, 77, 3, 77, 6, 77, 518, 10,
	77, 13, 77, 14, 77, 519, 3, 78, 3, 78, 3, 78, 3, 78, 6, 78, 526, 10, 78,
	13, 78, 14, 78, 527, 3, 79, 3, 79, 3, 79, 3, 79, 6, 79, 534, 10, 79, 13,
	79, 14, 79, 535, 3, 80, 3, 80, 3, 80, 7, 80, 541, 10, 80, 12, 80, 14, 80,
	544, 11, 80, 3, 81, 3, 81, 7, 81, 548, 10, 81, 12, 81, 14, 81, 551, 11,
	81, 3, 81, 3, 81, 3, 82, 3, 82, 5, 82, 557, 10, 82, 3, 83, 3, 83, 3, 83,
	3, 83, 3, 83, 3, 83, 3, 83, 6, 83, 566, 10, 83, 13, 83, 14, 83, 567, 3,
	83, 3, 83, 5, 83, 572, 10, 83, 3, 84, 3, 84, 3, 85, 6, 85, 577, 10, 85,
	13, 85, 14, 85, 578, 3, 85, 3, 85, 3, 86, 6, 86, 584, 10, 86, 13, 86, 14,
	86, 585, 3, 86, 3, 86, 3, 87, 3, 87, 3, 87, 3, 87, 3, 87, 7, 87, 595, 10,
	87, 12, 87, 14, 87, 598, 11, 87, 3, 87, 3, 87, 3, 87, 3, 87, 3, 87, 3,
	88, 3, 88, 3, 88, 3, 88, 7, 88, 609, 10, 88, 12, 88, 14, 88, 612, 11, 88,
	3, 88, 3, 88, 3, 596, 2, 89, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15,
	9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33,
	18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51,
	27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35, 69,
	36, 71, 37, 73, 38, 75, 39, 77, 40, 79, 41, 81, 42, 83, 43, 85, 44, 87,
	45, 89, 46, 91, 47, 93, 48, 95, 49, 97, 50, 99, 51, 101, 52, 103, 53, 105,
	54, 107, 55, 109, 56, 111, 57, 113, 58, 115, 59, 117, 60, 119, 61, 121,
	62, 123, 63, 125, 64, 127, 65, 129, 66, 131, 67, 133, 68, 135, 69, 137,
	70, 139, 71, 141, 72, 143, 73, 145, 2, 147, 2, 149, 74, 151, 75, 153, 76,
	155, 77, 157, 78, 159, 79, 161, 80, 163, 2, 165, 2, 167, 2, 169, 81, 171,
	82, 173, 83, 175, 84, 3, 2, 16, 5, 2, 67, 92, 97, 97, 99, 124, 3, 2, 50,
	59, 4, 2, 50, 59, 97, 97, 4, 2, 50, 51, 97, 97, 4, 2, 50, 57, 97, 97, 6,
	2, 50, 59, 67, 72, 97, 97, 99, 104, 4, 2, 67, 92, 99, 124, 6, 2, 50, 59,
	67, 92, 97, 97, 99, 124, 6, 2, 12, 12, 15, 15, 36, 36, 94, 94, 9, 2, 36,
	36, 41, 41, 50, 50, 94, 94, 112, 112, 116, 116, 118, 118, 5, 2, 50, 59,
	67, 72, 99, 104, 6, 2, 2, 2, 11, 11, 13, 14, 34, 34, 5, 2, 12, 12, 15,
	15, 8234, 8235, 4, 2, 12, 12, 15, 15, 2, 629, 2, 3, 3, 2, 2, 2, 2, 5, 3,
	2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13,
	3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2,
	21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2,
	2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2,
	2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2,
	2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3,
	2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59,
	3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2,
	67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2,
	2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2,
	2, 2, 83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2,
	2, 2, 2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97, 3,
	2, 2, 2, 2, 99, 3, 2, 2, 2, 2, 101, 3, 2, 2, 2, 2, 103, 3, 2, 2, 2, 2,
	105, 3, 2, 2, 2, 2, 107, 3, 2, 2, 2, 2, 109, 3, 2, 2, 2, 2, 111, 3, 2,
	2, 2, 2, 113, 3, 2, 2, 2, 2, 115, 3, 2, 2, 2, 2, 117, 3, 2, 2, 2, 2, 119,
	3, 2, 2, 2, 2, 121, 3, 2, 2, 2, 2, 123, 3, 2, 2, 2, 2, 125, 3, 2, 2, 2,
	2, 127, 3, 2, 2, 2, 2, 129, 3, 2, 2, 2, 2, 131, 3, 2, 2, 2, 2, 133, 3,
	2, 2, 2, 2, 135, 3, 2, 2, 2, 2, 137, 3, 2, 2, 2, 2, 139, 3, 2, 2, 2, 2,
	141, 3, 2, 2, 2, 2, 143, 3, 2, 2, 2, 2, 149, 3, 2, 2, 2, 2, 151, 3, 2,
	2, 2, 2, 153, 3, 2, 2, 2, 2, 155, 3, 2, 2, 2, 2, 157, 3, 2, 2, 2, 2, 159,
	3, 2, 2, 2, 2, 161, 3, 2, 2, 2, 2, 169, 3, 2, 2, 2, 2, 171, 3, 2, 2, 2,
	2, 173, 3, 2, 2, 2, 2, 175, 3, 2, 2, 2, 3, 177, 3, 2, 2, 2, 5, 179, 3,
	2, 2, 2, 7, 181, 3, 2, 2, 2, 9, 183, 3, 2, 2, 2, 11, 185, 3, 2, 2, 2, 13,
	187, 3, 2, 2, 2, 15, 189, 3, 2, 2, 2, 17, 191, 3, 2, 2, 2, 19, 193, 3,
	2, 2, 2, 21, 197, 3, 2, 2, 2, 23, 199, 3, 2, 2, 2, 25, 202, 3, 2, 2, 2,
	27, 205, 3, 2, 2, 2, 29, 208, 3, 2, 2, 2, 31, 211, 3, 2, 2, 2, 33, 213,
	3, 2, 2, 2, 35, 215, 3, 2, 2, 2, 37, 218, 3, 2, 2, 2, 39, 221, 3, 2, 2,
	2, 41, 223, 3, 2, 2, 2, 43, 225, 3, 2, 2, 2, 45, 227, 3, 2, 2, 2, 47, 229,
	3, 2, 2, 2, 49, 231, 3, 2, 2, 2, 51, 236, 3, 2, 2, 2, 53, 238, 3, 2, 2,
	2, 55, 240, 3, 2, 2, 2, 57, 243, 3, 2, 2, 2, 59, 247, 3, 2, 2, 2, 61, 249,
	3, 2, 2, 2, 63, 253, 3, 2, 2, 2, 65, 256, 3, 2, 2, 2, 67, 260, 3, 2, 2,
	2, 69, 264, 3, 2, 2, 2, 71, 266, 3, 2, 2, 2, 73, 268, 3, 2, 2, 2, 75, 270,
	3, 2, 2, 2, 77, 282, 3, 2, 2, 2, 79, 289, 3, 2, 2, 2, 81, 298, 3, 2, 2,
	2, 83, 307, 3, 2, 2, 2, 85, 317, 3, 2, 2, 2, 87, 321, 3, 2, 2, 2, 89, 327,
	3, 2, 2, 2, 91, 332, 3, 2, 2, 2, 93, 336, 3, 2, 2, 2, 95, 341, 3, 2, 2,
	2, 97, 346, 3, 2, 2, 2, 99, 350, 3, 2, 2, 2, 101, 354, 3, 2, 2, 2, 103,
	361, 3, 2, 2, 2, 105, 365, 3, 2, 2, 2, 107, 370, 3, 2, 2, 2, 109, 378,
	3, 2, 2, 2, 111, 385, 3, 2, 2, 2, 113, 391, 3, 2, 2, 2, 115, 400, 3, 2,
	2, 2, 117, 404, 3, 2, 2, 2, 119, 408, 3, 2, 2, 2, 121, 411, 3, 2, 2, 2,
	123, 416, 3, 2, 2, 2, 125, 422, 3, 2, 2, 2, 127, 426, 3, 2, 2, 2, 129,
	429, 3, 2, 2, 2, 131, 434, 3, 2, 2, 2, 133, 440, 3, 2, 2, 2, 135, 444,
	3, 2, 2, 2, 137, 451, 3, 2, 2, 2, 139, 456, 3, 2, 2, 2, 141, 463, 3, 2,
	2, 2, 143, 471, 3, 2, 2, 2, 145, 479, 3, 2, 2, 2, 147, 483, 3, 2, 2, 2,
	149, 485, 3, 2, 2, 2, 151, 506, 3, 2, 2, 2, 153, 513, 3, 2, 2, 2, 155,
	521, 3, 2, 2, 2, 157, 529, 3, 2, 2, 2, 159, 537, 3, 2, 2, 2, 161, 545,
	3, 2, 2, 2, 163, 556, 3, 2, 2, 2, 165, 571, 3, 2, 2, 2, 167, 573, 3, 2,
	2, 2, 169, 576, 3, 2, 2, 2, 171, 583, 3, 2, 2, 2, 173, 589, 3, 2, 2, 2,
	175, 604, 3, 2, 2, 2, 177, 178, 7, 61, 2, 2, 178, 4, 3, 2, 2, 2, 179, 180,
	7, 125, 2, 2, 180, 6, 3, 2, 2, 2, 181, 182, 7, 127, 2, 2, 182, 8, 3, 2,
	2, 2, 183, 184, 7, 46, 2, 2, 184, 10, 3, 2, 2, 2, 185, 186, 7, 60, 2, 2,
	186, 12, 3, 2, 2, 2, 187, 188, 7, 48, 2, 2, 188, 14, 3, 2, 2, 2, 189, 190,
	7, 93, 2, 2, 190, 16, 3, 2, 2, 2, 191, 192, 7, 95, 2, 2, 192, 18, 3, 2,
	2, 2, 193, 194, 7, 62, 2, 2, 194, 195, 7, 47, 2, 2, 195, 196, 7, 64, 2,
	2, 196, 20, 3, 2, 2, 2, 197, 198, 7, 63, 2, 2, 198, 22, 3, 2, 2, 2, 199,
	200, 7, 126, 2, 2, 200, 201, 7, 126, 2, 2, 201, 24, 3, 2, 2, 2, 202, 203,
	7, 40, 2, 2, 203, 204, 7, 40, 2, 2, 204, 26, 3, 2, 2, 2, 205, 206, 7, 63,
	2, 2, 206, 207, 7, 63, 2, 2, 207, 28, 3, 2, 2, 2, 208, 209, 7, 35, 2, 2,
	209, 210, 7, 63, 2, 2, 210, 30, 3, 2, 2, 2, 211, 212, 7, 62, 2, 2, 212,
	32, 3, 2, 2, 2, 213, 214, 7, 64, 2, 2, 214, 34, 3, 2, 2, 2, 215, 216, 7,
	62, 2, 2, 216, 217, 7, 63, 2, 2, 217, 36, 3, 2, 2, 2, 218, 219, 7, 64,
	2, 2, 219, 220, 7, 63, 2, 2, 220, 38, 3, 2, 2, 2, 221, 222, 7, 45, 2, 2,
	222, 40, 3, 2, 2, 2, 223, 224, 7, 47, 2, 2, 224, 42, 3, 2, 2, 2, 225, 226,
	7, 44, 2, 2, 226, 44, 3, 2, 2, 2, 227, 228, 7, 49, 2, 2, 228, 46, 3, 2,
	2, 2, 229, 230, 7, 39, 2, 2, 230, 48, 3, 2, 2, 2, 231, 232, 7, 99, 2, 2,
	232, 233, 7, 119, 2, 2, 233, 234, 7, 118, 2, 2, 234, 235, 7, 106, 2, 2,
	235, 50, 3, 2, 2, 2, 236, 237, 7, 40, 2, 2, 237, 52, 3, 2, 2, 2, 238, 239,
	7, 35, 2, 2, 239, 54, 3, 2, 2, 2, 240, 241, 7, 62, 2, 2, 241, 242, 7, 47,
	2, 2, 242, 56, 3, 2, 2, 2, 243, 244, 7, 62, 2, 2, 244, 245, 7, 47, 2, 2,
	245, 246, 7, 35, 2, 2, 246, 58, 3, 2, 2, 2, 247, 248, 7, 65, 2, 2, 248,
	60, 3, 2, 2, 2, 249, 250, 5, 169, 85, 2, 250, 251, 7, 65, 2, 2, 251, 252,
	7, 65, 2, 2, 252, 62, 3, 2, 2, 2, 253, 254, 7, 99, 2, 2, 254, 255, 7, 117,
	2, 2, 255, 64, 3, 2, 2, 2, 256, 257, 7, 99, 2, 2, 257, 258, 7, 117, 2,
	2, 258, 259, 7, 65, 2, 2, 259, 66, 3, 2, 2, 2, 260, 261, 7, 99, 2, 2, 261,
	262, 7, 117, 2, 2, 262, 263, 7, 35, 2, 2, 263, 68, 3, 2, 2, 2, 264, 265,
	7, 66, 2, 2, 265, 70, 3, 2, 2, 2, 266, 267, 7, 42, 2, 2, 267, 72, 3, 2,
	2, 2, 268, 269, 7, 43, 2, 2, 269, 74, 3, 2, 2, 2, 270, 271, 7, 118, 2,
	2, 271, 272, 7, 116, 2, 2, 272, 273, 7, 99, 2, 2, 273, 274, 7, 112, 2,
	2, 274, 275, 7, 117, 2, 2, 275, 276, 7, 99, 2, 2, 276, 277, 7, 101, 2,
	2, 277, 278, 7, 118, 2, 2, 278, 279, 7, 107, 2, 2, 279, 280, 7, 113, 2,
	2, 280, 281, 7, 112, 2, 2, 281, 76, 3, 2, 2, 2, 282, 283, 7, 117, 2, 2,
	283, 284, 7, 118, 2, 2, 284, 285, 7, 116, 2, 2, 285, 286, 7, 119, 2, 2,
	286, 287, 7, 101, 2, 2, 287, 288, 7, 118, 2, 2, 288, 78, 3, 2, 2, 2, 289,
	290, 7, 116, 2, 2, 290, 291, 7, 103, 2, 2, 291, 292, 7, 117, 2, 2, 292,
	293, 7, 113, 2, 2, 293, 294, 7, 119, 2, 2, 294, 295, 7, 116, 2, 2, 295,
	296, 7, 101, 2, 2, 296, 297, 7, 103, 2, 2, 297, 80, 3, 2, 2, 2, 298, 299,
	7, 101, 2, 2, 299, 300, 7, 113, 2, 2, 300, 301, 7, 112, 2, 2, 301, 302,
	7, 118, 2, 2, 302, 303, 7, 116, 2, 2, 303, 304, 7, 99, 2, 2, 304, 305,
	7, 101, 2, 2, 305, 306, 7, 118, 2, 2, 306, 82, 3, 2, 2, 2, 307, 308, 7,
	107, 2, 2, 308, 309, 7, 112, 2, 2, 309, 310, 7, 118, 2, 2, 310, 311, 7,
	103, 2, 2, 311, 312, 7, 116, 2, 2, 312, 313, 7, 104, 2, 2, 313, 314, 7,
	99, 2, 2, 314, 315, 7, 101, 2, 2, 315, 316, 7, 103, 2, 2, 316, 84, 3, 2,
	2, 2, 317, 318, 7, 104, 2, 2, 318, 319, 7, 119, 2, 2, 319, 320, 7, 112,
	2, 2, 320, 86, 3, 2, 2, 2, 321, 322, 7, 103, 2, 2, 322, 323, 7, 120, 2,
	2, 323, 324, 7, 103, 2, 2, 324, 325, 7, 112, 2, 2, 325, 326, 7, 118, 2,
	2, 326, 88, 3, 2, 2, 2, 327, 328, 7, 103, 2, 2, 328, 329, 7, 111, 2, 2,
	329, 330, 7, 107, 2, 2, 330, 331, 7, 118, 2, 2, 331, 90, 3, 2, 2, 2, 332,
	333, 7, 114, 2, 2, 333, 334, 7, 116, 2, 2, 334, 335, 7, 103, 2, 2, 335,
	92, 3, 2, 2, 2, 336, 337, 7, 114, 2, 2, 337, 338, 7, 113, 2, 2, 338, 339,
	7, 117, 2, 2, 339, 340, 7, 118, 2, 2, 340, 94, 3, 2, 2, 2, 341, 342, 7,
	114, 2, 2, 342, 343, 7, 116, 2, 2, 343, 344, 7, 107, 2, 2, 344, 345, 7,
	120, 2, 2, 345, 96, 3, 2, 2, 2, 346, 347, 7, 114, 2, 2, 347, 348, 7, 119,
	2, 2, 348, 349, 7, 100, 2, 2, 349, 98, 3, 2, 2, 2, 350, 351, 7, 117, 2,
	2, 351, 352, 7, 103, 2, 2, 352, 353, 7, 118, 2, 2, 353, 100, 3, 2, 2, 2,
	354, 355, 7, 99, 2, 2, 355, 356, 7, 101, 2, 2, 356, 357, 7, 101, 2, 2,
	357, 358, 7, 103, 2, 2, 358, 359, 7, 117, 2, 2, 359, 360, 7, 117, 2, 2,
	360, 102, 3, 2, 2, 2, 361, 362, 7, 99, 2, 2, 362, 363, 7, 110, 2, 2, 363,
	364, 7, 110, 2, 2, 364, 104, 3, 2, 2, 2, 365, 366, 7, 117, 2, 2, 366, 367,
	7, 103, 2, 2, 367, 368, 7, 110, 2, 2, 368, 369, 7, 104, 2, 2, 369, 106,
	3, 2, 2, 2, 370, 371, 7, 99, 2, 2, 371, 372, 7, 101, 2, 2, 372, 373, 7,
	101, 2, 2, 373, 374, 7, 113, 2, 2, 374, 375, 7, 119, 2, 2, 375, 376, 7,
	112, 2, 2, 376, 377, 7, 118, 2, 2, 377, 108, 3, 2, 2, 2, 378, 379, 7, 116,
	2, 2, 379, 380, 7, 103, 2, 2, 380, 381, 7, 118, 2, 2, 381, 382, 7, 119,
	2, 2, 382, 383, 7, 116, 2, 2, 383, 384, 7, 112, 2, 2, 384, 110, 3, 2, 2,
	2, 385, 386, 7, 100, 2, 2, 386, 387, 7, 116, 2, 2, 387, 388, 7, 103, 2,
	2, 388, 389, 7, 99, 2, 2, 389, 390, 7, 109, 2, 2, 390, 112, 3, 2, 2, 2,
	391, 392, 7, 101, 2, 2, 392, 393, 7, 113, 2, 2, 393, 394, 7, 112, 2, 2,
	394, 395, 7, 118, 2, 2, 395, 396, 7, 107, 2, 2, 396, 397, 7, 112, 2, 2,
	397, 398, 7, 119, 2, 2, 398, 399, 7, 103, 2, 2, 399, 114, 3, 2, 2, 2, 400,
	401, 7, 110, 2, 2, 401, 402, 7, 103, 2, 2, 402, 403, 7, 118, 2, 2, 403,
	116, 3, 2, 2, 2, 404, 405, 7, 120, 2, 2, 405, 406, 7, 99, 2, 2, 406, 407,
	7, 116, 2, 2, 407, 118, 3, 2, 2, 2, 408, 409, 7, 107, 2, 2, 409, 410, 7,
	104, 2, 2, 410, 120, 3, 2, 2, 2, 411, 412, 7, 103, 2, 2, 412, 413, 7, 110,
	2, 2, 413, 414, 7, 117, 2, 2, 414, 415, 7, 103, 2, 2, 415, 122, 3, 2, 2,
	2, 416, 417, 7, 121, 2, 2, 417, 418, 7, 106, 2, 2, 418, 419, 7, 107, 2,
	2, 419, 420, 7, 110, 2, 2, 420, 421, 7, 103, 2, 2, 421, 124, 3, 2, 2, 2,
	422, 423, 7, 104, 2, 2, 423, 424, 7, 113, 2, 2, 424, 425, 7, 116, 2, 2,
	425, 126, 3, 2, 2, 2, 426, 427, 7, 107, 2, 2, 427, 428, 7, 112, 2, 2, 428,
	128, 3, 2, 2, 2, 429, 430, 7, 118, 2, 2, 430, 431, 7, 116, 2, 2, 431, 432,
	7, 119, 2, 2, 432, 433, 7, 103, 2, 2, 433, 130, 3, 2, 2, 2, 434, 435, 7,
	104, 2, 2, 435, 436, 7, 99, 2, 2, 436, 437, 7, 110, 2, 2, 437, 438, 7,
	117, 2, 2, 438, 439, 7, 103, 2, 2, 439, 132, 3, 2, 2, 2, 440, 441, 7, 112,
	2, 2, 441, 442, 7, 107, 2, 2, 442, 443, 7, 110, 2, 2, 443, 134, 3, 2, 2,
	2, 444, 445, 7, 107, 2, 2, 445, 446, 7, 111, 2, 2, 446, 447, 7, 114, 2,
	2, 447, 448, 7, 113, 2, 2, 448, 449, 7, 116, 2, 2, 449, 450, 7, 118, 2,
	2, 450, 136, 3, 2, 2, 2, 451, 452, 7, 104, 2, 2, 452, 453, 7, 116, 2, 2,
	453, 454, 7, 113, 2, 2, 454, 455, 7, 111, 2, 2, 455, 138, 3, 2, 2, 2, 456,
	457, 7, 101, 2, 2, 457, 458, 7, 116, 2, 2, 458, 459, 7, 103, 2, 2, 459,
	460, 7, 99, 2, 2, 460, 461, 7, 118, 2, 2, 461, 462, 7, 103, 2, 2, 462,
	140, 3, 2, 2, 2, 463, 464, 7, 102, 2, 2, 464, 465, 7, 103, 2, 2, 465, 466,
	7, 117, 2, 2, 466, 467, 7, 118, 2, 2, 467, 468, 7, 116, 2, 2, 468, 469,
	7, 113, 2, 2, 469, 470, 7, 123, 2, 2, 470, 142, 3, 2, 2, 2, 471, 475, 5,
	145, 73, 2, 472, 474, 5, 147, 74, 2, 473, 472, 3, 2, 2, 2, 474, 477, 3,
	2, 2, 2, 475, 473, 3, 2, 2, 2, 475, 476, 3, 2, 2, 2, 476, 144, 3, 2, 2,
	2, 477, 475, 3, 2, 2, 2, 478, 480, 9, 2, 2, 2, 479, 478, 3, 2, 2, 2, 480,
	146, 3, 2, 2, 2, 481, 484, 9, 3, 2, 2, 482, 484, 5, 145, 73, 2, 483, 481,
	3, 2, 2, 2, 483, 482, 3, 2, 2, 2, 484, 148, 3, 2, 2, 2, 485, 493, 9, 3,
	2, 2, 486, 488, 9, 4, 2, 2, 487, 486, 3, 2, 2, 2, 488, 491, 3, 2, 2, 2,
	489, 487, 3, 2, 2, 2, 489, 490, 3, 2, 2, 2, 490, 492, 3, 2, 2, 2, 491,
	489, 3, 2, 2, 2, 492, 494, 9, 3, 2, 2, 493, 489, 3, 2, 2, 2, 493, 494,
	3, 2, 2, 2, 494, 495, 3, 2, 2, 2, 495, 496, 7, 48, 2, 2, 496, 504, 9, 3,
	2, 2, 497, 499, 9, 4, 2, 2, 498, 497, 3, 2, 2, 2, 499, 502, 3, 2, 2, 2,
	500, 498, 3, 2, 2, 2, 500, 501, 3, 2, 2, 2, 501, 503, 3, 2, 2, 2, 502,
	500, 3, 2, 2, 2, 503, 505, 9, 3, 2, 2, 504, 500, 3, 2, 2, 2, 504, 505,
	3, 2, 2, 2, 505, 150, 3, 2, 2, 2, 506, 510, 9, 3, 2, 2, 507, 509, 9, 4,
	2, 2, 508, 507, 3, 2, 2, 2, 509, 512, 3, 2, 2, 2, 510, 508, 3, 2, 2, 2,
	510, 511, 3, 2, 2, 2, 511, 152, 3, 2, 2, 2, 512, 510, 3, 2, 2, 2, 513,
	514, 7, 50, 2, 2, 514, 515, 7, 100, 2, 2, 515, 517, 3, 2, 2, 2, 516, 518,
	9, 5, 2, 2, 517, 516, 3, 2, 2, 2, 518, 519, 3, 2, 2, 2, 519, 517, 3, 2,
	2, 2, 519, 520, 3, 2, 2, 2, 520, 154, 3, 2, 2, 2, 521, 522, 7, 50, 2, 2,
	522, 523, 7, 113, 2, 2, 523, 525, 3, 2, 2, 2, 524, 526, 9, 6, 2, 2, 525,
	524, 3, 2, 2, 2, 526, 527, 3, 2, 2, 2, 527, 525, 3, 2, 2, 2, 527, 528,
	3, 2, 2, 2, 528, 156, 3, 2, 2, 2, 529, 530, 7, 50, 2, 2, 530, 531, 7, 122,
	2, 2, 531, 533, 3, 2, 2, 2, 532, 534, 9, 7, 2, 2, 533, 532, 3, 2, 2, 2,
	534, 535, 3, 2, 2, 2, 535, 533, 3, 2, 2, 2, 535, 536, 3, 2, 2, 2, 536,
	158, 3, 2, 2, 2, 537, 538, 7, 50, 2, 2, 538, 542, 9, 8, 2, 2, 539, 541,
	9, 9, 2, 2, 540, 539, 3, 2, 2, 2, 541, 544, 3, 2, 2, 2, 542, 540, 3, 2,
	2, 2, 542, 543, 3, 2, 2, 2, 543, 160, 3, 2, 2, 2, 544, 542, 3, 2, 2, 2,
	545, 549, 7, 36, 2, 2, 546, 548, 5, 163, 82, 2, 547, 546, 3, 2, 2, 2, 548,
	551, 3, 2, 2, 2, 549, 547, 3, 2, 2, 2, 549, 550, 3, 2, 2, 2, 550, 552,
	3, 2, 2, 2, 551, 549, 3, 2, 2, 2, 552, 553, 7, 36, 2, 2, 553, 162, 3, 2,
	2, 2, 554, 557, 5, 165, 83, 2, 555, 557, 10, 10, 2, 2, 556, 554, 3, 2,
	2, 2, 556, 555, 3, 2, 2, 2, 557, 164, 3, 2, 2, 2, 558, 559, 7, 94, 2, 2,
	559, 572, 9, 11, 2, 2, 560, 561, 7, 94, 2, 2, 561, 562, 7, 119, 2, 2, 562,
	563, 3, 2, 2, 2, 563, 565, 7, 125, 2, 2, 564, 566, 5, 167, 84, 2, 565,
	564, 3, 2, 2, 2, 566, 567, 3, 2, 2, 2, 567, 565, 3, 2, 2, 2, 567, 568,
	3, 2, 2, 2, 568, 569, 3, 2, 2, 2, 569, 570, 7, 127, 2, 2, 570, 572, 3,
	2, 2, 2, 571, 558, 3, 2, 2, 2, 571, 560, 3, 2, 2, 2, 572, 166, 3, 2, 2,
	2, 573, 574, 9, 12, 2, 2, 574, 168, 3, 2, 2, 2, 575, 577, 9, 13, 2, 2,
	576, 575, 3, 2, 2, 2, 577, 578, 3, 2, 2, 2, 578, 576, 3, 2, 2, 2, 578,
	579, 3, 2, 2, 2, 579, 580, 3, 2, 2, 2, 580, 581, 8, 85, 2, 2, 581, 170,
	3, 2, 2, 2, 582, 584, 9, 14, 2, 2, 583, 582, 3, 2, 2, 2, 584, 585, 3, 2,
	2, 2, 585, 583, 3, 2, 2, 2, 585, 586, 3, 2, 2, 2, 586, 587, 3, 2, 2, 2,
	587, 588, 8, 86, 2, 2, 588, 172, 3, 2, 2, 2, 589, 590, 7, 49, 2, 2, 590,
	591, 7, 44, 2, 2, 591, 596, 3, 2, 2, 2, 592, 595, 5, 173, 87, 2, 593, 595,
	11, 2, 2, 2, 594, 592, 3, 2, 2, 2, 594, 593, 3, 2, 2, 2, 595, 598, 3, 2,
	2, 2, 596, 597, 3, 2, 2, 2, 596, 594, 3, 2, 2, 2, 597, 599, 3, 2, 2, 2,
	598, 596, 3, 2, 2, 2, 599, 600, 7, 44, 2, 2, 600, 601, 7, 49, 2, 2, 601,
	602, 3, 2, 2, 2, 602, 603, 8, 87, 2, 2, 603, 174, 3, 2, 2, 2, 604, 605,
	7, 49, 2, 2, 605, 606, 7, 49, 2, 2, 606, 610, 3, 2, 2, 2, 607, 609, 10,
	15, 2, 2, 608, 607, 3, 2, 2, 2, 609, 612, 3, 2, 2, 2, 610, 608, 3, 2, 2,
	2, 610, 611, 3, 2, 2, 2, 611, 613, 3, 2, 2, 2, 612, 610, 3, 2, 2, 2, 613,
	614, 8, 88, 2, 2, 614, 176, 3, 2, 2, 2, 24, 2, 475, 479, 483, 489, 493,
	500, 504, 510, 519, 527, 535, 542, 549, 556, 567, 571, 578, 585, 594, 596,
	610, 3, 2, 3, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "';'", "'{'", "'}'", "','", "':'", "'.'", "'['", "']'", "'<->'", "'='",
	"'||'", "'&&'", "'=='", "'!='", "'<'", "'>'", "'<='", "'>='", "'+'", "'-'",
	"'*'", "'/'", "'%'", "'auth'", "'&'", "'!'", "'<-'", "'<-!'", "'?'", "",
	"'as'", "'as?'", "'as!'", "'@'", "'('", "')'", "'transaction'", "'struct'",
	"'resource'", "'contract'", "'interface'", "'fun'", "'event'", "'emit'",
	"'pre'", "'post'", "'priv'", "'pub'", "'set'", "'access'", "'all'", "'self'",
	"'account'", "'return'", "'break'", "'continue'", "'let'", "'var'", "'if'",
	"'else'", "'while'", "'for'", "'in'", "'true'", "'false'", "'nil'", "'import'",
	"'from'", "'create'", "'destroy'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "Equal", "Unequal",
	"Less", "Greater", "LessEqual", "GreaterEqual", "Plus", "Minus", "Mul",
	"Div", "Mod", "Auth", "Ampersand", "Negate", "Move", "MoveForced", "Optional",
	"NilCoalescing", "Casting", "FailableCasting", "ForceCasting", "ResourceAnnotation",
	"OpenParen", "CloseParen", "Transaction", "Struct", "Resource", "Contract",
	"Interface", "Fun", "Event", "Emit", "Pre", "Post", "Priv", "Pub", "Set",
	"Access", "All", "Self", "Account", "Return", "Break", "Continue", "Let",
	"Var", "If", "Else", "While", "For", "In", "True", "False", "Nil", "Import",
	"From", "Create", "Destroy", "Identifier", "PositiveFixedPointLiteral",
	"DecimalLiteral", "BinaryLiteral", "OctalLiteral", "HexadecimalLiteral",
	"InvalidNumberLiteral", "StringLiteral", "WS", "Terminator", "BlockComment",
	"LineComment",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "Equal", "Unequal", "Less", "Greater", "LessEqual",
	"GreaterEqual", "Plus", "Minus", "Mul", "Div", "Mod", "Auth", "Ampersand",
	"Negate", "Move", "MoveForced", "Optional", "NilCoalescing", "Casting",
	"FailableCasting", "ForceCasting", "ResourceAnnotation", "OpenParen", "CloseParen",
	"Transaction", "Struct", "Resource", "Contract", "Interface", "Fun", "Event",
	"Emit", "Pre", "Post", "Priv", "Pub", "Set", "Access", "All", "Self", "Account",
	"Return", "Break", "Continue", "Let", "Var", "If", "Else", "While", "For",
	"In", "True", "False", "Nil", "Import", "From", "Create", "Destroy", "Identifier",
	"IdentifierHead", "IdentifierCharacter", "PositiveFixedPointLiteral", "DecimalLiteral",
	"BinaryLiteral", "OctalLiteral", "HexadecimalLiteral", "InvalidNumberLiteral",
	"StringLiteral", "QuotedText", "EscapedCharacter", "HexadecimalDigit",
	"WS", "Terminator", "BlockComment", "LineComment",
}

type CadenceLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewCadenceLexer(input antlr.CharStream) *CadenceLexer {

	l := new(CadenceLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Cadence.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// CadenceLexer tokens.
const (
	CadenceLexerT__0                      = 1
	CadenceLexerT__1                      = 2
	CadenceLexerT__2                      = 3
	CadenceLexerT__3                      = 4
	CadenceLexerT__4                      = 5
	CadenceLexerT__5                      = 6
	CadenceLexerT__6                      = 7
	CadenceLexerT__7                      = 8
	CadenceLexerT__8                      = 9
	CadenceLexerT__9                      = 10
	CadenceLexerT__10                     = 11
	CadenceLexerT__11                     = 12
	CadenceLexerEqual                     = 13
	CadenceLexerUnequal                   = 14
	CadenceLexerLess                      = 15
	CadenceLexerGreater                   = 16
	CadenceLexerLessEqual                 = 17
	CadenceLexerGreaterEqual              = 18
	CadenceLexerPlus                      = 19
	CadenceLexerMinus                     = 20
	CadenceLexerMul                       = 21
	CadenceLexerDiv                       = 22
	CadenceLexerMod                       = 23
	CadenceLexerAuth                      = 24
	CadenceLexerAmpersand                 = 25
	CadenceLexerNegate                    = 26
	CadenceLexerMove                      = 27
	CadenceLexerMoveForced                = 28
	CadenceLexerOptional                  = 29
	CadenceLexerNilCoalescing             = 30
	CadenceLexerCasting                   = 31
	CadenceLexerFailableCasting           = 32
	CadenceLexerForceCasting              = 33
	CadenceLexerResourceAnnotation        = 34
	CadenceLexerOpenParen                 = 35
	CadenceLexerCloseParen                = 36
	CadenceLexerTransaction               = 37
	CadenceLexerStruct                    = 38
	CadenceLexerResource                  = 39
	CadenceLexerContract                  = 40
	CadenceLexerInterface                 = 41
	CadenceLexerFun                       = 42
	CadenceLexerEvent                     = 43
	CadenceLexerEmit                      = 44
	CadenceLexerPre                       = 45
	CadenceLexerPost                      = 46
	CadenceLexerPriv                      = 47
	CadenceLexerPub                       = 48
	CadenceLexerSet                       = 49
	CadenceLexerAccess                    = 50
	CadenceLexerAll                       = 51
	CadenceLexerSelf                      = 52
	CadenceLexerAccount                   = 53
	CadenceLexerReturn                    = 54
	CadenceLexerBreak                     = 55
	CadenceLexerContinue                  = 56
	CadenceLexerLet                       = 57
	CadenceLexerVar                       = 58
	CadenceLexerIf                        = 59
	CadenceLexerElse                      = 60
	CadenceLexerWhile                     = 61
	CadenceLexerFor                       = 62
	CadenceLexerIn                        = 63
	CadenceLexerTrue                      = 64
	CadenceLexerFalse                     = 65
	CadenceLexerNil                       = 66
	CadenceLexerImport                    = 67
	CadenceLexerFrom                      = 68
	CadenceLexerCreate                    = 69
	CadenceLexerDestroy                   = 70
	CadenceLexerIdentifier                = 71
	CadenceLexerPositiveFixedPointLiteral = 72
	CadenceLexerDecimalLiteral            = 73
	CadenceLexerBinaryLiteral             = 74
	CadenceLexerOctalLiteral              = 75
	CadenceLexerHexadecimalLiteral        = 76
	CadenceLexerInvalidNumberLiteral      = 77
	CadenceLexerStringLiteral             = 78
	CadenceLexerWS                        = 79
	CadenceLexerTerminator                = 80
	CadenceLexerBlockComment              = 81
	CadenceLexerLineComment               = 82
)
