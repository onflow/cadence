/*
 * Cadence - The resource-oriented smart contract programming language
 *
 * Copyright 2019-2020 Dapper Labs, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by "stringer -type=Operation"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OperationUnknown-0]
	_ = x[OperationOr-1]
	_ = x[OperationAnd-2]
	_ = x[OperationEqual-3]
	_ = x[OperationUnequal-4]
	_ = x[OperationLess-5]
	_ = x[OperationGreater-6]
	_ = x[OperationLessEqual-7]
	_ = x[OperationGreaterEqual-8]
	_ = x[OperationPlus-9]
	_ = x[OperationMinus-10]
	_ = x[OperationMul-11]
	_ = x[OperationDiv-12]
	_ = x[OperationMod-13]
	_ = x[OperationConcat-14]
	_ = x[OperationNegate-15]
	_ = x[OperationNilCoalesce-16]
	_ = x[OperationMove-17]
	_ = x[OperationCast-18]
	_ = x[OperationFailableCast-19]
	_ = x[OperationForceCast-20]
}

const _Operation_name = "OperationUnknownOperationOrOperationAndOperationEqualOperationUnequalOperationLessOperationGreaterOperationLessEqualOperationGreaterEqualOperationPlusOperationMinusOperationMulOperationDivOperationModOperationConcatOperationNegateOperationNilCoalesceOperationMoveOperationCastOperationFailableCastOperationForceCast"

var _Operation_index = [...]uint16{0, 16, 27, 39, 53, 69, 82, 98, 116, 137, 150, 164, 176, 188, 200, 215, 230, 250, 263, 276, 297, 315}

func (i Operation) String() string {
	if i < 0 || i >= Operation(len(_Operation_index)-1) {
		return "Operation(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Operation_name[_Operation_index[i]:_Operation_index[i+1]]
}
