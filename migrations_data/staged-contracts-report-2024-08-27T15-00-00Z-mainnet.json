[{"kind":"contract-update-success","account_address":"0x20187093790b9aef","contract_name":"Gamisodes"},{"kind":"contract-update-success","account_address":"0x20187093790b9aef","contract_name":"Lufthaus"},{"kind":"contract-update-success","account_address":"0xe4cf4bdc1751c65d","contract_name":"AllDay"},{"kind":"contract-update-failure","account_address":"0xe4cf4bdc1751c65d","contract_name":"PackNFT","error":"error: error getting program 18ddf0823a55a0ee.IPackNFT: failed to derive value: load program failed: Parsing failed:\nerror: `pub` is no longer a valid access keyword\n --\u003e :4:0\n  |\n4 | pub contract interface IPackNFT{\n  | ^^^\n\nerror: `pub` is no longer a valid access keyword\n --\u003e :7:4\n  |\n7 |     pub let CollectionStoragePath: StoragePath\n  |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :10:4\n   |\n10 |     pub let CollectionPublicPath: PublicPath\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :13:4\n   |\n13 |     pub let CollectionIPackNFTPublicPath: PublicPath\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :16:4\n   |\n16 |     pub let OperatorStoragePath: StoragePath\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :19:4\n   |\n19 |     pub let OperatorPrivPath: PrivatePath\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :22:4\n   |\n22 |     pub event RevealRequest(id: UInt64, openRequest: Bool)\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :27:4\n   |\n27 |     pub event OpenRequest(id: UInt64)\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :31:4\n   |\n31 |     pub event Burned(id: UInt64 )\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :35:4\n   |\n35 |     pub event Opened(id: UInt64)\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :37:4\n   |\n37 |     pub enum Status: UInt8 {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :38:8\n   |\n38 |         pub case Sealed\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :39:8\n   |\n39 |         pub case Revealed\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :40:8\n   |\n40 |         pub case Opened\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :43:4\n   |\n43 |     pub struct interface Collectible {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :44:8\n   |\n44 |         pub let address: Address\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :45:8\n   |\n45 |         pub let contractName: String\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :46:8\n   |\n46 |         pub let id: UInt64\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :47:8\n   |\n47 |         pub fun hashString(): String\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :51:4\n   |\n51 |     pub resource interface IPack {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :52:8\n   |\n52 |         pub let issuer: Address\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :53:8\n   |\n53 |         pub var status: Status\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :55:8\n   |\n55 |         pub fun verify(nftString: String): Bool\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :62:4\n   |\n62 |     pub resource interface IOperator {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :63:8\n   |\n63 |         pub fun mint(distId: UInt64, commitHash: String, issuer: Address): @NFT\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :64:8\n   |\n64 |         pub fun reveal(id: UInt64, nfts: [{Collectible}], salt: String)\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :65:8\n   |\n65 |         pub fun open(id: UInt64, nfts: [{IPackNFT.Collectible}])\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :67:4\n   |\n67 |     pub resource PackNFTOperator: IOperator {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :68:8\n   |\n68 |         pub fun mint(distId: UInt64, commitHash: String, issuer: Address): @NFT\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :69:8\n   |\n69 |         pub fun reveal(id: UInt64, nfts: [{Collectible}], salt: String)\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :70:8\n   |\n70 |         pub fun open(id: UInt64, nfts: [{IPackNFT.Collectible}])\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :73:4\n   |\n73 |     pub resource interface IPackNFTToken {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :74:8\n   |\n74 |         pub let id: UInt64\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :75:8\n   |\n75 |         pub let issuer: Address\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :78:4\n   |\n78 |     pub resource NFT: NonFungibleToken.INFT, IPackNFTToken, IPackNFTOwnerOperator{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :79:8\n   |\n79 |         pub let id: UInt64\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :80:8\n   |\n80 |         pub let issuer: Address\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :81:8\n   |\n81 |         pub fun reveal(openRequest: Bool)\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :82:8\n   |\n82 |         pub fun open()\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :85:4\n   |\n85 |     pub resource interface IPackNFTOwnerOperator{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :86:8\n   |\n86 |         pub fun reveal(openRequest: Bool)\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :87:8\n   |\n87 |         pub fun open()\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :90:4\n   |\n90 |     pub resource interface IPackNFTCollectionPublic {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :91:8\n   |\n91 |         pub fun deposit(token: @NonFungibleToken.NFT)\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :92:8\n   |\n92 |         pub fun getIDs(): [UInt64]\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :93:8\n   |\n93 |         pub fun borrowNFT(id: UInt64): \u0026NonFungibleToken.NFT\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :98:4\n   |\n98 |     pub fun publicReveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String)\n   |     ^^^\n\n--\u003e 18ddf0823a55a0ee.IPackNFT\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e e4cf4bdc1751c65d.PackNFT:10:48\n   |\n10 | access(all) contract PackNFT: NonFungibleToken, IPackNFT {\n   |                                                 ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e e4cf4bdc1751c65d.PackNFT:47:42\n   |\n47 |     access(all) resource PackNFTOperator: IPackNFT.IOperator {\n   |                                           ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e e4cf4bdc1751c65d.PackNFT:146:75\n    |\n146 |     access(all) resource NFT: NonFungibleToken.NFT, ViewResolver.Resolver, IPackNFT.NFT, IPackNFT.IPackNFTToken, IPackNFT.IPackNFTOwnerOperator {\n    |                                                                            ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e e4cf4bdc1751c65d.PackNFT:146:89\n    |\n146 |     access(all) resource NFT: NonFungibleToken.NFT, ViewResolver.Resolver, IPackNFT.NFT, IPackNFT.IPackNFTToken, IPackNFT.IPackNFTOwnerOperator {\n    |                                                                                          ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e e4cf4bdc1751c65d.PackNFT:146:113\n    |\n146 |     access(all) resource NFT: NonFungibleToken.NFT, ViewResolver.Resolver, IPackNFT.NFT, IPackNFT.IPackNFTToken, IPackNFT.IPackNFTOwnerOperator {\n    |                                                                                                                  ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e e4cf4bdc1751c65d.PackNFT:287:99\n    |\n287 |     access(all) resource Collection: NonFungibleToken.Collection, ViewResolver.ResolverCollection, IPackNFT.IPackNFTCollectionPublic {\n    |                                                                                                    ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e e4cf4bdc1751c65d.PackNFT:52:15\n   |\n52 |         access(IPackNFT.Operate) fun mint(distId: UInt64, commitHash: String, issuer: Address): @{IPackNFT.NFT} {\n   |                ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e e4cf4bdc1751c65d.PackNFT:52:98\n   |\n52 |         access(IPackNFT.Operate) fun mint(distId: UInt64, commitHash: String, issuer: Address): @{IPackNFT.NFT} {\n   |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n  --\u003e e4cf4bdc1751c65d.PackNFT:52:97\n   |\n52 |         access(IPackNFT.Operate) fun mint(distId: UInt64, commitHash: String, issuer: Address): @{IPackNFT.NFT} {\n   |                                                                                                  ^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e e4cf4bdc1751c65d.PackNFT:63:15\n   |\n63 |         access(IPackNFT.Operate) fun reveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String) {\n   |                ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e e4cf4bdc1751c65d.PackNFT:63:64\n   |\n63 |         access(IPackNFT.Operate) fun reveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String) {\n   |                                                                 ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n  --\u003e e4cf4bdc1751c65d.PackNFT:63:63\n   |\n63 |         access(IPackNFT.Operate) fun reveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String) {\n   |                                                                ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e e4cf4bdc1751c65d.PackNFT:71:15\n   |\n71 |         access(IPackNFT.Operate) fun open(id: UInt64, nfts: [{IPackNFT.Collectible}]) {\n   |                ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e e4cf4bdc1751c65d.PackNFT:71:62\n   |\n71 |         access(IPackNFT.Operate) fun open(id: UInt64, nfts: [{IPackNFT.Collectible}]) {\n   |                                                               ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n  --\u003e e4cf4bdc1751c65d.PackNFT:71:61\n   |\n71 |         access(IPackNFT.Operate) fun open(id: UInt64, nfts: [{IPackNFT.Collectible}]) {\n   |                                                              ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e e4cf4bdc1751c65d.PackNFT:99:41\n   |\n99 |         access(self) fun _verify(nfts: [{IPackNFT.Collectible}], salt: String, commitHash: String): String {\n   |                                          ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n  --\u003e e4cf4bdc1751c65d.PackNFT:99:40\n   |\n99 |         access(self) fun _verify(nfts: [{IPackNFT.Collectible}], salt: String, commitHash: String): String {\n   |                                         ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e e4cf4bdc1751c65d.PackNFT:114:56\n    |\n114 |         access(contract) fun reveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String) {\n    |                                                         ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e e4cf4bdc1751c65d.PackNFT:114:55\n    |\n114 |         access(contract) fun reveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String) {\n    |                                                        ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e e4cf4bdc1751c65d.PackNFT:122:54\n    |\n122 |         access(contract) fun open(id: UInt64, nfts: [{IPackNFT.Collectible}]) {\n    |                                                       ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e e4cf4bdc1751c65d.PackNFT:122:53\n    |\n122 |         access(contract) fun open(id: UInt64, nfts: [{IPackNFT.Collectible}]) {\n    |                                                      ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e e4cf4bdc1751c65d.PackNFT:384:53\n    |\n384 |     access(all) fun publicReveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String) {\n    |                                                      ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e e4cf4bdc1751c65d.PackNFT:384:52\n    |\n384 |     access(all) fun publicReveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String) {\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e e4cf4bdc1751c65d.PackNFT:487:54\n    |\n487 |             self.account.capabilities.storage.issue\u003c\u0026{IPackNFT.IPackNFTCollectionPublic}\u003e(self.CollectionStoragePath),\n    |                                                       ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e e4cf4bdc1751c65d.PackNFT:487:53\n    |\n487 |             self.account.capabilities.storage.issue\u003c\u0026{IPackNFT.IPackNFTCollectionPublic}\u003e(self.CollectionStoragePath),\n    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot infer type parameter: `T`\n   --\u003e e4cf4bdc1751c65d.PackNFT:487:12\n    |\n487 |             self.account.capabilities.storage.issue\u003c\u0026{IPackNFT.IPackNFTCollectionPublic}\u003e(self.CollectionStoragePath),\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e e4cf4bdc1751c65d.PackNFT:493:50\n    |\n493 |         self.account.capabilities.storage.issue\u003c\u0026{IPackNFT.IOperator}\u003e(self.OperatorStoragePath)\n    |                                                   ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e e4cf4bdc1751c65d.PackNFT:493:49\n    |\n493 |         self.account.capabilities.storage.issue\u003c\u0026{IPackNFT.IOperator}\u003e(self.OperatorStoragePath)\n    |                                                  ^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot infer type parameter: `T`\n   --\u003e e4cf4bdc1751c65d.PackNFT:493:8\n    |\n493 |         self.account.capabilities.storage.issue\u003c\u0026{IPackNFT.IOperator}\u003e(self.OperatorStoragePath)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x0b2a3299cc857e29","contract_name":"FastBreakV1"},{"kind":"contract-update-success","account_address":"0x0b2a3299cc857e29","contract_name":"TopShot"},{"kind":"contract-update-success","account_address":"0x1e3c78c6d580273b","contract_name":"LNVCT"},{"kind":"contract-update-success","account_address":"0x30cf5dcf6ea8d379","contract_name":"AeraNFT"},{"kind":"contract-update-success","account_address":"0x87ca73a41bb50ad5","contract_name":"Golazos"},{"kind":"contract-update-success","account_address":"0x0b2a3299cc857e29","contract_name":"TopShotLocking"},{"kind":"contract-update-success","account_address":"0x30cf5dcf6ea8d379","contract_name":"AeraPanels"},{"kind":"contract-update-success","account_address":"0x30cf5dcf6ea8d379","contract_name":"AeraRewards"},{"kind":"contract-update-success","account_address":"0x4eded0de73020ca5","contract_name":"CricketMoments"},{"kind":"contract-update-success","account_address":"0x20187093790b9aef","contract_name":"MintStoreItem"},{"kind":"contract-update-success","account_address":"0x20187093790b9aef","contract_name":"OpenLockerInc"},{"kind":"contract-update-success","account_address":"0x20187093790b9aef","contract_name":"OpenLockerIncBoneYardHuskyzClub"},{"kind":"contract-update-success","account_address":"0x20187093790b9aef","contract_name":"Pickem"},{"kind":"contract-update-success","account_address":"0x20187093790b9aef","contract_name":"YBees"},{"kind":"contract-update-success","account_address":"0x4eded0de73020ca5","contract_name":"CricketMomentsShardedCollection"},{"kind":"contract-update-success","account_address":"0x4eded0de73020ca5","contract_name":"FazeUtilityCoin"},{"kind":"contract-update-success","account_address":"0x20187093790b9aef","contract_name":"YoungBoysBern"},{"kind":"contract-update-success","account_address":"0xcee3d6cc34301ad1","contract_name":"FriendsOfFlow_NFT"},{"kind":"contract-update-success","account_address":"0x058ab2d5d9808702","contract_name":"BLUES"},{"kind":"contract-update-success","account_address":"0x60aaf93a2f797d71","contract_name":"theskinners_NFT"},{"kind":"contract-update-success","account_address":"0xbce6f629727fe9be","contract_name":"maemae87_NFT"},{"kind":"contract-update-success","account_address":"0xb8b5e0265dddedb7","contract_name":"nia_NFT"},{"kind":"contract-update-success","account_address":"0x9f0ecd309ee2aaf1","contract_name":"thrumylens_NFT"},{"kind":"contract-update-success","account_address":"0xa45c1d46540e557c","contract_name":"foolishness_NFT"},{"kind":"contract-update-success","account_address":"0xf73e0fd008530399","contract_name":"percilla1933_NFT"},{"kind":"contract-update-success","account_address":"0xbc5564c574925b39","contract_name":"noora_NFT"},{"kind":"contract-update-success","account_address":"0x80473a044b2525cb","contract_name":"_1videoartist_NFT"},{"kind":"contract-update-success","account_address":"0xf68100d5487b1938","contract_name":"travelrelics_NFT"},{"kind":"contract-update-success","account_address":"0xb05a7e5711690379","contract_name":"wexsra_NFT"},{"kind":"contract-update-success","account_address":"0x38ac89f6e76df59c","contract_name":"mlknjd_NFT"},{"kind":"contract-update-success","account_address":"0xa6ee47da88e6cbde","contract_name":"IconoGraphika"},{"kind":"contract-update-success","account_address":"0x8d08162a92faa49e","contract_name":"antoni_NFT"},{"kind":"contract-update-success","account_address":"0x26c70e6d4281cb4b","contract_name":"bennybonkers_NFT"},{"kind":"contract-update-success","account_address":"0xae12c1aa1ba311f4","contract_name":"argella_NFT"},{"kind":"contract-update-success","account_address":"0xf195a8cf8cfc9cad","contract_name":"luffy_NFT"},{"kind":"contract-update-success","account_address":"0x0844c06dfe396c82","contract_name":"kappa_NFT"},{"kind":"contract-update-success","account_address":"0x84509c2a28c0de41","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0x1113980ca45d1d37","contract_name":"LendingPool"},{"kind":"contract-update-success","account_address":"0x3782af89a0da715a","contract_name":"bazingastore_NFT"},{"kind":"contract-update-success","account_address":"0x2f94bb5ddb51c528","contract_name":"_420growers_NFT"},{"kind":"contract-update-success","account_address":"0x7aca44f13a425dca","contract_name":"ajaxunlimited_NFT"},{"kind":"contract-update-success","account_address":"0xc579f5b21e9aff5c","contract_name":"oliverhossein_NFT"},{"kind":"contract-update-success","account_address":"0x479030c8c97e8c5d","contract_name":"TheMuzeum_NFT"},{"kind":"contract-update-success","account_address":"0x0d417255074526a2","contract_name":"dubbys_NFT"},{"kind":"contract-update-success","account_address":"0x2c74675aded2b67c","contract_name":"jpkeyes_NFT"},{"kind":"contract-update-success","account_address":"0x5a26dc036a948aaf","contract_name":"inglejingle_NFT"},{"kind":"contract-update-success","account_address":"0xfb79e2e104459f0e","contract_name":"johnnfts_NFT"},{"kind":"contract-update-success","account_address":"0xb78ef7afa52ff906","contract_name":"SwapConfig"},{"kind":"contract-update-success","account_address":"0xb78ef7afa52ff906","contract_name":"SwapError"},{"kind":"contract-update-success","account_address":"0xb78ef7afa52ff906","contract_name":"SwapInterfaces"},{"kind":"contract-update-success","account_address":"0xf3469854aec72bbe","contract_name":"thunder3102_NFT"},{"kind":"contract-update-success","account_address":"0xce3fe9bf32082071","contract_name":"gangshitonbangshit_NFT"},{"kind":"contract-update-success","account_address":"0xfd260ff962f9148e","contract_name":"ajakcity_NFT"},{"kind":"contract-update-success","account_address":"0xa21a4c6363adad43","contract_name":"_1forall_NFT"},{"kind":"contract-update-success","account_address":"0x3d27223f6d5a362f","contract_name":"lv8_NFT"},{"kind":"contract-update-success","account_address":"0x06e2ce66a57e35ef","contract_name":"benyamin_NFT"},{"kind":"contract-update-success","account_address":"0x9d1a223c3c5d56c0","contract_name":"minky_NFT"},{"kind":"contract-update-success","account_address":"0x1c13e8e283ac8def","contract_name":"georgeterry_NFT"},{"kind":"contract-update-success","account_address":"0xecbda466e7f191c7","contract_name":"SwapPair"},{"kind":"contract-update-success","account_address":"0x0b3c96ee54fd871e","contract_name":"daniiiiaaal_NFT"},{"kind":"contract-update-success","account_address":"0xe0757eb88f6f281e","contract_name":"faridamiri_NFT"},{"kind":"contract-update-success","account_address":"0xff3ac105703c68cd","contract_name":"issaoooi_NFT"},{"kind":"contract-update-success","account_address":"0x2d1f4a6905e3b190","contract_name":"TMCAFR"},{"kind":"contract-update-success","account_address":"0xf8625ba96ec69a0a","contract_name":"bags_NFT"},{"kind":"contract-update-success","account_address":"0x2503d24827cf18d8","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x0f449889d2f5a958","contract_name":"wolfgang_NFT"},{"kind":"contract-update-success","account_address":"0x0fccbe0506f5c43b","contract_name":"searsstreethouse_NFT"},{"kind":"contract-update-success","account_address":"0x1b30118320da620e","contract_name":"disneylord356_NFT"},{"kind":"contract-update-success","account_address":"0xcd2be65cf50441f0","contract_name":"shopee_NFT"},{"kind":"contract-update-success","account_address":"0xf1f700cbedb0d92d","contract_name":"arasharamh_NFT"},{"kind":"contract-update-success","account_address":"0xe385412159992e11","contract_name":"PriceOracle"},{"kind":"contract-update-success","account_address":"0xb86b6c6597f37e35","contract_name":"jacksonmatthews_NFT"},{"kind":"contract-update-success","account_address":"0x997c06c3404969a9","contract_name":"nexus_NFT"},{"kind":"contract-update-failure","account_address":"0x4cfbe4c6abc0e12a","contract_name":"CryptoPiggos","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e 4cfbe4c6abc0e12a.CryptoPiggos:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e 4cfbe4c6abc0e12a.CryptoPiggos:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x4953d3c135e0295a","contract_name":"tysnfts_NFT"},{"kind":"contract-update-success","account_address":"0x3e635679be7060c7","contract_name":"ghosthface_NFT"},{"kind":"contract-update-success","account_address":"0xaeda477f2d1d954c","contract_name":"blastfromthe80s_NFT"},{"kind":"contract-update-success","account_address":"0x3cf0c745c803b868","contract_name":"needmoreweaponsnow_NFT"},{"kind":"contract-update-success","account_address":"0x7c6f64808940a01d","contract_name":"charmy_NFT"},{"kind":"contract-update-success","account_address":"0x4f53f2295c037751","contract_name":"burden05_NFT"},{"kind":"contract-update-success","account_address":"0x0757f4ececb4d531","contract_name":"ojan_NFT"},{"kind":"contract-update-success","account_address":"0xfc7045d9196477df","contract_name":"blink182_NFT"},{"kind":"contract-update-success","account_address":"0x96261a330c483fd3","contract_name":"slumbeutiful_NFT"},{"kind":"contract-update-success","account_address":"0xead892083b3e2c6c","contract_name":"DapperUtilityCoin"},{"kind":"contract-update-success","account_address":"0x2e1c7d3e6ae235fb","contract_name":"custom_NFT"},{"kind":"contract-update-success","account_address":"0x21a5897982de6008","contract_name":"twisted_NFT"},{"kind":"contract-update-failure","account_address":"0xd3b62ffbbc632f5a","contract_name":"FlowBlockchainhitCoin","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e d3b62ffbbc632f5a.FlowBlockchainhitCoin:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e d3b62ffbbc632f5a.FlowBlockchainhitCoin:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x5d8ae2bf3b3e41a4","contract_name":"shopshop_NFT"},{"kind":"contract-update-success","account_address":"0x9ec775264c781e80","contract_name":"fentwizzard_NFT"},{"kind":"contract-update-success","account_address":"0x14c2f30a9e2e923f","contract_name":"AtlantaHawks_NFT"},{"kind":"contract-update-success","account_address":"0x76b164ec540fd736","contract_name":"ghostridernoah_NFT"},{"kind":"contract-update-success","account_address":"0xfaa0f7011b6e58b3","contract_name":"certified_NFT"},{"kind":"contract-update-success","account_address":"0xd306b26d28e8d1b0","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0x0270a1608d8f9855","contract_name":"siyavash_NFT"},{"kind":"contract-update-success","account_address":"0x02dd6f1e4a579683","contract_name":"trumpturdz_NFT"},{"kind":"contract-update-success","account_address":"0xa8d1a60acba12a20","contract_name":"TMNFT"},{"kind":"contract-update-success","account_address":"0x0d77ec47bbad8ef6","contract_name":"MatrixWorldVoucher"},{"kind":"contract-update-success","account_address":"0x90f55b24a556ea45","contract_name":"LendingPool"},{"kind":"contract-update-success","account_address":"0x70d0275364af1bc9","contract_name":"swaybrand_NFT"},{"kind":"contract-update-success","account_address":"0x49a7cda3a1eecc29","contract_name":"NFTCatalog"},{"kind":"contract-update-success","account_address":"0x49a7cda3a1eecc29","contract_name":"NFTCatalogAdmin"},{"kind":"contract-update-success","account_address":"0x2c255acedd09ac6a","contract_name":"mohammad_NFT"},{"kind":"contract-update-success","account_address":"0xff3599b970f02130","contract_name":"bohemian_NFT"},{"kind":"contract-update-success","account_address":"0x78fbdb121d4f4248","contract_name":"endersart_NFT"},{"kind":"contract-update-failure","account_address":"0x93d31c63149d5a67","contract_name":"WenPacksDigitaleToken","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e 93d31c63149d5a67.WenPacksDigitaleToken:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e 93d31c63149d5a67.WenPacksDigitaleToken:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x3e1842408e2356f8","contract_name":"laofiks_NFT"},{"kind":"contract-update-success","account_address":"0x192a0feb8ee151a2","contract_name":"argellabaratheon_NFT"},{"kind":"contract-update-failure","account_address":"0x5643fd47a29770e7","contract_name":"EmeraldCity","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e 5643fd47a29770e7.EmeraldCity:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e 5643fd47a29770e7.EmeraldCity:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0xacf5f3fa46fa1d86","contract_name":"scoop_NFT"},{"kind":"contract-update-success","account_address":"0xb3ac472ff3cfcc08","contract_name":"trexminer_NFT"},{"kind":"contract-update-success","account_address":"0x1b77ba4b414de352","contract_name":"Staking"},{"kind":"contract-update-success","account_address":"0x1b77ba4b414de352","contract_name":"StakingError"},{"kind":"contract-update-success","account_address":"0x1b77ba4b414de352","contract_name":"StakingNFT"},{"kind":"contract-update-success","account_address":"0x1b77ba4b414de352","contract_name":"StakingNFTVerifiers"},{"kind":"contract-update-success","account_address":"0xc5ffba475074dda4","contract_name":"celeb_NFT"},{"kind":"contract-update-success","account_address":"0x2fdbadaf94604876","contract_name":"masterpieces_NFT"},{"kind":"contract-update-success","account_address":"0x8334275bda13b2be","contract_name":"LendingPool"},{"kind":"contract-update-success","account_address":"0xa0c83ac9566b372f","contract_name":"artpicsofnfts_NFT"},{"kind":"contract-update-success","account_address":"0xea51c5b7bcb7841c","contract_name":"finalstand_NFT"},{"kind":"contract-update-success","account_address":"0xe1e37c546983e49a","contract_name":"alikah1016_NFT"},{"kind":"contract-update-failure","account_address":"0xbb39f0dae1547256","contract_name":"TopShotRewardsCommunity","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e bb39f0dae1547256.TopShotRewardsCommunity:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e bb39f0dae1547256.TopShotRewardsCommunity:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x3de89cae940f3e0a","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x07bc3dabf8f356ca","contract_name":"gabanbusines_NFT"},{"kind":"contract-update-success","account_address":"0x7492e2f9b4acea9a","contract_name":"LendingPool"},{"kind":"contract-update-success","account_address":"0xa9a73521203f043e","contract_name":"tommydavis_NFT"},{"kind":"contract-update-success","account_address":"0x2096cb04c18e4a42","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x115bcb8ad1ec684b","contract_name":"slothbear_NFT"},{"kind":"contract-update-success","account_address":"0x4396883a58c3a2d1","contract_name":"BlackHole"},{"kind":"contract-update-success","account_address":"0xcec15c814971c1dc","contract_name":"OracleConfig"},{"kind":"contract-update-success","account_address":"0xcec15c814971c1dc","contract_name":"OracleInterface"},{"kind":"contract-update-success","account_address":"0xd56ccee23ba269f3","contract_name":"smartnft_NFT"},{"kind":"contract-update-success","account_address":"0x07e2f8fc48632ece","contract_name":"PriceOracle"},{"kind":"contract-update-success","account_address":"0x73357870c541f667","contract_name":"jrichcrypto_NFT"},{"kind":"contract-update-success","account_address":"0xde6213b08c5f1c02","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0xbb52ab7a45ab7a14","contract_name":"yertcoins_NFT"},{"kind":"contract-update-success","account_address":"0xf1cc2d481fc100a8","contract_name":"auctionmine_NFT"},{"kind":"contract-update-success","account_address":"0xd6b9561f56be8cb9","contract_name":"thedrunkenchameleon_NFT"},{"kind":"contract-update-success","account_address":"0xfec6d200d18ce1bd","contract_name":"buycoolart_NFT"},{"kind":"contract-update-success","account_address":"0x09038e63445dfa7f","contract_name":"custommuralsanddesig_NFT"},{"kind":"contract-update-success","account_address":"0xcfdb40401cf134b4","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0xb6c405af6b338a55","contract_name":"swiftlink_NFT"},{"kind":"contract-update-success","account_address":"0x101755a208aff6ef","contract_name":"gojoxyuta_NFT"},{"kind":"contract-update-success","account_address":"0x7b60fd3b85dc2a5b","contract_name":"hamid_NFT"},{"kind":"contract-update-success","account_address":"0x546505c232a534bb","contract_name":"ariasart_NFT"},{"kind":"contract-update-success","account_address":"0x1d54a6ec39c81b12","contract_name":"atlasmetaverse_NFT"},{"kind":"contract-update-success","account_address":"0xaecca200ca382969","contract_name":"yegyorion_NFT"},{"kind":"contract-update-success","account_address":"0x0d195ff42ec6baa0","contract_name":"jusg_NFT"},{"kind":"contract-update-success","account_address":"0xa21b7da6f98fab25","contract_name":"galaxy_NFT"},{"kind":"contract-update-success","account_address":"0x321d8fcde05f6e8c","contract_name":"Seussibles"},{"kind":"contract-update-success","account_address":"0x6f7e64268659229e","contract_name":"weed_NFT"},{"kind":"contract-update-success","account_address":"0xc0d0ce3b813510b2","contract_name":"jupiter_NFT"},{"kind":"contract-update-failure","account_address":"0x9212a87501a8a6a2","contract_name":"BulkPurchase","error":"error: error getting program c1e4f4f4c4257510.Market: failed to derive value: load program failed: Parsing failed:\nerror: `pub` is no longer a valid access keyword\n  --\u003e :40:0\n   |\n40 | pub contract Market {\n   | ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :47:4\n   |\n47 |     pub event MomentListed(id: UInt64, price: UFix64, seller: Address?)\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :49:4\n   |\n49 |     pub event MomentPriceChanged(id: UInt64, newPrice: UFix64, seller: Address?)\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :51:4\n   |\n51 |     pub event MomentPurchased(id: UInt64, price: UFix64, seller: Address?)\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :53:4\n   |\n53 |     pub event MomentWithdrawn(id: UInt64, owner: Address?)\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :55:4\n   |\n55 |     pub event CutPercentageChanged(newPercent: UFix64, seller: Address?)\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :61:4\n   |\n61 |     pub resource interface SalePublic {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :62:8\n   |\n62 |         pub var cutPercentage: UFix64\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :63:8\n   |\n63 |         pub fun purchase(tokenID: UInt64, buyTokens: @DapperUtilityCoin.Vault): @TopShot.NFT {\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :68:8\n   |\n68 |         pub fun getPrice(tokenID: UInt64): UFix64?\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :69:8\n   |\n69 |         pub fun getIDs(): [UInt64]\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :70:8\n   |\n70 |         pub fun borrowMoment(id: UInt64): \u0026TopShot.NFT? {\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :89:4\n   |\n89 |     pub resource SaleCollection: SalePublic {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :109:8\n    |\n109 |         pub var cutPercentage: UFix64\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :130:8\n    |\n130 |         pub fun listForSale(token: @TopShot.NFT, price: UFix64) {\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :145:8\n    |\n145 |         pub fun withdraw(tokenID: UInt64): @TopShot.NFT {\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :166:8\n    |\n166 |         pub fun purchase(tokenID: UInt64, buyTokens: @DapperUtilityCoin.Vault): @TopShot.NFT {\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :198:8\n    |\n198 |         pub fun changePrice(tokenID: UInt64, newPrice: UFix64) {\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :209:8\n    |\n209 |         pub fun changePercentage(_ newPercent: UFix64) {\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :216:8\n    |\n216 |         pub fun changeOwnerReceiver(_ newOwnerCapability: Capability) {\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :225:8\n    |\n225 |         pub fun changeBeneficiaryReceiver(_ newBeneficiaryCapability: Capability) {\n    |         ^^^\n\nerror: restricted types have been removed; replace with the concrete type or an equivalent intersection type\n   --\u003e :227:73\n    |\n227 |                 newBeneficiaryCapability.borrow\u003c\u0026DapperUtilityCoin.Vault{FungibleToken.Receiver}\u003e() != nil:\n    |                                                                          ^^^^^^^^^^^^^\n\n--\u003e c1e4f4f4c4257510.Market\n\nerror: error getting program c1e4f4f4c4257510.TopShotMarketV3: failed to derive value: load program failed: Parsing failed:\nerror: `pub` is no longer a valid access keyword\n  --\u003e :45:0\n   |\n45 | pub contract TopShotMarketV3 {\n   | ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :52:4\n   |\n52 |     pub event MomentListed(id: UInt64, price: UFix64, seller: Address?)\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :54:4\n   |\n54 |     pub event MomentPriceChanged(id: UInt64, newPrice: UFix64, seller: Address?)\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :56:4\n   |\n56 |     pub event MomentPurchased(id: UInt64, price: UFix64, seller: Address?)\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :58:4\n   |\n58 |     pub event MomentWithdrawn(id: UInt64, owner: Address?)\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :61:4\n   |\n61 |     pub let marketStoragePath: StoragePath\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :64:4\n   |\n64 |     pub let marketPublicPath: PublicPath\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :78:4\n   |\n78 |     pub resource SaleCollection: Market.SalePublic {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :100:8\n    |\n100 |         pub var cutPercentage: UFix64\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :138:8\n    |\n138 |         pub fun listForSale(tokenID: UInt64, price: UFix64) {\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :157:8\n    |\n157 |         pub fun cancelSale(tokenID: UInt64) {\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :195:8\n    |\n195 |         pub fun purchase(tokenID: UInt64, buyTokens: @DapperUtilityCoin.Vault): @TopShot.NFT {\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :245:8\n    |\n245 |         pub fun changeOwnerReceiver(_ newOwnerCapability: Capability\u003c\u0026{FungibleToken.Receiver}\u003e) {\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :257:8\n    |\n257 |         pub fun changeBeneficiaryReceiver(_ newBeneficiaryCapability: Capability\u003c\u0026{FungibleToken.Receiver}\u003e) {\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :270:8\n    |\n270 |         pub fun getPrice(tokenID: UInt64): UFix64? {\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :280:8\n    |\n280 |         pub fun getIDs(): [UInt64] {\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :300:8\n    |\n300 |         pub fun borrowMoment(id: UInt64): \u0026TopShot.NFT? {\n    |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n   --\u003e :316:4\n    |\n316 |     pub fun createSaleCollection(ownerCollection: Capability\u003c\u0026TopShot.Collection\u003e,\n    |     ^^^\n\n--\u003e c1e4f4f4c4257510.TopShotMarketV3\n\nerror: cannot find type in this scope: `Market`\n   --\u003e 9212a87501a8a6a2.BulkPurchase:159:73\n    |\n159 |     access(contract) view fun getTopshotV1MarketRef(address: Address): \u0026{Market.SalePublic}? {\n    |                                                                          ^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e 9212a87501a8a6a2.BulkPurchase:159:72\n    |\n159 |     access(contract) view fun getTopshotV1MarketRef(address: Address): \u0026{Market.SalePublic}? {\n    |                                                                         ^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `Market`\n   --\u003e 9212a87501a8a6a2.BulkPurchase:164:73\n    |\n164 |     access(contract) view fun getTopshotV3MarketRef(address: Address): \u0026{Market.SalePublic}? {\n    |                                                                          ^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e 9212a87501a8a6a2.BulkPurchase:164:72\n    |\n164 |     access(contract) view fun getTopshotV3MarketRef(address: Address): \u0026{Market.SalePublic}? {\n    |                                                                         ^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `Market`\n   --\u003e 9212a87501a8a6a2.BulkPurchase:301:25\n    |\n301 |         topShotMarket: \u0026{Market.SalePublic},\n    |                          ^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e 9212a87501a8a6a2.BulkPurchase:301:24\n    |\n301 |         topShotMarket: \u0026{Market.SalePublic},\n    |                         ^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `Market`\n   --\u003e 9212a87501a8a6a2.BulkPurchase:161:35\n    |\n161 |             .capabilities.borrow\u003c\u0026{Market.SalePublic}\u003e(/public/topshotSaleCollection)\n    |                                    ^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e 9212a87501a8a6a2.BulkPurchase:161:34\n    |\n161 |             .capabilities.borrow\u003c\u0026{Market.SalePublic}\u003e(/public/topshotSaleCollection)\n    |                                   ^^^^^^^^^^^^^^^^^^^\n\nerror: cannot infer type parameter: `T`\n   --\u003e 9212a87501a8a6a2.BulkPurchase:160:15\n    |\n160 |         return getAccount(address)\n161 |             .capabilities.borrow\u003c\u0026{Market.SalePublic}\u003e(/public/topshotSaleCollection)\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `Market`\n   --\u003e 9212a87501a8a6a2.BulkPurchase:166:35\n    |\n166 |             .capabilities.borrow\u003c\u0026{Market.SalePublic}\u003e(TopShotMarketV3.marketPublicPath)\n    |                                    ^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e 9212a87501a8a6a2.BulkPurchase:166:34\n    |\n166 |             .capabilities.borrow\u003c\u0026{Market.SalePublic}\u003e(TopShotMarketV3.marketPublicPath)\n    |                                   ^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find variable in this scope: `TopShotMarketV3`\n   --\u003e 9212a87501a8a6a2.BulkPurchase:166:55\n    |\n166 |             .capabilities.borrow\u003c\u0026{Market.SalePublic}\u003e(TopShotMarketV3.marketPublicPath)\n    |                                                        ^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type parameter: `T`\n   --\u003e 9212a87501a8a6a2.BulkPurchase:165:15\n    |\n165 |         return getAccount(address)\n166 |             .capabilities.borrow\u003c\u0026{Market.SalePublic}\u003e(TopShotMarketV3.marketPublicPath)\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `Market`\n   --\u003e 9212a87501a8a6a2.BulkPurchase:354:45\n    |\n354 |         let topShotV1MarketRefs: {Address: \u0026{Market.SalePublic}} = {}\n    |                                              ^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e 9212a87501a8a6a2.BulkPurchase:354:44\n    |\n354 |         let topShotV1MarketRefs: {Address: \u0026{Market.SalePublic}} = {}\n    |                                             ^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `Market`\n   --\u003e 9212a87501a8a6a2.BulkPurchase:355:45\n    |\n355 |         let topShotV3MarketRefs: {Address: \u0026{Market.SalePublic}} = {}\n    |                                              ^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e 9212a87501a8a6a2.BulkPurchase:355:44\n    |\n355 |         let topShotV3MarketRefs: {Address: \u0026{Market.SalePublic}} = {}\n    |                                             ^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x9212a87501a8a6a2","contract_name":"FlowversePass"},{"kind":"contract-update-success","account_address":"0x9212a87501a8a6a2","contract_name":"FlowversePassPrimarySaleMinter"},{"kind":"contract-update-success","account_address":"0x9212a87501a8a6a2","contract_name":"FlowversePrimarySale"},{"kind":"contract-update-success","account_address":"0x9212a87501a8a6a2","contract_name":"FlowversePrimarySaleV2"},{"kind":"contract-update-success","account_address":"0x9212a87501a8a6a2","contract_name":"FlowverseShirt"},{"kind":"contract-update-success","account_address":"0x9212a87501a8a6a2","contract_name":"FlowverseTreasures"},{"kind":"contract-update-success","account_address":"0x9212a87501a8a6a2","contract_name":"FlowverseTreasuresPrimarySaleMinter"},{"kind":"contract-update-success","account_address":"0x9212a87501a8a6a2","contract_name":"Ordinal"},{"kind":"contract-update-success","account_address":"0x9212a87501a8a6a2","contract_name":"OrdinalVendor"},{"kind":"contract-update-success","account_address":"0x9212a87501a8a6a2","contract_name":"Royalties"},{"kind":"contract-update-success","account_address":"0xdab6a36428f07fe6","contract_name":"comeinsidenfungit_NFT"},{"kind":"contract-update-success","account_address":"0xbb12a6da563a5e8e","contract_name":"DynamicNFT"},{"kind":"contract-update-success","account_address":"0xbb12a6da563a5e8e","contract_name":"TraderflowScores"},{"kind":"contract-update-success","account_address":"0xb3ebe9ce2c18c745","contract_name":"shahsavarshop_NFT"},{"kind":"contract-update-success","account_address":"0xf0e67de96966b750","contract_name":"trollassembly_NFT"},{"kind":"contract-update-success","account_address":"0xc7407d5d7b6f0ea7","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x922b691420fd6831","contract_name":"limitedtime_NFT"},{"kind":"contract-update-success","account_address":"0xe0bb153f39ef5483","contract_name":"paidshoppe_NFT"},{"kind":"contract-update-success","account_address":"0xb40fcec6b91ce5e1","contract_name":"letechnology_NFT"},{"kind":"contract-update-success","account_address":"0x74f42e696301b117","contract_name":"loloiuy_NFT"},{"kind":"contract-update-success","account_address":"0xbed08965c55839d2","contract_name":"cultureshock_NFT"},{"kind":"contract-update-success","account_address":"0xd6f80565193ad727","contract_name":"DelegatorManager"},{"kind":"contract-update-success","account_address":"0xd6f80565193ad727","contract_name":"LiquidStaking"},{"kind":"contract-update-success","account_address":"0xd6f80565193ad727","contract_name":"LiquidStakingConfig"},{"kind":"contract-update-success","account_address":"0xd6f80565193ad727","contract_name":"LiquidStakingError"},{"kind":"contract-update-success","account_address":"0xd6f80565193ad727","contract_name":"stFlowToken"},{"kind":"contract-update-success","account_address":"0x7a83f49df2a43205","contract_name":"nursingmyart_NFT"},{"kind":"contract-update-success","account_address":"0xcfeeddaf9d5967be","contract_name":"freenfts_NFT"},{"kind":"contract-update-success","account_address":"0xf948e51fb522008a","contract_name":"blazers_NFT"},{"kind":"contract-update-success","account_address":"0xa19cf4dba5941530","contract_name":"DigitalNativeArt"},{"kind":"contract-update-failure","account_address":"0x6fd2465f3a22e34c","contract_name":"PetJokicsHorses","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e 6fd2465f3a22e34c.PetJokicsHorses:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e 6fd2465f3a22e34c.PetJokicsHorses:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x3c1c4b041ad18279","contract_name":"ArrayUtils"},{"kind":"contract-update-success","account_address":"0x3c1c4b041ad18279","contract_name":"Filter"},{"kind":"contract-update-success","account_address":"0x3c1c4b041ad18279","contract_name":"Offers"},{"kind":"contract-update-success","account_address":"0x3c1c4b041ad18279","contract_name":"ScopedFTProviders"},{"kind":"contract-update-success","account_address":"0x3c1c4b041ad18279","contract_name":"StringUtils"},{"kind":"contract-update-success","account_address":"0xee1dbeefc8023a22","contract_name":"mmookzworldco_NFT"},{"kind":"contract-update-success","account_address":"0x2270ff934281a83a","contract_name":"kraftycreations_NFT"},{"kind":"contract-update-success","account_address":"0x0169af3078d4efff","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0x3c5959b568896393","contract_name":"FUSD"},{"kind":"contract-update-success","account_address":"0x9c5c2a0391c4ed42","contract_name":"coinir_NFT"},{"kind":"contract-update-success","account_address":"0xe64624d7295804fb","contract_name":"m2m_NFT"},{"kind":"contract-update-success","account_address":"0xc503a7ba3934e41c","contract_name":"joyce_NFT"},{"kind":"contract-update-success","account_address":"0x928fb75fcd7de0f3","contract_name":"doyle_NFT"},{"kind":"contract-update-success","account_address":"0x20bd0b8737e5237e","contract_name":"quizo_NFT"},{"kind":"contract-update-success","account_address":"0x22661aeca5a4141f","contract_name":"mccoyminky_NFT"},{"kind":"contract-update-success","account_address":"0xe1cc75bad8265eea","contract_name":"vude_NFT"},{"kind":"contract-update-success","account_address":"0x464707efb7475f07","contract_name":"dirtydiamond_NFT"},{"kind":"contract-update-success","account_address":"0x45c0949f83851642","contract_name":"Marbles"},{"kind":"contract-update-success","account_address":"0x319d3bddcdefd615","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0xccbca37fb2e3266c","contract_name":"musiqboxguru_NFT"},{"kind":"contract-update-success","account_address":"0x832147e1ad0b591f","contract_name":"hanzoshop_NFT"},{"kind":"contract-update-success","account_address":"0x4cf4c4ee474ac04b","contract_name":"MLS"},{"kind":"contract-update-success","account_address":"0x0df3a6881655b95a","contract_name":"mayas_NFT"},{"kind":"contract-update-success","account_address":"0xd120c24ec2c8fcd4","contract_name":"kimberlyhereid_NFT"},{"kind":"contract-update-success","account_address":"0x3573a1b3f3910419","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x5cdeb067561defcb","contract_name":"TiblesApp"},{"kind":"contract-update-success","account_address":"0x5cdeb067561defcb","contract_name":"TiblesNFT"},{"kind":"contract-update-success","account_address":"0x5cdeb067561defcb","contract_name":"TiblesProducer"},{"kind":"contract-update-success","account_address":"0x19de33e657dbe868","contract_name":"cafeein_NFT"},{"kind":"contract-update-success","account_address":"0x4a9afe65f4aded46","contract_name":"Tibles"},{"kind":"contract-update-failure","account_address":"0x687e1a7aef17b78b","contract_name":"Beaver","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e 687e1a7aef17b78b.Beaver:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e 687e1a7aef17b78b.Beaver:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x67a5f9620379f156","contract_name":"nickshop_NFT"},{"kind":"contract-update-success","account_address":"0x0a25bc365b78c46f","contract_name":"overprotocol_NFT"},{"kind":"contract-update-success","account_address":"0x7709485e05e3303d","contract_name":"SelfReplication"},{"kind":"contract-update-success","account_address":"0x760a4e13c204e3a2","contract_name":"ewwtawally_NFT"},{"kind":"contract-update-success","account_address":"0xdf590637445c1b44","contract_name":"imeytiii_NFT"},{"kind":"contract-update-success","account_address":"0xe46c2c24053641e2","contract_name":"Base64Util"},{"kind":"contract-update-success","account_address":"0xe46c2c24053641e2","contract_name":"SakutaroPoem"},{"kind":"contract-update-success","account_address":"0xe46c2c24053641e2","contract_name":"SakutaroPoemContent"},{"kind":"contract-update-success","account_address":"0xe46c2c24053641e2","contract_name":"SakutaroPoemReplica"},{"kind":"contract-update-success","account_address":"0x67539e86cbe9b261","contract_name":"LendingPool"},{"kind":"contract-update-success","account_address":"0x29924a210e4cd4cc","contract_name":"kiyokurrancycom_NFT"},{"kind":"contract-update-success","account_address":"0xfffcb74afcf0a58f","contract_name":"nftdrops_NFT"},{"kind":"contract-update-success","account_address":"0x1717d6b5ee65530a","contract_name":"BIP39WordList"},{"kind":"contract-update-success","account_address":"0x1717d6b5ee65530a","contract_name":"BIP39WordListJa"},{"kind":"contract-update-success","account_address":"0x1717d6b5ee65530a","contract_name":"MnemonicPoetry"},{"kind":"contract-update-success","account_address":"0x43ef7ba989e31bf1","contract_name":"devildogs13_NFT"},{"kind":"contract-update-success","account_address":"0x5e476fa70b755131","contract_name":"tazzzdevil_NFT"},{"kind":"contract-update-success","account_address":"0xb4b82a1c9d21d284","contract_name":"FCLCrypto"},{"kind":"contract-update-success","account_address":"0x2aa2eaff7b937de0","contract_name":"minign3_NFT"},{"kind":"contract-update-success","account_address":"0x191785084db1ecd1","contract_name":"anfal63_NFT"},{"kind":"contract-update-success","account_address":"0x3ee7ea4af5232868","contract_name":"NFTProviderAggregator"},{"kind":"contract-update-success","account_address":"0x95bc95c29893d1a0","contract_name":"cody1972_NFT"},{"kind":"contract-update-success","account_address":"0xe27fcd26ece5687e","contract_name":"shadowoftheworld_NFT"},{"kind":"contract-update-success","account_address":"0x569087b50ab30c2a","contract_name":"ShipOfTheseus"},{"kind":"contract-update-success","account_address":"0x569087b50ab30c2a","contract_name":"ShipOfTheseusWarehouse"},{"kind":"contract-update-success","account_address":"0x9391e4cb724e6a0d","contract_name":"testt_NFT"},{"kind":"contract-update-success","account_address":"0x054cdc03e2b159f3","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0x79ebe0018e64014a","contract_name":"techlex_NFT"},{"kind":"contract-update-success","account_address":"0x633146f097761303","contract_name":"jptwoods93_NFT"},{"kind":"contract-update-success","account_address":"0xb063c16cac85dbd1","contract_name":"StableSwapFactory"},{"kind":"contract-update-success","account_address":"0xb063c16cac85dbd1","contract_name":"SwapFactory"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"ACCO_SOLEIL"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"AIICOSMPLG"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"AOPANDA"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"BTO3"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"BYPRODUCT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"CHAINPROJECT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"DUNK"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"DWLC"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"EBISU"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"EDGE"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"IAT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"JOSHIN"},{"kind":"contract-update-failure","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT","error":"error: name mismatch: got `ACCO_SOLEIL`, expected `KARAT`\n --\u003e 82ed1b9cba5bb1b3.KARAT:5:21\n  |\n5 | access(all) contract ACCO_SOLEIL: FungibleToken {\n  |                      ^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT12KJOCSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT12O2P7SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT13LD8JSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT14BFUTSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT15VXBXSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT16IEOYSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1AYXUDSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1B6HH9SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1CPGVASBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1CQWJKSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1DHGCDSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1EN67DSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1FJYGVSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1GH5NISBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1GWIGKSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1HUUGSNFT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1LZJVLSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1NGUHNSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1SPM6OSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1TK5U4SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1TXWJISBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1UHNRISBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1UKK3GNFT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1W8O9QSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1WHFVBSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT1ZB6CGSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT21IHEGSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT23P4YESBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT25YH6NSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT28JEJQSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT2ARDNYNFT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT2NI8C7SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT2NLQKBSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARAT2P4KYOSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATACIYTSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATAQTC7SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATB8JTVSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATB8YUMSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATBPBPISBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATCF9YHSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATJYZJ2SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATN3J2TSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATNMUDYSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATQ3J46SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATRGPXQSBT"},{"kind":"contract-update-failure","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATV2","error":"error: name mismatch: got `Karatv2`, expected `KARATV2`\n --\u003e 82ed1b9cba5bb1b3.KARATV2:5:21\n  |\n5 | access(all) contract Karatv2: FungibleToken {\n  |                      ^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATVSDVKNFT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ13BT6BSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ14SUHLSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ19ECRKSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ1CGSLPSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ1EQZYMSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ1G1PTFSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ1L5S8NFT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ1N3O5XSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ1N8G51SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ1RXADQSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ1S9DIINFT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ1UDGDGSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ1VBIB2SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ1VL9GJSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ2AKUJMSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ2B6GW3SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ2CACJ4SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ2DDDI7SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ2DM3M1SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ2DOFICSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ2EBS6MSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ2GQFFNSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ2LWPHTSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ2OURQRSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ2R0QSFSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ2UO4KSSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ2VXUPISBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ2WOCQKSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ5BESPSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZ9DXMDSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZCEBSTSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZCXYM0SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZECEWMSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZEGM1SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZF6L26SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZFTYOMSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZHMMGCSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZHUNV7SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZIB84ZSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZICAVYSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZIYWYRSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZL7LXANFT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZLSVS1SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZLT64WSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZPD3FUSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZQ61Y9SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZQAYEYSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZQHCB9SBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZQVWYSSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZSQREDSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZUFMYASBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZWDDGRSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KARATZXYHNRSBT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"Karat"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"KaratNFT"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"Karatv2"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"MARK"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"MCH"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"MEDI"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"MEGAMI"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"MIGU"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"MRFRIENDLY"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"NIWAEELS"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"PEYE"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"REREPO"},{"kind":"contract-update-failure","account_address":"0x82ed1b9cba5bb1b3","contract_name":"SORACHI","error":"error: GetCode failed: expected AddressLocation, got common.StringLocation\n--\u003e FungibleToken\n\nerror: GetCode failed: expected AddressLocation, got common.StringLocation\n--\u003e MetadataViews\n\nerror: GetCode failed: expected AddressLocation, got common.StringLocation\n--\u003e FungibleTokenMetadataViews\n\nerror: cannot find type in this scope: `FungibleToken`\n --\u003e 82ed1b9cba5bb1b3.SORACHI:5:30\n  |\n5 | access(all) contract Sorachi: FungibleToken {\n  |                               ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `FungibleToken`\n   --\u003e 82ed1b9cba5bb1b3.SORACHI:103:32\n    |\n103 |     access(all) resource Vault: FungibleToken.Vault {\n    |                                 ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `FungibleToken`\n   --\u003e 82ed1b9cba5bb1b3.SORACHI:155:15\n    |\n155 |         access(FungibleToken.Withdraw) fun withdraw(amount: UFix64): @Sorachi.Vault {\n    |                ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `FungibleToken`\n   --\u003e 82ed1b9cba5bb1b3.SORACHI:169:40\n    |\n169 |         access(all) fun deposit(from: @{FungibleToken.Vault}) {\n    |                                         ^^^^^^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e 82ed1b9cba5bb1b3.SORACHI:169:39\n    |\n169 |         access(all) fun deposit(from: @{FungibleToken.Vault}) {\n    |                                        ^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:40:17\n   |\n40 |             Type\u003cFungibleTokenMetadataViews.FTView\u003e(),\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type parameter: `T`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:40:12\n   |\n40 |             Type\u003cFungibleTokenMetadataViews.FTView\u003e(),\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:41:17\n   |\n41 |             Type\u003cFungibleTokenMetadataViews.FTDisplay\u003e(),\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type parameter: `T`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:41:12\n   |\n41 |             Type\u003cFungibleTokenMetadataViews.FTDisplay\u003e(),\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:42:17\n   |\n42 |             Type\u003cFungibleTokenMetadataViews.FTVaultData\u003e(),\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type parameter: `T`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:42:12\n   |\n42 |             Type\u003cFungibleTokenMetadataViews.FTVaultData\u003e(),\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:43:17\n   |\n43 |             Type\u003cFungibleTokenMetadataViews.TotalSupply\u003e()\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type parameter: `T`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:43:12\n   |\n43 |             Type\u003cFungibleTokenMetadataViews.TotalSupply\u003e()\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:49:22\n   |\n49 |             case Type\u003cFungibleTokenMetadataViews.FTView\u003e():\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type parameter: `T`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:49:17\n   |\n49 |             case Type\u003cFungibleTokenMetadataViews.FTView\u003e():\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find variable in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:50:23\n   |\n50 |                 return FungibleTokenMetadataViews.FTView(\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:51:135\n   |\n51 |                     ftDisplay: self.resolveContractView(resourceType: nil, viewType: Type\u003cFungibleTokenMetadataViews.FTDisplay\u003e()) as! FungibleTokenMetadataViews.FTDisplay?,\n   |                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:51:90\n   |\n51 |                     ftDisplay: self.resolveContractView(resourceType: nil, viewType: Type\u003cFungibleTokenMetadataViews.FTDisplay\u003e()) as! FungibleTokenMetadataViews.FTDisplay?,\n   |                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type parameter: `T`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:51:85\n   |\n51 |                     ftDisplay: self.resolveContractView(resourceType: nil, viewType: Type\u003cFungibleTokenMetadataViews.FTDisplay\u003e()) as! FungibleTokenMetadataViews.FTDisplay?,\n   |                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:52:139\n   |\n52 |                     ftVaultData: self.resolveContractView(resourceType: nil, viewType: Type\u003cFungibleTokenMetadataViews.FTVaultData\u003e()) as! FungibleTokenMetadataViews.FTVaultData?\n   |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:52:92\n   |\n52 |                     ftVaultData: self.resolveContractView(resourceType: nil, viewType: Type\u003cFungibleTokenMetadataViews.FTVaultData\u003e()) as! FungibleTokenMetadataViews.FTVaultData?\n   |                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type parameter: `T`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:52:87\n   |\n52 |                     ftVaultData: self.resolveContractView(resourceType: nil, viewType: Type\u003cFungibleTokenMetadataViews.FTVaultData\u003e()) as! FungibleTokenMetadataViews.FTVaultData?\n   |                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:54:22\n   |\n54 |             case Type\u003cFungibleTokenMetadataViews.FTDisplay\u003e():\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type parameter: `T`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:54:17\n   |\n54 |             case Type\u003cFungibleTokenMetadataViews.FTDisplay\u003e():\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find variable in this scope: `MetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:55:28\n   |\n55 |                 let media = MetadataViews.Media(\n   |                             ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find variable in this scope: `MetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:56:30\n   |\n56 |                         file: MetadataViews.HTTPFile(\n   |                               ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find variable in this scope: `MetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:61:29\n   |\n61 |                 let medias = MetadataViews.Medias([media])\n   |                              ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type: requires an explicit type annotation\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:61:50\n   |\n61 |                 let medias = MetadataViews.Medias([media])\n   |                                                   ^\n\nerror: cannot find variable in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:62:23\n   |\n62 |                 return FungibleTokenMetadataViews.FTDisplay(\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find variable in this scope: `MetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:66:33\n   |\n66 |                     externalURL: MetadataViews.ExternalURL(\"https://market.24karat.io\"),\n   |                                  ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find variable in this scope: `MetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:69:35\n   |\n69 |                         \"twitter\": MetadataViews.ExternalURL(\"https://twitter.com/24karat_io\")\n   |                                    ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type: requires an explicit type annotation\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:68:29\n   |\n68 |                     socials: {\n   |                              ^\n\nerror: cannot find type in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:72:22\n   |\n72 |             case Type\u003cFungibleTokenMetadataViews.FTVaultData\u003e():\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type parameter: `T`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:72:17\n   |\n72 |             case Type\u003cFungibleTokenMetadataViews.FTVaultData\u003e():\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find variable in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:73:23\n   |\n73 |                 return FungibleTokenMetadataViews.FTVaultData(\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `FungibleToken`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:79:56\n   |\n79 |                     createEmptyVaultFunction: (fun(): @{FungibleToken.Vault} {\n   |                                                         ^^^^^^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:79:55\n   |\n79 |                     createEmptyVaultFunction: (fun(): @{FungibleToken.Vault} {\n   |                                                        ^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:83:22\n   |\n83 |             case Type\u003cFungibleTokenMetadataViews.TotalSupply\u003e():\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type parameter: `T`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:83:17\n   |\n83 |             case Type\u003cFungibleTokenMetadataViews.TotalSupply\u003e():\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find variable in this scope: `FungibleTokenMetadataViews`\n  --\u003e 82ed1b9cba5bb1b3.SORACHI:84:23\n   |\n84 |                 return FungibleTokenMetadataViews.TotalSupply(\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"SORACHI_BASE"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"SPACECROCOS"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"Sorachi"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"Story"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"TNP"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"TOM"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"TS"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"T_TEST1130"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"URBO"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"VO_DOCUMENTATION"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"VO_FINANCE"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"VO_GA"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"VO_GA2"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"VO_IDEATION"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"VO_LEGAL"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"VO_RESEARCH"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"VO_SALES"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"WAFUKUGEN"},{"kind":"contract-update-success","account_address":"0x82ed1b9cba5bb1b3","contract_name":"WE_PIN"},{"kind":"contract-update-success","account_address":"0xfae7581e724fd599","contract_name":"artface_NFT"},{"kind":"contract-update-success","account_address":"0xf80cb737bfe7c792","contract_name":"LendingComptroller"},{"kind":"contract-update-success","account_address":"0x4bbff461fa8f6192","contract_name":"FantastecNFT"},{"kind":"contract-update-success","account_address":"0x4bbff461fa8f6192","contract_name":"FantastecPackNFT"},{"kind":"contract-update-success","account_address":"0x4bbff461fa8f6192","contract_name":"FantastecSwapData"},{"kind":"contract-update-success","account_address":"0x4bbff461fa8f6192","contract_name":"FantastecSwapDataProperties"},{"kind":"contract-update-success","account_address":"0x4bbff461fa8f6192","contract_name":"FantastecSwapDataV2"},{"kind":"contract-update-success","account_address":"0x4bbff461fa8f6192","contract_name":"FantastecUtils"},{"kind":"contract-update-success","account_address":"0x4bbff461fa8f6192","contract_name":"FlowTokenManager"},{"kind":"contract-update-success","account_address":"0x4bbff461fa8f6192","contract_name":"IFantastecPackNFT"},{"kind":"contract-update-success","account_address":"0x4bbff461fa8f6192","contract_name":"SocialProfileV3"},{"kind":"contract-update-success","account_address":"0x4bbff461fa8f6192","contract_name":"StoreManagerV3"},{"kind":"contract-update-success","account_address":"0x4bbff461fa8f6192","contract_name":"StoreManagerV5"},{"kind":"contract-update-success","account_address":"0xe6a764a39f5cdf67","contract_name":"BleacherReport_NFT"},{"kind":"contract-update-success","account_address":"0x393b54c836e01206","contract_name":"mintedmagick_NFT"},{"kind":"contract-update-success","account_address":"0x679052717053cc57","contract_name":"nftboutique_NFT"},{"kind":"contract-update-success","account_address":"0x7f87ee83b1667822","contract_name":"socialprescribing_NFT"},{"kind":"contract-update-success","account_address":"0xa82865e73a8f967d","contract_name":"niascontent_NFT"},{"kind":"contract-update-success","account_address":"0x3ae9b4875dbcb8a4","contract_name":"light16_NFT"},{"kind":"contract-update-success","account_address":"0xf4264ac8f3256818","contract_name":"Evolution"},{"kind":"contract-update-success","account_address":"0x59e3d094592231a7","contract_name":"Birdieland_NFT"},{"kind":"contract-update-success","account_address":"0xa6b4efb79ff190f5","contract_name":"fjvaliente_NFT"},{"kind":"contract-update-success","account_address":"0x1ac8640b4fc287a2","contract_name":"washburn_NFT"},{"kind":"contract-update-success","account_address":"0x048b0bd0262f9d76","contract_name":"hamed_NFT"},{"kind":"contract-update-success","account_address":"0x050c0cecb7cc2239","contract_name":"metia_NFT"},{"kind":"contract-update-success","account_address":"0xe5b8a442edeecbfe","contract_name":"grandslam_NFT"},{"kind":"contract-update-success","account_address":"0xfe437b573d368d6a","contract_name":"MXtation"},{"kind":"contract-update-success","account_address":"0xfe437b573d368d6a","contract_name":"MutaXion"},{"kind":"contract-update-success","account_address":"0xfe437b573d368d6a","contract_name":"Mutation"},{"kind":"contract-update-success","account_address":"0xfe437b573d368d6a","contract_name":"SelfReplication"},{"kind":"contract-update-success","account_address":"0xfe437b573d368d6a","contract_name":"TheNFT"},{"kind":"contract-update-success","account_address":"0xf5465655dc91deaa","contract_name":"henryholley_NFT"},{"kind":"contract-update-success","account_address":"0x955f7c8b8a58544e","contract_name":"blockchaincabal_NFT"},{"kind":"contract-update-success","account_address":"0xcf60c5a058e4684a","contract_name":"cryptohippies_NFT"},{"kind":"contract-update-success","account_address":"0x00f40af12bb8d7c1","contract_name":"ejsphotography_NFT"},{"kind":"contract-update-success","account_address":"0xd11211efb7a28e3d","contract_name":"nftea_NFT"},{"kind":"contract-update-success","account_address":"0xe84225fd95971cdc","contract_name":"_0eden_NFT"},{"kind":"contract-update-success","account_address":"0x2e05b6f7b6226d5d","contract_name":"neonbloom_NFT"},{"kind":"contract-update-success","account_address":"0xe544175ee0461c4b","contract_name":"TokenForwarding"},{"kind":"contract-update-success","account_address":"0xfac36ec0e0001b55","contract_name":"exoticsnfts_NFT"},{"kind":"contract-update-success","account_address":"0x7d37a830738627c8","contract_name":"mandalore_NFT"},{"kind":"contract-update-success","account_address":"0x8ef0a9c2f1078f6b","contract_name":"jewel_NFT"},{"kind":"contract-update-success","account_address":"0x3b4af36f65396459","contract_name":"kgnfts_NFT"},{"kind":"contract-update-success","account_address":"0x792ca6752e7c4c09","contract_name":"marketmaker_NFT"},{"kind":"contract-update-success","account_address":"0x1071ecdf2a94f4aa","contract_name":"khshop_NFT"},{"kind":"contract-update-success","account_address":"0x473d6a2c37eab5be","contract_name":"FeeEstimator"},{"kind":"contract-update-success","account_address":"0x473d6a2c37eab5be","contract_name":"LostAndFound"},{"kind":"contract-update-success","account_address":"0x473d6a2c37eab5be","contract_name":"LostAndFoundHelper"},{"kind":"contract-update-success","account_address":"0x64283bcaca39a307","contract_name":"arka_NFT"},{"kind":"contract-update-success","account_address":"0x3c3f3922f8fd7338","contract_name":"artalchemynft_NFT"},{"kind":"contract-update-success","account_address":"0x3a15920084d609b9","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0x778d48d1e511da8a","contract_name":"rijwan121_NFT"},{"kind":"contract-update-success","account_address":"0x38bd15c5b0fe8036","contract_name":"fallout_NFT"},{"kind":"contract-update-success","account_address":"0xf951b735497e5e4d","contract_name":"kilogzer_NFT"},{"kind":"contract-update-success","account_address":"0x38ad5624d00cde82","contract_name":"petsanfarmanimalsupp_NFT"},{"kind":"contract-update-success","account_address":"0x03c294ac4fda1c7a","contract_name":"slimsworldz_NFT"},{"kind":"contract-update-success","account_address":"0x9ed8f7980cda0fa8","contract_name":"shirhani_NFT"},{"kind":"contract-update-success","account_address":"0x34ac358b9819f79d","contract_name":"NFTKred"},{"kind":"contract-update-success","account_address":"0x712ece3ed1c4c5cc","contract_name":"vision_NFT"},{"kind":"contract-update-success","account_address":"0xd0dd3865a69b30b1","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0xf02b15e11eb3715b","contract_name":"BWAYX_NFT"},{"kind":"contract-update-success","account_address":"0x0e5f72bdcf77b39e","contract_name":"toddabc_NFT"},{"kind":"contract-update-success","account_address":"0xb3ceb5d033f1bdad","contract_name":"appstoretest5_NFT"},{"kind":"contract-update-success","account_address":"0x0528d5db3e3647ea","contract_name":"micemania_NFT"},{"kind":"contract-update-success","account_address":"0x2ac77abfd534b4fd","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0xfcdccc687fb7d211","contract_name":"theone_NFT"},{"kind":"contract-update-success","account_address":"0xee4567ab7f63abf2","contract_name":"BlovizeNFT"},{"kind":"contract-update-success","account_address":"0x986d0debffb6aaaa","contract_name":"redbulltokenburn_NFT"},{"kind":"contract-update-success","account_address":"0xad10b2d51b16ca31","contract_name":"animazon_NFT"},{"kind":"contract-update-success","account_address":"0x3e2d0744504a4681","contract_name":"shop_NFT"},{"kind":"contract-update-success","account_address":"0x216d0facb460e4b0","contract_name":"azadi_NFT"},{"kind":"contract-update-success","account_address":"0xbc389583a3e4d123","contract_name":"idigdigiart_NFT"},{"kind":"contract-update-success","account_address":"0x87199e2b4462b59b","contract_name":"amirrayan_NFT"},{"kind":"contract-update-success","account_address":"0xec67451f8a58216a","contract_name":"PublicPriceOracle"},{"kind":"contract-update-success","account_address":"0x1dc37ab51a54d83f","contract_name":"HeroesOfTheFlow"},{"kind":"contract-update-success","account_address":"0x8751f195bbe5f14a","contract_name":"minkymccoy_NFT"},{"kind":"contract-update-success","account_address":"0xf887ece39166906e","contract_name":"Car"},{"kind":"contract-update-success","account_address":"0xf887ece39166906e","contract_name":"CarClub"},{"kind":"contract-update-success","account_address":"0xf887ece39166906e","contract_name":"Helmet"},{"kind":"contract-update-success","account_address":"0xf887ece39166906e","contract_name":"Tires"},{"kind":"contract-update-success","account_address":"0xf887ece39166906e","contract_name":"VroomToken"},{"kind":"contract-update-success","account_address":"0xf887ece39166906e","contract_name":"Wheel"},{"kind":"contract-update-success","account_address":"0x789f3b9f5697c821","contract_name":"dopesickaquarium_NFT"},{"kind":"contract-update-success","account_address":"0x324e44b6587994dc","contract_name":"hu56eye_NFT"},{"kind":"contract-update-success","account_address":"0xbd67b8627ffe1f7f","contract_name":"yege_NFT"},{"kind":"contract-update-success","account_address":"0xd40fc03828a09cbc","contract_name":"dgiq_NFT"},{"kind":"contract-update-success","account_address":"0xd9ec8a4e8c191338","contract_name":"daniyelt1_NFT"},{"kind":"contract-update-success","account_address":"0xa7e5dd25e22cbc4c","contract_name":"adriennebrown_NFT"},{"kind":"contract-update-success","account_address":"0x72963f98fdc42a9a","contract_name":"thatfunguy_NFT"},{"kind":"contract-update-success","account_address":"0x84c450d214dbfbba","contract_name":"gernigin0922_NFT"},{"kind":"contract-update-success","account_address":"0xd6374fee25f5052a","contract_name":"moldysnfts_NFT"},{"kind":"contract-update-success","account_address":"0x85546cbde38a55a9","contract_name":"born2beast_NFT"},{"kind":"contract-update-success","account_address":"0x556b63bdd64d4d8f","contract_name":"trix_NFT"},{"kind":"contract-update-success","account_address":"0x83a7e7fdf850d0f8","contract_name":"davoodi_NFT"},{"kind":"contract-update-success","account_address":"0xdc0456515003be15","contract_name":"sugma_NFT"},{"kind":"contract-update-success","account_address":"0xca5c31c0c03e11be","contract_name":"Sportbit"},{"kind":"contract-update-success","account_address":"0xca5c31c0c03e11be","contract_name":"Sportvatar"},{"kind":"contract-update-success","account_address":"0xca5c31c0c03e11be","contract_name":"SportvatarPack"},{"kind":"contract-update-success","account_address":"0xca5c31c0c03e11be","contract_name":"SportvatarTemplate"},{"kind":"contract-update-success","account_address":"0xa6d0e12d796a37e4","contract_name":"casino_NFT"},{"kind":"contract-update-success","account_address":"0xdc5c95e7d4c30f6f","contract_name":"walshrus_NFT"},{"kind":"contract-update-success","account_address":"0xa1e2f38b005086b6","contract_name":"digitize_NFT"},{"kind":"contract-update-success","account_address":"0x7e863fa94ef7e3f4","contract_name":"calimint_NFT"},{"kind":"contract-update-success","account_address":"0x5d79d00adf6d1af8","contract_name":"madisonhunterarts_NFT"},{"kind":"contract-update-success","account_address":"0xd3de94c8914fc06a","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x8b148183c28ff88f","contract_name":"Gaia"},{"kind":"contract-update-success","account_address":"0xf1cd6a87becaabb0","contract_name":"jeeter_NFT"},{"kind":"contract-update-success","account_address":"0x14fbe6f814e47f16","contract_name":"VCTChallenges"},{"kind":"contract-update-success","account_address":"0xdcdaac18a10480e9","contract_name":"shayan_NFT"},{"kind":"contract-update-success","account_address":"0x1e9ecb5b99a9c469","contract_name":"mitchelsart_NFT"},{"kind":"contract-update-success","account_address":"0x46e2707c568f51a5","contract_name":"splitcubetechnologie_NFT"},{"kind":"contract-update-success","account_address":"0xf491c52542e1fd93","contract_name":"pulsecoresystems_NFT"},{"kind":"contract-update-success","account_address":"0xce3727a699c70b1c","contract_name":"dragsters_NFT"},{"kind":"contract-update-success","account_address":"0xe9141f6b59c9ed9c","contract_name":"sample_NFT"},{"kind":"contract-update-success","account_address":"0x4b7cafebb6c6dc27","contract_name":"TrmAssetMSV1_0"},{"kind":"contract-update-failure","account_address":"0xeb58cbc1b2675bfe","contract_name":"DivineEnergyFitness","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e eb58cbc1b2675bfe.DivineEnergyFitness:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e eb58cbc1b2675bfe.DivineEnergyFitness:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x5c93c999824d84b2","contract_name":"aaronbrych_NFT"},{"kind":"contract-update-success","account_address":"0x25b7e103ce5520a3","contract_name":"photoshomal_NFT"},{"kind":"contract-update-success","account_address":"0x427ceada271aa0b1","contract_name":"HoodlumsMetadata"},{"kind":"contract-update-success","account_address":"0x427ceada271aa0b1","contract_name":"SturdyItems"},{"kind":"contract-update-success","account_address":"0xfaeed1c8788b55ec","contract_name":"yasinmarket_NFT"},{"kind":"contract-update-success","account_address":"0x3f90b3217be44e47","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x3b5cf9f999a97363","contract_name":"notanothershop_NFT"},{"kind":"contract-update-success","account_address":"0x263c1cd6a05e9602","contract_name":"nftminters_NFT"},{"kind":"contract-update-success","account_address":"0xdc922db1f3c0e940","contract_name":"fshop_NFT"},{"kind":"contract-update-success","account_address":"0xfb84b8d3cc0e0dae","contract_name":"occultvisuals_NFT"},{"kind":"contract-update-success","account_address":"0x021dc83bcc939249","contract_name":"viridiam_NFT"},{"kind":"contract-update-success","account_address":"0x98226d138bae8a8a","contract_name":"theforgottennfts_NFT"},{"kind":"contract-update-success","account_address":"0xbdcca776b22ed821","contract_name":"wildcats_NFT"},{"kind":"contract-update-success","account_address":"0xa7dfc1638a7f63af","contract_name":"jlawriecpa_NFT"},{"kind":"contract-update-success","account_address":"0xd62f5bf5ce547692","contract_name":"newswaglife1976_NFT"},{"kind":"contract-update-success","account_address":"0x807c3d470888cc48","contract_name":"Backpack"},{"kind":"contract-update-failure","account_address":"0x807c3d470888cc48","contract_name":"BackpackMinter","error":"error: error getting program 807c3d470888cc48.HybridCustodyHelper: failed to derive value: load program failed: Checking failed:\nerror: value of type `\u0026Account` has no member `getCapability`\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:40:38\n\nerror: value of type `\u0026Account` has no member `getCapability`\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:56:52\n\nerror: cannot infer type: requires an explicit type annotation\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:56:137\n\nerror: value of type `\u0026Account` has no member `getCapability`\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:65:49\n\nerror: cannot infer type: requires an explicit type annotation\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:66:79\n\nerror: value of type `\u0026Account` has no member `getCapability`\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:78:58\n\nerror: cannot infer type: requires an explicit type annotation\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:78:147\n\nerror: value of type `\u0026Account` has no member `getCapability`\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:87:47\n\nerror: cannot infer type: requires an explicit type annotation\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:88:71\n\nerror: value of type `\u0026Account` has no member `getCapability`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:100:58\n\nerror: value of type `\u0026Account` has no member `getCapability`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:120:56\n\nerror: cannot infer type: requires an explicit type annotation\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:120:141\n\nerror: value of type `\u0026Account` has no member `getCapability`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:129:53\n\nerror: cannot infer type: requires an explicit type annotation\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:130:83\n\nerror: value of type `\u0026Account` has no member `getCapability`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:142:58\n\nerror: cannot infer type: requires an explicit type annotation\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:142:147\n\nerror: value of type `\u0026Account` has no member `getCapability`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:151:55\n\nerror: cannot infer type: requires an explicit type annotation\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:152:97\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `borrow`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:164:18\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `save`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:168:19\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `link`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:170:19\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `unlink`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:173:19\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `link`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:176:19\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `borrow`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:180:18\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `save`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:184:19\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `link`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:186:19\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `unlink`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:189:19\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `link`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:192:19\n\n--\u003e 807c3d470888cc48.HybridCustodyHelper\n\nerror: cannot find type in this scope: `AuthAccount`\n  --\u003e 807c3d470888cc48.BackpackMinter:28:44\n   |\n28 | \tfun claimBackPack(tokenID: UInt64, signer: AuthAccount, setID: UInt64){ \n   | \t                                           ^^^^^^^^^^^ not found in this scope\n\nerror: cannot find variable in this scope: `HybridCustodyHelper`\n  --\u003e 807c3d470888cc48.BackpackMinter:39:3\n   |\n39 | \t\t\tHybridCustodyHelper.getFlunksTokenIDsFromAllLinkedAccounts(ownerAddress: signer.address)\n   | \t\t\t^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find variable in this scope: `HybridCustodyHelper`\n  --\u003e 807c3d470888cc48.BackpackMinter:45:2\n   |\n45 | \t\tHybridCustodyHelper.forceRelinkCollections(signer: signer)\n   | \t\t^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: incorrect number of type arguments\n  --\u003e 807c3d470888cc48.BackpackMinter:52:12\n   |\n52 | \t\t\t).borrow\u003c\u0026{NonFungibleToken.CollectionPublic}\u003e()\n   | \t\t\t         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected up to 0, got 1\n\nerror: cannot find variable in this scope: `HybridCustodyHelper`\n  --\u003e 807c3d470888cc48.BackpackMinter:70:3\n   |\n70 | \t\t\tHybridCustodyHelper.getChildAccountAddressHoldingFlunksTokenId(\n   | \t\t\t^^^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror: incorrect argument label\n  --\u003e 807c3d470888cc48.BackpackMinter:80:43\n   |\n80 | \t\tlet item = trueOwnercollection.borrowNFT(id: tokenID)\n   | \t\t                                         ^^^ expected no label, got `id`\n\nerror: value of type `\u0026{NonFungibleToken.NFT}?` has no member `resolveView`\n  --\u003e 807c3d470888cc48.BackpackMinter:82:8\n   |\n82 | \t\t\titem.resolveView(Type\u003cMetadataViews.Serial\u003e())\n   | \t\t\t     ^^^^^^^^^^^ type is optional, consider optional-chaining: ?.resolveView\n"},{"kind":"contract-update-success","account_address":"0x807c3d470888cc48","contract_name":"Flunks"},{"kind":"contract-update-success","account_address":"0x807c3d470888cc48","contract_name":"GUM"},{"kind":"contract-update-success","account_address":"0x807c3d470888cc48","contract_name":"GUMStakingTracker"},{"kind":"contract-update-failure","account_address":"0x807c3d470888cc48","contract_name":"HybridCustodyHelper","error":"error: value of type `\u0026Account` has no member `getCapability`\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:40:38\n   |\n40 |         let parentPublic = parentAcct.getCapability(HybridCustody.ManagerPublicPath)\n   |                                       ^^^^^^^^^^^^^ unknown member\n\nerror: value of type `\u0026Account` has no member `getCapability`\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:56:52\n   |\n56 |     let mainCollectionFlunksTokenIDs = ownerAccount.getCapability\u003c\u0026Flunks.Collection\u003e(Flunks.CollectionPublicPath).borrow()?.getIDs() ?? []\n   |                                                     ^^^^^^^^^^^^^ unknown member\n\nerror: cannot infer type: requires an explicit type annotation\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:56:137\n   |\n56 |     let mainCollectionFlunksTokenIDs = ownerAccount.getCapability\u003c\u0026Flunks.Collection\u003e(Flunks.CollectionPublicPath).borrow()?.getIDs() ?? []\n   |                                                                                                                                          ^\n\nerror: value of type `\u0026Account` has no member `getCapability`\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:65:49\n   |\n65 |         let childFlunksCollection = childAccount.getCapability\u003c\u0026Flunks.Collection\u003e(Flunks.CollectionPublicPath).borrow()\n   |                                                  ^^^^^^^^^^^^^ unknown member\n\nerror: cannot infer type: requires an explicit type annotation\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:66:79\n   |\n66 |         let childFlunksCollectionTokenIDs = childFlunksCollection?.getIDs() ?? []\n   |                                                                                ^\n\nerror: value of type `\u0026Account` has no member `getCapability`\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:78:58\n   |\n78 |         let mainCollectionBackpackTokenIDs = ownerAccount.getCapability\u003c\u0026Backpack.Collection\u003e(Backpack.CollectionPublicPath).borrow()?.getIDs() ?? []\n   |                                                           ^^^^^^^^^^^^^ unknown member\n\nerror: cannot infer type: requires an explicit type annotation\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:78:147\n   |\n78 |         let mainCollectionBackpackTokenIDs = ownerAccount.getCapability\u003c\u0026Backpack.Collection\u003e(Backpack.CollectionPublicPath).borrow()?.getIDs() ?? []\n   |                                                                                                                                                    ^\n\nerror: value of type `\u0026Account` has no member `getCapability`\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:87:47\n   |\n87 |             let childCollection = childAccount.getCapability\u003c\u0026Backpack.Collection\u003e(Backpack.CollectionPublicPath).borrow()\n   |                                                ^^^^^^^^^^^^^ unknown member\n\nerror: cannot infer type: requires an explicit type annotation\n  --\u003e 807c3d470888cc48.HybridCustodyHelper:88:71\n   |\n88 |             let childCollectionTokenIds = childCollection?.getIDs() ?? []\n   |                                                                        ^\n\nerror: value of type `\u0026Account` has no member `getCapability`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:100:58\n    |\n100 |             if let trueOwnerCollection = trueOwnerAccount.getCapability\u003c\u0026Backpack.Collection\u003e(Backpack.CollectionPublicPath).borrow() {\n    |                                                           ^^^^^^^^^^^^^ unknown member\n\nerror: value of type `\u0026Account` has no member `getCapability`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:120:56\n    |\n120 |         let mainCollectionFlunksTokenIDs = ownerAccount.getCapability\u003c\u0026Flunks.Collection\u003e(Flunks.CollectionPublicPath).borrow()?.getIDs() ?? []\n    |                                                         ^^^^^^^^^^^^^ unknown member\n\nerror: cannot infer type: requires an explicit type annotation\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:120:141\n    |\n120 |         let mainCollectionFlunksTokenIDs = ownerAccount.getCapability\u003c\u0026Flunks.Collection\u003e(Flunks.CollectionPublicPath).borrow()?.getIDs() ?? []\n    |                                                                                                                                              ^\n\nerror: value of type `\u0026Account` has no member `getCapability`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:129:53\n    |\n129 |             let childFlunksCollection = childAccount.getCapability\u003c\u0026Flunks.Collection\u003e(Flunks.CollectionPublicPath).borrow()\n    |                                                      ^^^^^^^^^^^^^ unknown member\n\nerror: cannot infer type: requires an explicit type annotation\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:130:83\n    |\n130 |             let childFlunksCollectionTokenIDs = childFlunksCollection?.getIDs() ?? []\n    |                                                                                    ^\n\nerror: value of type `\u0026Account` has no member `getCapability`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:142:58\n    |\n142 |         let mainCollectionBackpackTokenIDs = ownerAccount.getCapability\u003c\u0026Backpack.Collection\u003e(Backpack.CollectionPublicPath).borrow()?.getIDs() ?? []\n    |                                                           ^^^^^^^^^^^^^ unknown member\n\nerror: cannot infer type: requires an explicit type annotation\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:142:147\n    |\n142 |         let mainCollectionBackpackTokenIDs = ownerAccount.getCapability\u003c\u0026Backpack.Collection\u003e(Backpack.CollectionPublicPath).borrow()?.getIDs() ?? []\n    |                                                                                                                                                    ^\n\nerror: value of type `\u0026Account` has no member `getCapability`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:151:55\n    |\n151 |             let childBackpackCollection = childAccount.getCapability\u003c\u0026Backpack.Collection\u003e(Backpack.CollectionPublicPath).borrow()\n    |                                                        ^^^^^^^^^^^^^ unknown member\n\nerror: cannot infer type: requires an explicit type annotation\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:152:97\n    |\n152 |             let childBackpackCollectionTokenIDs: [UInt64] = childBackpackCollection?.getIDs() ?? []\n    |                                                                                                  ^\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `borrow`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:164:18\n    |\n164 |         if signer.borrow\u003c\u0026Flunks.Collection\u003e(from: Flunks.CollectionStoragePath) == nil {\n    |                   ^^^^^^ unknown member\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `save`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:168:19\n    |\n168 |             signer.save(\u003c-collection, to: Flunks.CollectionStoragePath)\n    |                    ^^^^ unknown member\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `link`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:170:19\n    |\n170 |             signer.link\u003c\u0026Flunks.Collection\u003e(Flunks.CollectionPublicPath, target: Flunks.CollectionStoragePath)\n    |                    ^^^^ unknown member\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `unlink`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:173:19\n    |\n173 |             signer.unlink(Flunks.CollectionPublicPath)\n    |                    ^^^^^^ unknown member\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `link`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:176:19\n    |\n176 |             signer.link\u003c\u0026Flunks.Collection\u003e(Flunks.CollectionPublicPath, target: Flunks.CollectionStoragePath)\n    |                    ^^^^ unknown member\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `borrow`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:180:18\n    |\n180 |         if signer.borrow\u003c\u0026Backpack.Collection\u003e(from: Backpack.CollectionStoragePath) == nil {\n    |                   ^^^^^^ unknown member\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `save`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:184:19\n    |\n184 |             signer.save(\u003c-collection, to: Backpack.CollectionStoragePath)\n    |                    ^^^^ unknown member\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `link`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:186:19\n    |\n186 |             signer.link\u003c\u0026Backpack.Collection\u003e(Backpack.CollectionPublicPath, target: Backpack.CollectionStoragePath)\n    |                    ^^^^ unknown member\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `unlink`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:189:19\n    |\n189 |             signer.unlink(Backpack.CollectionPublicPath)\n    |                    ^^^^^^ unknown member\n\nerror: value of type `auth(Storage, Contracts, Keys, Inbox, Capabilities) \u0026Account` has no member `link`\n   --\u003e 807c3d470888cc48.HybridCustodyHelper:192:19\n    |\n192 |             signer.link\u003c\u0026Backpack.Collection\u003e(Backpack.CollectionPublicPath, target: Backpack.CollectionStoragePath)\n    |                    ^^^^ unknown member\n"},{"kind":"contract-update-success","account_address":"0x807c3d470888cc48","contract_name":"Patch"},{"kind":"contract-update-success","account_address":"0xabfdfd1a57937337","contract_name":"manu_NFT"},{"kind":"contract-update-success","account_address":"0xc27024803892baf3","contract_name":"animeamerica_NFT"},{"kind":"contract-update-success","account_address":"0xde7b776682812cce","contract_name":"shine_NFT"},{"kind":"contract-update-success","account_address":"0x76a9b420a331b9f0","contract_name":"CompoundInterest"},{"kind":"contract-update-success","account_address":"0x76a9b420a331b9f0","contract_name":"StarlyTokenStaking"},{"kind":"contract-update-success","account_address":"0x227658f373a0cccc","contract_name":"publishednft_NFT"},{"kind":"contract-update-success","account_address":"0x2ee6b1a909aac5cb","contract_name":"lizzardlounge_NFT"},{"kind":"contract-update-success","account_address":"0xf05d20e272b2a8dd","contract_name":"notman_NFT"},{"kind":"contract-update-success","account_address":"0x57781bea69075549","contract_name":"testingrebalanced_NFT"},{"kind":"contract-update-success","account_address":"0xbf3bd6c78f858ae7","contract_name":"darkmatterinc_NFT"},{"kind":"contract-update-success","account_address":"0xda421c78e2f7e0e7","contract_name":"StanzClub"},{"kind":"contract-update-success","account_address":"0xc5b7d5f9aff39975","contract_name":"nufsaid_NFT"},{"kind":"contract-update-success","account_address":"0xc01fe8b7ee0a9891","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0xd796ff17107bbff6","contract_name":"Art"},{"kind":"contract-update-success","account_address":"0xd796ff17107bbff6","contract_name":"Auction"},{"kind":"contract-update-success","account_address":"0xd796ff17107bbff6","contract_name":"Content"},{"kind":"contract-update-success","account_address":"0xd796ff17107bbff6","contract_name":"Marketplace"},{"kind":"contract-update-success","account_address":"0xd796ff17107bbff6","contract_name":"Profile"},{"kind":"contract-update-success","account_address":"0xd796ff17107bbff6","contract_name":"Versus"},{"kind":"contract-update-success","account_address":"0x77e9de5695e0fd9d","contract_name":"kafir_NFT"},{"kind":"contract-update-success","account_address":"0x2d4c3caffbeab845","contract_name":"FLOAT"},{"kind":"contract-update-success","account_address":"0x2d4c3caffbeab845","contract_name":"FLOATVerifiers"},{"kind":"contract-update-success","account_address":"0xa340dc0a4ec828ab","contract_name":"AddressUtils"},{"kind":"contract-update-success","account_address":"0xa340dc0a4ec828ab","contract_name":"ArrayUtils"},{"kind":"contract-update-success","account_address":"0xa340dc0a4ec828ab","contract_name":"ScopedFTProviders"},{"kind":"contract-update-success","account_address":"0xa340dc0a4ec828ab","contract_name":"ScopedNFTProviders"},{"kind":"contract-update-success","account_address":"0xa340dc0a4ec828ab","contract_name":"StringUtils"},{"kind":"contract-update-success","account_address":"0x8f3e345219de6fed","contract_name":"NFL"},{"kind":"contract-update-success","account_address":"0x788056c80d807216","contract_name":"thebigone_NFT"},{"kind":"contract-update-success","account_address":"0x75ad4b01958fb0a2","contract_name":"game_NFT"},{"kind":"contract-update-success","account_address":"0x62a04b5afa05bb76","contract_name":"carry_NFT"},{"kind":"contract-update-success","account_address":"0xac57fcdba1725ccc","contract_name":"ezpz_NFT"},{"kind":"contract-update-success","account_address":"0x1437d34056f6a49d","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0x61fc4b873e58733b","contract_name":"TrmAssetV2_2"},{"kind":"contract-update-success","account_address":"0x61fc4b873e58733b","contract_name":"TrmMarketV2_2"},{"kind":"contract-update-success","account_address":"0x61fc4b873e58733b","contract_name":"TrmRentV2_2"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"ActualInfinity"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"BIP39WordList"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"ConcreteAlphabets"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"ConcreteAlphabetsFrench"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"ConcreteAlphabetsHangle"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"ConcreteAlphabetsHiragana"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"ConcreteAlphabetsSimplifiedChinese"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"ConcreteAlphabetsSpanish"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"ConcreteAlphabetsTraditionalChinese"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"ConcreteBlockPoetry"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"ConcreteBlockPoetryBIP39"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"DateUtil"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"DeepSea"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"Deities"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"EffectiveLifeTime"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"FirstFinalTouch"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"Fountain"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"MediaArts"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"Metabolism"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"NeverEndingStory"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"ObjectOrientedOntology"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"Purification"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"Quine"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"RoyaltEffects"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"Setsuna"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"StudyOfThings"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"Tanabata"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"UndefinedCode"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"Universe"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"Waterfalls"},{"kind":"contract-update-success","account_address":"0x23b08a725bc2533d","contract_name":"YaoyorozunoKami"},{"kind":"contract-update-success","account_address":"0x71d2d3c3b884fc74","contract_name":"mobileraincitydetail_NFT"},{"kind":"contract-update-success","account_address":"0x8fe643bb682405e1","contract_name":"vahidtlbi_NFT"},{"kind":"contract-update-success","account_address":"0xf0b72103209dc63c","contract_name":"EndeavorATL_NFT"},{"kind":"contract-update-success","account_address":"0x4aab1bdddbc229b6","contract_name":"slappyclown_NFT"},{"kind":"contract-update-success","account_address":"0x3777d5b56e1de5ef","contract_name":"cadentejada25_NFT"},{"kind":"contract-update-success","account_address":"0x675e9c2d6c798706","contract_name":"tylerz1000_NFT"},{"kind":"contract-update-success","account_address":"0x30c7989ef730601d","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0xf46cefd3c17cbcea","contract_name":"BigEast"},{"kind":"contract-update-success","account_address":"0x0a7a70c6542711e4","contract_name":"dognft_NFT"},{"kind":"contract-update-success","account_address":"0x128f8ca58b91a61f","contract_name":"lebgdu78_NFT"},{"kind":"contract-update-success","account_address":"0xc3d252ad9a356068","contract_name":"artforcreators_NFT"},{"kind":"contract-update-success","account_address":"0xe8f7fe660f18e7d5","contract_name":"somii666_NFT"},{"kind":"contract-update-success","account_address":"0x12d9c87d38fc7586","contract_name":"springernftfoundry_NFT"},{"kind":"contract-update-success","account_address":"0x3baefa89e7d82e59","contract_name":"amirkhan_NFT"},{"kind":"contract-update-success","account_address":"0xe86f03162d805404","contract_name":"buddybritk77_NFT"},{"kind":"contract-update-success","account_address":"0xe54d4663b543df4d","contract_name":"timburnfts_NFT"},{"kind":"contract-update-failure","account_address":"0xfd1ccaaae39d0e79","contract_name":"Mainledger","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e fd1ccaaae39d0e79.Mainledger:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e fd1ccaaae39d0e79.Mainledger:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-failure","account_address":"0xfd1ccaaae39d0e79","contract_name":"Pokertime","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e fd1ccaaae39d0e79.Pokertime:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e fd1ccaaae39d0e79.Pokertime:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0xff0f6be8b5e0d3ab","contract_name":"venuscouncil_NFT"},{"kind":"contract-update-success","account_address":"0x8e94a6a6a16aae1d","contract_name":"_7drive_NFT"},{"kind":"contract-update-success","account_address":"0xd4bc2520a3920522","contract_name":"lglifeisgoodproducts_NFT"},{"kind":"contract-update-success","account_address":"0x69261f9b4be6cb8e","contract_name":"chickenkelly_NFT"},{"kind":"contract-update-success","account_address":"0xcc57f3db8638a3f6","contract_name":"pouyahami_NFT"},{"kind":"contract-update-success","account_address":"0xe355726e81f77499","contract_name":"geekkings_NFT"},{"kind":"contract-update-success","account_address":"0x191fd30c701447ba","contract_name":"dezmnd_NFT"},{"kind":"contract-update-success","account_address":"0x9c1c29c20e42dbc0","contract_name":"soyoumarriedamitch_NFT"},{"kind":"contract-update-success","account_address":"0xed724adc24e8c683","contract_name":"great_NFT"},{"kind":"contract-update-success","account_address":"0x05cd03ef8bb626f4","contract_name":"thehealer_NFT"},{"kind":"contract-update-success","account_address":"0xe0408e51b0b970a7","contract_name":"ShebaHopeGrows"},{"kind":"contract-update-success","account_address":"0x7afe31cec8ffcdb2","contract_name":"titan_NFT"},{"kind":"contract-update-success","account_address":"0xd0132ed2e5703893","contract_name":"yekta_NFT"},{"kind":"contract-update-success","account_address":"0xa460a79ebb8a680e","contract_name":"goodnfts_NFT"},{"kind":"contract-update-success","account_address":"0x6570f77a30ff24d2","contract_name":"murphys988_NFT"},{"kind":"contract-update-success","account_address":"0x1e4046e6e571d18c","contract_name":"kbshams1_NFT"},{"kind":"contract-update-success","account_address":"0x3613d5d74076f236","contract_name":"hopelessndopeless_NFT"},{"kind":"contract-update-success","account_address":"0x31b893d9179c76d5","contract_name":"ellie_NFT"},{"kind":"contract-update-success","account_address":"0x8bfc7dc5190aee21","contract_name":"clinicimplant_NFT"},{"kind":"contract-update-success","account_address":"0x62e7e4459324365c","contract_name":"darceesdrawings_NFT"},{"kind":"contract-update-success","account_address":"0x38f9a6fc697e5cf9","contract_name":"TwoSegmentsInterestRateModel"},{"kind":"contract-update-success","account_address":"0x5f65690240774da2","contract_name":"kiyvan5556_NFT"},{"kind":"contract-update-success","account_address":"0x4321c3ffaee0fdde","contract_name":"yege2020_NFT"},{"kind":"contract-update-success","account_address":"0x36c2ae37588a4023","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0xabe5a2bf47ce5bf3","contract_name":"aiSportsMinter"},{"kind":"contract-update-success","account_address":"0xfd92e5a76254e9e1","contract_name":"ken_NFT"},{"kind":"contract-update-success","account_address":"0xe88ad4dc2ef6b37d","contract_name":"faranak_NFT"},{"kind":"contract-update-success","account_address":"0xb7604cff6edfb43e","contract_name":"ggproductions_NFT"},{"kind":"contract-update-success","account_address":"0x01357d00e41bceba","contract_name":"synna_NFT"},{"kind":"contract-update-success","account_address":"0x5ed72ac4b90b64f3","contract_name":"tokentrove_NFT"},{"kind":"contract-update-success","account_address":"0x7127a801c0b5eea6","contract_name":"polobreadwinnernft_NFT"},{"kind":"contract-update-success","account_address":"0xf20df769e658c257","contract_name":"LicensedNFT"},{"kind":"contract-update-success","account_address":"0xf20df769e658c257","contract_name":"MatrixWorldAssetsNFT"},{"kind":"contract-update-success","account_address":"0xbdfcee3f2f4910a0","contract_name":"commercetown_NFT"},{"kind":"contract-update-success","account_address":"0x69f7248d9ab1baee","contract_name":"peakypike_NFT"},{"kind":"contract-update-success","account_address":"0x87d8e6dcf5c79a4f","contract_name":"nftminter_NFT"},{"kind":"contract-update-success","account_address":"0x5210b683ea4eb80b","contract_name":"digitalizedmasterpie_NFT"},{"kind":"contract-update-success","account_address":"0x63691ca5332aa418","contract_name":"uniburstproductions_NFT"},{"kind":"contract-update-success","account_address":"0x495a5be989d22f48","contract_name":"artmonger_NFT"},{"kind":"contract-update-success","account_address":"0x27e29e6da280b548","contract_name":"scorpius666_NFT"},{"kind":"contract-update-success","account_address":"0xbdbe70269ecb648a","contract_name":"Gift"},{"kind":"contract-update-success","account_address":"0x2c9de937c319468d","contract_name":"Cimelio_NFT"},{"kind":"contract-update-success","account_address":"0x42d2ffb28243164a","contract_name":"cryptocanvas_NFT"},{"kind":"contract-update-success","account_address":"0xf30791d540314405","contract_name":"slicks_NFT"},{"kind":"contract-update-success","account_address":"0x370a6712d9993141","contract_name":"arish_NFT"},{"kind":"contract-update-success","account_address":"0x1dd5caae66e2c440","contract_name":"FLOATChallengeVerifiers"},{"kind":"contract-update-success","account_address":"0x1dd5caae66e2c440","contract_name":"FLOATEventSeries"},{"kind":"contract-update-success","account_address":"0x1dd5caae66e2c440","contract_name":"FLOATEventSeriesGoals"},{"kind":"contract-update-success","account_address":"0x1dd5caae66e2c440","contract_name":"FLOATEventSeriesViews"},{"kind":"contract-update-success","account_address":"0x1dd5caae66e2c440","contract_name":"FLOATTreasuryStrategies"},{"kind":"contract-update-success","account_address":"0x34ba81b8b761306e","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x0624563e84f1d5d5","contract_name":"ohk_NFT"},{"kind":"contract-update-success","account_address":"0x0af46937276c9877","contract_name":"_12dcreations_NFT"},{"kind":"contract-update-success","account_address":"0x8f9231920da9af6d","contract_name":"AFLAdmin"},{"kind":"contract-update-success","account_address":"0x8f9231920da9af6d","contract_name":"AFLBadges"},{"kind":"contract-update-success","account_address":"0x8f9231920da9af6d","contract_name":"AFLBurnExchange"},{"kind":"contract-update-success","account_address":"0x8f9231920da9af6d","contract_name":"AFLBurnRegistry"},{"kind":"contract-update-success","account_address":"0x8f9231920da9af6d","contract_name":"AFLMarketplace"},{"kind":"contract-update-success","account_address":"0x8f9231920da9af6d","contract_name":"AFLMarketplaceV2"},{"kind":"contract-update-success","account_address":"0x8f9231920da9af6d","contract_name":"AFLMetadataHelper"},{"kind":"contract-update-success","account_address":"0x8f9231920da9af6d","contract_name":"AFLNFT"},{"kind":"contract-update-success","account_address":"0x8f9231920da9af6d","contract_name":"AFLPack"},{"kind":"contract-update-success","account_address":"0x8f9231920da9af6d","contract_name":"AFLUpgradeAdmin"},{"kind":"contract-update-success","account_address":"0x8f9231920da9af6d","contract_name":"AFLUpgradeExchange"},{"kind":"contract-update-success","account_address":"0x8f9231920da9af6d","contract_name":"PackRestrictions"},{"kind":"contract-update-success","account_address":"0x8f9231920da9af6d","contract_name":"StorageHelper"},{"kind":"contract-update-success","account_address":"0x6cd1413ad75e778b","contract_name":"darkdude_NFT"},{"kind":"contract-update-success","account_address":"0x7c373ed52d1c1706","contract_name":"meghdadnft_NFT"},{"kind":"contract-update-success","account_address":"0x9066631feda9e518","contract_name":"FungibleTokenCatalog"},{"kind":"contract-update-success","account_address":"0x0d9bc5af3fc0c2e3","contract_name":"TuneGO"},{"kind":"contract-update-success","account_address":"0xfc91de5e6566cc7c","contract_name":"FBRC"},{"kind":"contract-update-success","account_address":"0xfc91de5e6566cc7c","contract_name":"GarmentNFT"},{"kind":"contract-update-success","account_address":"0xfc91de5e6566cc7c","contract_name":"ItemNFT"},{"kind":"contract-update-success","account_address":"0xfc91de5e6566cc7c","contract_name":"MaterialNFT"},{"kind":"contract-update-success","account_address":"0x6f45a64c6f9d5004","contract_name":"arashabtahi_NFT"},{"kind":"contract-update-success","account_address":"0xdacdb6a3ae55cfbe","contract_name":"manuelmontenegro_NFT"},{"kind":"contract-update-success","account_address":"0x2bbcf99d0d0b346b","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x32fd4fb97e08203a","contract_name":"jlmj_NFT"},{"kind":"contract-update-success","account_address":"0x231cc0dbbcffc4b7","contract_name":"RLY"},{"kind":"contract-update-success","account_address":"0x231cc0dbbcffc4b7","contract_name":"ceAVAX"},{"kind":"contract-update-success","account_address":"0x231cc0dbbcffc4b7","contract_name":"ceBNB"},{"kind":"contract-update-success","account_address":"0x231cc0dbbcffc4b7","contract_name":"ceBUSD"},{"kind":"contract-update-success","account_address":"0x231cc0dbbcffc4b7","contract_name":"ceDAI"},{"kind":"contract-update-success","account_address":"0x231cc0dbbcffc4b7","contract_name":"ceFTM"},{"kind":"contract-update-success","account_address":"0x231cc0dbbcffc4b7","contract_name":"ceMATIC"},{"kind":"contract-update-success","account_address":"0x231cc0dbbcffc4b7","contract_name":"ceUSDT"},{"kind":"contract-update-success","account_address":"0x231cc0dbbcffc4b7","contract_name":"ceWBTC"},{"kind":"contract-update-success","account_address":"0x231cc0dbbcffc4b7","contract_name":"ceWETH"},{"kind":"contract-update-success","account_address":"0x649ba8d87a2297e7","contract_name":"shy_NFT"},{"kind":"contract-update-success","account_address":"0xdeaeb55d6a70df86","contract_name":"Test"},{"kind":"contract-update-success","account_address":"0xcb32e3945b92ec42","contract_name":"drktnk_NFT"},{"kind":"contract-update-success","account_address":"0x2478516afff0984e","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x72d95e9e3f2a8cdd","contract_name":"morteza_NFT"},{"kind":"contract-update-success","account_address":"0x499afd32b9e0ade5","contract_name":"eli_NFT"},{"kind":"contract-update-success","account_address":"0x01fc53f3681b4a05","contract_name":"elmidy06_NFT"},{"kind":"contract-update-success","account_address":"0xddefe7e4b79d2058","contract_name":"soulnft_NFT"},{"kind":"contract-update-success","account_address":"0xe0d090c84e3b20dd","contract_name":"servingpurpose_NFT"},{"kind":"contract-update-success","account_address":"0x0108180a3cfed8d6","contract_name":"harbey_NFT"},{"kind":"contract-update-success","account_address":"0xa9ca2b8eecfc253b","contract_name":"kendo7_NFT"},{"kind":"contract-update-success","account_address":"0x39e42c67cc851cfb","contract_name":"EmeraldIdentity"},{"kind":"contract-update-success","account_address":"0x39e42c67cc851cfb","contract_name":"EmeraldIdentityDapper"},{"kind":"contract-update-success","account_address":"0x39e42c67cc851cfb","contract_name":"EmeraldIdentityLilico"},{"kind":"contract-update-success","account_address":"0x39e42c67cc851cfb","contract_name":"EmeraldIdentityShadow"},{"kind":"contract-update-success","account_address":"0x7620acf6d7f2468a","contract_name":"Bl0x"},{"kind":"contract-update-success","account_address":"0x7620acf6d7f2468a","contract_name":"Clock"},{"kind":"contract-update-success","account_address":"0x7620acf6d7f2468a","contract_name":"Debug"},{"kind":"contract-update-success","account_address":"0x29fcd0b5e444242a","contract_name":"StakedStarlyCard"},{"kind":"contract-update-success","account_address":"0x29fcd0b5e444242a","contract_name":"StarlyCardStaking"},{"kind":"contract-update-success","account_address":"0x60bbfd14ee8088dd","contract_name":"siyamak_NFT"},{"kind":"contract-update-success","account_address":"0x29fcd0b5e444242a","contract_name":"StarlyCardStakingClaims"},{"kind":"contract-update-success","account_address":"0x2df970b6cdee5735","contract_name":"LendingConfig"},{"kind":"contract-update-success","account_address":"0x2df970b6cdee5735","contract_name":"LendingError"},{"kind":"contract-update-success","account_address":"0x2df970b6cdee5735","contract_name":"LendingInterfaces"},{"kind":"contract-update-success","account_address":"0x71eef106c16a4100","contract_name":"jefedelobs_NFT"},{"kind":"contract-update-success","account_address":"0x92d632d85e407cf6","contract_name":"mullberysphere_NFT"},{"kind":"contract-update-success","account_address":"0x20c8ef24bdc45cbb","contract_name":"inoutdosdonts_NFT"},{"kind":"contract-update-success","account_address":"0x8d2bb651abb608c2","contract_name":"venus_NFT"},{"kind":"contract-update-success","account_address":"0x8bd713a78b896910","contract_name":"shopshoop_NFT"},{"kind":"contract-update-success","account_address":"0xe15e1e22d51c1fe7","contract_name":"angel_NFT"},{"kind":"contract-update-success","account_address":"0x4f761b25f92d9283","contract_name":"kumgo69pass_NFT"},{"kind":"contract-update-success","account_address":"0xe6901179c566970d","contract_name":"nfk_NFT"},{"kind":"contract-update-success","account_address":"0x9b28499600487c43","contract_name":"catsbag_NFT"},{"kind":"contract-update-success","account_address":"0x2ff554854640b4f5","contract_name":"BIP39WordList"},{"kind":"contract-update-success","account_address":"0xe3ac5e6a6b6c63db","contract_name":"TMB2B"},{"kind":"contract-update-success","account_address":"0x349916c1ca59745e","contract_name":"alphainfinite_NFT"},{"kind":"contract-update-failure","account_address":"0x7bf07d719dcb8480","contract_name":"brasil","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e 7bf07d719dcb8480.brasil:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e 7bf07d719dcb8480.brasil:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0xb36c0e1dd848e5ba","contract_name":"currentsea_NFT"},{"kind":"contract-update-success","account_address":"0xc02d0c14df140214","contract_name":"kidsnft_NFT"},{"kind":"contract-update-success","account_address":"0xf16194c255c62567","contract_name":"testtt_NFT"},{"kind":"contract-update-success","account_address":"0x1c7d5d603d4010e4","contract_name":"Sharks"},{"kind":"contract-update-success","account_address":"0xa1e1ed4b93c07278","contract_name":"karim_NFT"},{"kind":"contract-update-success","account_address":"0x37b92d1580b5c0b5","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x685cdb7632d2e000","contract_name":"lawsoncoin_NFT"},{"kind":"contract-update-success","account_address":"0xba837083f14f96c4","contract_name":"mrbalonienft_NFT"},{"kind":"contract-update-success","account_address":"0x06de034ac7252384","contract_name":"proxx_NFT"},{"kind":"contract-update-success","account_address":"0xee2f049f0ba04f0e","contract_name":"StarlyTokenVesting"},{"kind":"contract-update-success","account_address":"0xef210acfef76b798","contract_name":"_8bithumans_NFT"},{"kind":"contract-update-success","account_address":"0xa9523917d5d13df5","contract_name":"xiqco_NFT"},{"kind":"contract-update-success","account_address":"0x4a639cf65b8a2b69","contract_name":"tigernft_NFT"},{"kind":"contract-update-success","account_address":"0x56af1179d7eb7011","contract_name":"ashix_NFT"},{"kind":"contract-update-success","account_address":"0xf1ab99c82dee3526","contract_name":"USDCFlow"},{"kind":"contract-update-success","account_address":"0x85ee0073627c4c42","contract_name":"trollamir_NFT"},{"kind":"contract-update-success","account_address":"0x6305dc267e7e2864","contract_name":"gd2bk1ng_NFT"},{"kind":"contract-update-success","account_address":"0xf6e835789a6ba6c0","contract_name":"drstrange_NFT"},{"kind":"contract-update-success","account_address":"0x0a59d0bd6d6bbdb8","contract_name":"eriksartstudio_NFT"},{"kind":"contract-update-success","account_address":"0x4647701b3a98741e","contract_name":"chipsnojudgeshack_NFT"},{"kind":"contract-update-success","account_address":"0x66355ceed4b45924","contract_name":"adstony187_NFT"},{"kind":"contract-update-success","account_address":"0x5c608cd8ebc1f4f7","contract_name":"_456todd_NFT"},{"kind":"contract-update-success","account_address":"0x023649b045a5be67","contract_name":"echoist_NFT"},{"kind":"contract-update-success","account_address":"0x142fa6570b62fd97","contract_name":"StarlyToken"},{"kind":"contract-update-success","account_address":"0x6f0bf77181a77642","contract_name":"caindcain_NFT"},{"kind":"contract-update-success","account_address":"0x80a57b6be350a022","contract_name":"dheart2007_NFT"},{"kind":"contract-update-success","account_address":"0xc9b8ce957cfe4752","contract_name":"nftlegendsofthesea_NFT"},{"kind":"contract-update-success","account_address":"0x03300fc1a7c1c146","contract_name":"torfin_NFT"},{"kind":"contract-update-success","account_address":"0xdf5837f2de7e1d22","contract_name":"pixinstudio_NFT"},{"kind":"contract-update-success","account_address":"0x96ef43340d979075","contract_name":"ravenscloset_NFT"},{"kind":"contract-update-success","account_address":"0xe876e00638d54e75","contract_name":"LogEntry"},{"kind":"contract-update-success","account_address":"0x0c5e11fa94a22c5d","contract_name":"_778nate_NFT"},{"kind":"contract-update-success","account_address":"0x76d5f39592087646","contract_name":"directdemigod_NFT"},{"kind":"contract-update-success","account_address":"0xda3e2af72eee7aef","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x5b7fb8952aec0d7d","contract_name":"asadi2025_NFT"},{"kind":"contract-update-success","account_address":"0xcea0c362c4ceb422","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x86185fba578bc773","contract_name":"FCLCrypto"},{"kind":"contract-update-success","account_address":"0x86185fba578bc773","contract_name":"FanTopMarket"},{"kind":"contract-update-success","account_address":"0x86185fba578bc773","contract_name":"FanTopPermission"},{"kind":"contract-update-success","account_address":"0x86185fba578bc773","contract_name":"FanTopPermissionV2a"},{"kind":"contract-update-success","account_address":"0x86185fba578bc773","contract_name":"FanTopSerial"},{"kind":"contract-update-success","account_address":"0x86185fba578bc773","contract_name":"FanTopToken"},{"kind":"contract-update-success","account_address":"0x86185fba578bc773","contract_name":"Signature"},{"kind":"contract-update-success","account_address":"0xf7f6fef1b332ac38","contract_name":"virthonos_NFT"},{"kind":"contract-update-success","account_address":"0x1c58768aaf764115","contract_name":"groteskfunny_NFT"},{"kind":"contract-update-success","account_address":"0x2d483c93e21390d9","contract_name":"otwboys_NFT"},{"kind":"contract-update-success","account_address":"0x66e2b76cb91d67ab","contract_name":"expeditednextbusines_NFT"},{"kind":"contract-update-success","account_address":"0xf3ee684cd0259fed","contract_name":"Fuchibola_NFT"},{"kind":"contract-update-success","account_address":"0xd2cb1bfde27df5fe","contract_name":"toddprodd1_NFT"},{"kind":"contract-update-success","account_address":"0xedac5e8278acd507","contract_name":"bluishredart_NFT"},{"kind":"contract-update-success","account_address":"0x20b46c4690628e73","contract_name":"omidjoon_NFT"},{"kind":"contract-update-success","account_address":"0x15f55a75d7843780","contract_name":"NFTLocking"},{"kind":"contract-update-failure","account_address":"0x15f55a75d7843780","contract_name":"Swap","error":"error: error getting program 15f55a75d7843780.SwapArchive: failed to derive value: load program failed: Checking failed:\nerror: error getting program 15f55a75d7843780.Utils: failed to derive value: load program failed: Checking failed:\nerror: error getting program e52522745adf5c34.StringUtils: failed to derive value: load program failed: Parsing failed:\nerror: `pub` is no longer a valid access keyword\n --\u003e :5:0\n  |\n5 | pub contract StringUtils {\n  | ^^^\n\nerror: `pub` is no longer a valid access keyword\n --\u003e :7:4\n  |\n7 |     pub fun explode(_ s: String): [String]{\n  |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :15:4\n   |\n15 |     pub fun trimLeft(_ s: String): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :24:4\n   |\n24 |     pub fun trim(_ s: String): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :28:4\n   |\n28 |     pub fun replaceAll(_ s: String, _ search: String, _ replace: String): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :32:4\n   |\n32 |     pub fun hasPrefix(_ s: String, _ prefix: String) : Bool{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :36:4\n   |\n36 |     pub fun hasSuffix(_ s: String, _ suffix: String) : Bool{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :40:4\n   |\n40 |     pub fun index(_ s : String, _ substr : String, _ startIndex: Int): Int?{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :49:4\n   |\n49 |     pub fun count(_ s: String, _ substr: String): Int{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :57:4\n   |\n57 |     pub fun contains(_ s: String, _ substr: String): Bool {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :64:4\n   |\n64 |     pub fun substringUntil(_ s: String, _ until: String, _ startIndex: Int): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :71:4\n   |\n71 |     pub fun split(_ s: String, _ delimiter: String): [String] {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :82:4\n   |\n82 |     pub fun join(_ strs: [String], _ separator: String): String {\n   |     ^^^\n\n--\u003e e52522745adf5c34.StringUtils\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:77:14\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:81:23\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:40:15\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:61:15\n\n--\u003e 15f55a75d7843780.Utils\n\nerror: cannot find variable in this scope: `Utils`\n  --\u003e 15f55a75d7843780.SwapArchive:97:27\n\n--\u003e 15f55a75d7843780.SwapArchive\n\nerror: error getting program 15f55a75d7843780.Utils: failed to derive value: load program failed: Checking failed:\nerror: error getting program e52522745adf5c34.StringUtils: failed to derive value: load program failed: Parsing failed:\nerror: `pub` is no longer a valid access keyword\n --\u003e :5:0\n  |\n5 | pub contract StringUtils {\n  | ^^^\n\nerror: `pub` is no longer a valid access keyword\n --\u003e :7:4\n  |\n7 |     pub fun explode(_ s: String): [String]{\n  |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :15:4\n   |\n15 |     pub fun trimLeft(_ s: String): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :24:4\n   |\n24 |     pub fun trim(_ s: String): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :28:4\n   |\n28 |     pub fun replaceAll(_ s: String, _ search: String, _ replace: String): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :32:4\n   |\n32 |     pub fun hasPrefix(_ s: String, _ prefix: String) : Bool{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :36:4\n   |\n36 |     pub fun hasSuffix(_ s: String, _ suffix: String) : Bool{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :40:4\n   |\n40 |     pub fun index(_ s : String, _ substr : String, _ startIndex: Int): Int?{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :49:4\n   |\n49 |     pub fun count(_ s: String, _ substr: String): Int{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :57:4\n   |\n57 |     pub fun contains(_ s: String, _ substr: String): Bool {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :64:4\n   |\n64 |     pub fun substringUntil(_ s: String, _ until: String, _ startIndex: Int): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :71:4\n   |\n71 |     pub fun split(_ s: String, _ delimiter: String): [String] {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :82:4\n   |\n82 |     pub fun join(_ strs: [String], _ separator: String): String {\n   |     ^^^\n\n--\u003e e52522745adf5c34.StringUtils\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:77:14\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:81:23\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:40:15\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:61:15\n\n--\u003e 15f55a75d7843780.Utils\n\nerror: cannot find type in this scope: `Utils`\n  --\u003e 15f55a75d7843780.Swap:73:34\n   |\n73 | \t\taccess(all) let collectionData: Utils.StorableNFTCollectionData\n   | \t\t                                ^^^^^ not found in this scope\n\nerror: cannot find variable in this scope: `Utils`\n  --\u003e 15f55a75d7843780.Swap:94:25\n   |\n94 | \t\t\tself.collectionData = Utils.StorableNFTCollectionData(collectionData)\n   | \t\t\t                      ^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `SwapArchive`\n   --\u003e 15f55a75d7843780.Swap:436:56\n    |\n436 | \t\t\tlet mapNfts = fun (_ array: [ProposedTradeAsset]) : [SwapArchive.SwapNftData] {\n    | \t\t\t                                                     ^^^^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `SwapArchive`\n   --\u003e 15f55a75d7843780.Swap:437:15\n    |\n437 | \t\t\t\tvar res : [SwapArchive.SwapNftData] = []\n    | \t\t\t\t           ^^^^^^^^^^^ not found in this scope\n\nerror: cannot find variable in this scope: `SwapArchive`\n   --\u003e 15f55a75d7843780.Swap:439:19\n    |\n439 | \t\t\t\t\tlet nftData = SwapArchive.SwapNftData(\n    | \t\t\t\t\t              ^^^^^^^^^^^ not found in this scope\n\nerror: cannot find variable in this scope: `SwapArchive`\n   --\u003e 15f55a75d7843780.Swap:449:3\n    |\n449 | \t\t\tSwapArchive.archiveSwap(id: id, SwapArchive.SwapData(\n    | \t\t\t^^^^^^^^^^^ not found in this scope\n\nerror: cannot find variable in this scope: `SwapArchive`\n   --\u003e 15f55a75d7843780.Swap:449:35\n    |\n449 | \t\t\tSwapArchive.archiveSwap(id: id, SwapArchive.SwapData(\n    | \t\t\t                                ^^^^^^^^^^^ not found in this scope\n"},{"kind":"contract-update-failure","account_address":"0x15f55a75d7843780","contract_name":"SwapArchive","error":"error: error getting program 15f55a75d7843780.Utils: failed to derive value: load program failed: Checking failed:\nerror: error getting program e52522745adf5c34.StringUtils: failed to derive value: load program failed: Parsing failed:\nerror: `pub` is no longer a valid access keyword\n --\u003e :5:0\n  |\n5 | pub contract StringUtils {\n  | ^^^\n\nerror: `pub` is no longer a valid access keyword\n --\u003e :7:4\n  |\n7 |     pub fun explode(_ s: String): [String]{\n  |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :15:4\n   |\n15 |     pub fun trimLeft(_ s: String): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :24:4\n   |\n24 |     pub fun trim(_ s: String): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :28:4\n   |\n28 |     pub fun replaceAll(_ s: String, _ search: String, _ replace: String): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :32:4\n   |\n32 |     pub fun hasPrefix(_ s: String, _ prefix: String) : Bool{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :36:4\n   |\n36 |     pub fun hasSuffix(_ s: String, _ suffix: String) : Bool{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :40:4\n   |\n40 |     pub fun index(_ s : String, _ substr : String, _ startIndex: Int): Int?{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :49:4\n   |\n49 |     pub fun count(_ s: String, _ substr: String): Int{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :57:4\n   |\n57 |     pub fun contains(_ s: String, _ substr: String): Bool {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :64:4\n   |\n64 |     pub fun substringUntil(_ s: String, _ until: String, _ startIndex: Int): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :71:4\n   |\n71 |     pub fun split(_ s: String, _ delimiter: String): [String] {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :82:4\n   |\n82 |     pub fun join(_ strs: [String], _ separator: String): String {\n   |     ^^^\n\n--\u003e e52522745adf5c34.StringUtils\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:77:14\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:81:23\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:40:15\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:61:15\n\n--\u003e 15f55a75d7843780.Utils\n\nerror: cannot find variable in this scope: `Utils`\n  --\u003e 15f55a75d7843780.SwapArchive:97:27\n   |\n97 | \t\tlet collectionMetadata = Utils.getIdentifierNFTCollectionData(nftIdentifiers)\n   | \t\t                         ^^^^^ not found in this scope\n"},{"kind":"contract-update-success","account_address":"0x15f55a75d7843780","contract_name":"SwapStats"},{"kind":"contract-update-success","account_address":"0x15f55a75d7843780","contract_name":"SwapStatsRegistry"},{"kind":"contract-update-failure","account_address":"0x15f55a75d7843780","contract_name":"Utils","error":"error: error getting program e52522745adf5c34.StringUtils: failed to derive value: load program failed: Parsing failed:\nerror: `pub` is no longer a valid access keyword\n --\u003e :5:0\n  |\n5 | pub contract StringUtils {\n  | ^^^\n\nerror: `pub` is no longer a valid access keyword\n --\u003e :7:4\n  |\n7 |     pub fun explode(_ s: String): [String]{\n  |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :15:4\n   |\n15 |     pub fun trimLeft(_ s: String): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :24:4\n   |\n24 |     pub fun trim(_ s: String): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :28:4\n   |\n28 |     pub fun replaceAll(_ s: String, _ search: String, _ replace: String): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :32:4\n   |\n32 |     pub fun hasPrefix(_ s: String, _ prefix: String) : Bool{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :36:4\n   |\n36 |     pub fun hasSuffix(_ s: String, _ suffix: String) : Bool{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :40:4\n   |\n40 |     pub fun index(_ s : String, _ substr : String, _ startIndex: Int): Int?{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :49:4\n   |\n49 |     pub fun count(_ s: String, _ substr: String): Int{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :57:4\n   |\n57 |     pub fun contains(_ s: String, _ substr: String): Bool {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :64:4\n   |\n64 |     pub fun substringUntil(_ s: String, _ until: String, _ startIndex: Int): String{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :71:4\n   |\n71 |     pub fun split(_ s: String, _ delimiter: String): [String] {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :82:4\n   |\n82 |     pub fun join(_ strs: [String], _ separator: String): String {\n   |     ^^^\n\n--\u003e e52522745adf5c34.StringUtils\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:77:14\n   |\n77 | \t\tlet parts = StringUtils.split(identifier, \".\")\n   | \t\t            ^^^^^^^^^^^ not found in this scope\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:81:23\n   |\n81 | \t\tlet typeIdentifier = StringUtils.join(parts.slice(from: 0, upTo: upTo), \".\")\n   | \t\t                     ^^^^^^^^^^^ not found in this scope\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:40:15\n   |\n40 | \t\t\tlet parts = StringUtils.split(type.identifier, \".\")\n   | \t\t\t            ^^^^^^^^^^^ not found in this scope\n\nerror: cannot find variable in this scope: `StringUtils`\n  --\u003e 15f55a75d7843780.Utils:61:15\n   |\n61 | \t\t\tlet parts = StringUtils.split(type.identifier, \".\")\n   | \t\t\t            ^^^^^^^^^^^ not found in this scope\n"},{"kind":"contract-update-success","account_address":"0xa6850776a94e6551","contract_name":"SwapRouter"},{"kind":"contract-update-success","account_address":"0x78d94b5208d76e15","contract_name":"cryptosex_NFT"},{"kind":"contract-update-success","account_address":"0xea48e069cd34f1c2","contract_name":"zulu_NFT"},{"kind":"contract-update-success","account_address":"0x72d3a05910b6ffa3","contract_name":"LendingOracle"},{"kind":"contract-update-success","account_address":"0x26bd2b91e8f0fb12","contract_name":"fredsshop_NFT"},{"kind":"contract-update-success","account_address":"0x9d7e2ca6dac6f1d1","contract_name":"cot_NFT"},{"kind":"contract-update-success","account_address":"0xf5d12412c09d2470","contract_name":"PriceOracle"},{"kind":"contract-update-success","account_address":"0x4283b42cbab1a122","contract_name":"cryptocanvases_NFT"},{"kind":"contract-update-success","account_address":"0x7c71d605e5363134","contract_name":"miki_NFT"},{"kind":"contract-update-success","account_address":"0x7c4cb30f3dd32758","contract_name":"dhempiredigital_NFT"},{"kind":"contract-update-success","account_address":"0xfdc436fd7db22e01","contract_name":"Piece"},{"kind":"contract-update-success","account_address":"0xd64d6a128f843573","contract_name":"masal_NFT"},{"kind":"contract-update-success","account_address":"0x179553ca29fa5608","contract_name":"juliaborejszo_NFT"},{"kind":"contract-update-success","account_address":"0x8b22f07865d2fbc4","contract_name":"streetz_NFT"},{"kind":"contract-update-success","account_address":"0xf68bdab35a2c4858","contract_name":"sitesofaustralia_NFT"},{"kind":"contract-update-success","account_address":"0xd80f6c01e0d4a079","contract_name":"flame_NFT"},{"kind":"contract-update-success","account_address":"0xf1bf6e8ba4c11b9b","contract_name":"tiktok_NFT"},{"kind":"contract-update-failure","account_address":"0xe452a2f5665728f5","contract_name":"ADUToken","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e e452a2f5665728f5.ADUToken:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e e452a2f5665728f5.ADUToken:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x2d56f9e203ba2ae9","contract_name":"milad72_NFT"},{"kind":"contract-update-success","account_address":"0xc58af1fb084bca0b","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x985087083ce617d9","contract_name":"billyboys_NFT"},{"kind":"contract-update-success","account_address":"0xf51fd22cf95ac4c8","contract_name":"happyhipposhangout_NFT"},{"kind":"contract-update-success","account_address":"0xb9cd93d3bb31b497","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0x63ee636b511006e1","contract_name":"jaafar2013_NFT"},{"kind":"contract-update-success","account_address":"0xe383de234d55e10e","contract_name":"furbuddys_NFT"},{"kind":"contract-update-success","account_address":"0x093e9c9d1167c70a","contract_name":"jumperbest_NFT"},{"kind":"contract-update-success","account_address":"0xfb93827e1c4a9a95","contract_name":"rezamadi_NFT"},{"kind":"contract-update-success","account_address":"0x18c9e9a4e22ce2e3","contract_name":"alagis_NFT"},{"kind":"contract-update-success","account_address":"0x0f8a56d5cedfe209","contract_name":"chromeco_NFT"},{"kind":"contract-update-failure","account_address":"0x0f0e04f128cf87de","contract_name":"HeavengodFlow","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e 0f0e04f128cf87de.HeavengodFlow:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e 0f0e04f128cf87de.HeavengodFlow:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x8c9b780bcbce5dff","contract_name":"kennydaatari_NFT"},{"kind":"contract-update-success","account_address":"0xc89438aa8d8e123b","contract_name":"lynnminez_NFT"},{"kind":"contract-update-success","account_address":"0x6476291644f1dbf5","contract_name":"landnation_NFT"},{"kind":"contract-update-success","account_address":"0xff2c5270ac307996","contract_name":"_3amwolf_NFT"},{"kind":"contract-update-success","account_address":"0x74c94b63bbe4a77b","contract_name":"ghostridrrnoah_NFT"},{"kind":"contract-update-success","account_address":"0x6588c07bf19a05f0","contract_name":"pitvipersports_NFT"},{"kind":"contract-update-success","account_address":"0x56100d46aa9b0212","contract_name":"MigrationContractStaging"},{"kind":"contract-update-success","account_address":"0x1c30d0842c8aa1b5","contract_name":"_5strdesigns_NFT"},{"kind":"contract-update-success","account_address":"0x1b1ad7c708e7e538","contract_name":"smurfon1_NFT"},{"kind":"contract-update-success","account_address":"0x1669d92ca8d6d919","contract_name":"tinkerbellstinctures_NFT"},{"kind":"contract-update-success","account_address":"0x374a295c9664f5e2","contract_name":"blazem_NFT"},{"kind":"contract-update-success","account_address":"0x09e8665388e90671","contract_name":"TixologiTickets"},{"kind":"contract-update-success","account_address":"0x2d4cebdb9eca6f49","contract_name":"DapperWalletRestrictions"},{"kind":"contract-update-success","account_address":"0xb86dcafb10249ca4","contract_name":"testing_NFT"},{"kind":"contract-update-success","account_address":"0x33a215ac2fcdc57f","contract_name":"artnouveau_NFT"},{"kind":"contract-update-success","account_address":"0x9973c79c60192635","contract_name":"nftplace_NFT"},{"kind":"contract-update-success","account_address":"0x19018f9eb121fbeb","contract_name":"biggaroadvise_NFT"},{"kind":"contract-update-success","account_address":"0x028d640de9b233fb","contract_name":"Utils"},{"kind":"contract-update-success","account_address":"0x9030df5a34785b9a","contract_name":"crimesresting_NFT"},{"kind":"contract-update-success","account_address":"0x4f71159dc4447015","contract_name":"amirshop_NFT"},{"kind":"contract-update-success","account_address":"0x396646f110afb2e6","contract_name":"RogueBunnies_NFT"},{"kind":"contract-update-success","account_address":"0x3cdbb3d569211ff3","contract_name":"DNAHandler"},{"kind":"contract-update-success","account_address":"0x3cdbb3d569211ff3","contract_name":"FlowtyListingCallback"},{"kind":"contract-update-success","account_address":"0x3cdbb3d569211ff3","contract_name":"FlowtyUtils"},{"kind":"contract-update-success","account_address":"0x3cdbb3d569211ff3","contract_name":"FlowtyViews"},{"kind":"contract-update-success","account_address":"0x3cdbb3d569211ff3","contract_name":"NFTStorefrontV2"},{"kind":"contract-update-success","account_address":"0x3cdbb3d569211ff3","contract_name":"Permitted"},{"kind":"contract-update-success","account_address":"0x3cdbb3d569211ff3","contract_name":"RoyaltiesOverride"},{"kind":"contract-update-success","account_address":"0x67fb6951287a2908","contract_name":"EmaShowcase"},{"kind":"contract-update-success","account_address":"0xa9fec7523eddb322","contract_name":"duck_NFT"},{"kind":"contract-update-success","account_address":"0xa5c185413ba2da88","contract_name":"flowverse_NFT"},{"kind":"contract-update-failure","account_address":"0xedf9df96c92f4595","contract_name":"PackNFT","error":"error: error getting program 18ddf0823a55a0ee.IPackNFT: failed to derive value: load program failed: Parsing failed:\nerror: `pub` is no longer a valid access keyword\n --\u003e :4:0\n  |\n4 | pub contract interface IPackNFT{\n  | ^^^\n\nerror: `pub` is no longer a valid access keyword\n --\u003e :7:4\n  |\n7 |     pub let CollectionStoragePath: StoragePath\n  |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :10:4\n   |\n10 |     pub let CollectionPublicPath: PublicPath\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :13:4\n   |\n13 |     pub let CollectionIPackNFTPublicPath: PublicPath\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :16:4\n   |\n16 |     pub let OperatorStoragePath: StoragePath\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :19:4\n   |\n19 |     pub let OperatorPrivPath: PrivatePath\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :22:4\n   |\n22 |     pub event RevealRequest(id: UInt64, openRequest: Bool)\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :27:4\n   |\n27 |     pub event OpenRequest(id: UInt64)\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :31:4\n   |\n31 |     pub event Burned(id: UInt64 )\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :35:4\n   |\n35 |     pub event Opened(id: UInt64)\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :37:4\n   |\n37 |     pub enum Status: UInt8 {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :38:8\n   |\n38 |         pub case Sealed\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :39:8\n   |\n39 |         pub case Revealed\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :40:8\n   |\n40 |         pub case Opened\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :43:4\n   |\n43 |     pub struct interface Collectible {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :44:8\n   |\n44 |         pub let address: Address\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :45:8\n   |\n45 |         pub let contractName: String\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :46:8\n   |\n46 |         pub let id: UInt64\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :47:8\n   |\n47 |         pub fun hashString(): String\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :51:4\n   |\n51 |     pub resource interface IPack {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :52:8\n   |\n52 |         pub let issuer: Address\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :53:8\n   |\n53 |         pub var status: Status\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :55:8\n   |\n55 |         pub fun verify(nftString: String): Bool\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :62:4\n   |\n62 |     pub resource interface IOperator {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :63:8\n   |\n63 |         pub fun mint(distId: UInt64, commitHash: String, issuer: Address): @NFT\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :64:8\n   |\n64 |         pub fun reveal(id: UInt64, nfts: [{Collectible}], salt: String)\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :65:8\n   |\n65 |         pub fun open(id: UInt64, nfts: [{IPackNFT.Collectible}])\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :67:4\n   |\n67 |     pub resource PackNFTOperator: IOperator {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :68:8\n   |\n68 |         pub fun mint(distId: UInt64, commitHash: String, issuer: Address): @NFT\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :69:8\n   |\n69 |         pub fun reveal(id: UInt64, nfts: [{Collectible}], salt: String)\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :70:8\n   |\n70 |         pub fun open(id: UInt64, nfts: [{IPackNFT.Collectible}])\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :73:4\n   |\n73 |     pub resource interface IPackNFTToken {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :74:8\n   |\n74 |         pub let id: UInt64\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :75:8\n   |\n75 |         pub let issuer: Address\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :78:4\n   |\n78 |     pub resource NFT: NonFungibleToken.INFT, IPackNFTToken, IPackNFTOwnerOperator{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :79:8\n   |\n79 |         pub let id: UInt64\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :80:8\n   |\n80 |         pub let issuer: Address\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :81:8\n   |\n81 |         pub fun reveal(openRequest: Bool)\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :82:8\n   |\n82 |         pub fun open()\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :85:4\n   |\n85 |     pub resource interface IPackNFTOwnerOperator{\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :86:8\n   |\n86 |         pub fun reveal(openRequest: Bool)\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :87:8\n   |\n87 |         pub fun open()\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :90:4\n   |\n90 |     pub resource interface IPackNFTCollectionPublic {\n   |     ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :91:8\n   |\n91 |         pub fun deposit(token: @NonFungibleToken.NFT)\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :92:8\n   |\n92 |         pub fun getIDs(): [UInt64]\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :93:8\n   |\n93 |         pub fun borrowNFT(id: UInt64): \u0026NonFungibleToken.NFT\n   |         ^^^\n\nerror: `pub` is no longer a valid access keyword\n  --\u003e :98:4\n   |\n98 |     pub fun publicReveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String)\n   |     ^^^\n\n--\u003e 18ddf0823a55a0ee.IPackNFT\n\nerror: cannot find type in this scope: `IPackNFT`\n --\u003e edf9df96c92f4595.PackNFT:8:48\n  |\n8 | access(all) contract PackNFT: NonFungibleToken, IPackNFT {\n  |                                                 ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e edf9df96c92f4595.PackNFT:45:42\n   |\n45 |     access(all) resource PackNFTOperator: IPackNFT.IOperator {\n   |                                           ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e edf9df96c92f4595.PackNFT:144:52\n    |\n144 |     access(all) resource NFT: NonFungibleToken.NFT, IPackNFT.NFT, IPackNFT.IPackNFTToken, IPackNFT.IPackNFTOwnerOperator {\n    |                                                     ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e edf9df96c92f4595.PackNFT:144:66\n    |\n144 |     access(all) resource NFT: NonFungibleToken.NFT, IPackNFT.NFT, IPackNFT.IPackNFTToken, IPackNFT.IPackNFTOwnerOperator {\n    |                                                                   ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e edf9df96c92f4595.PackNFT:144:90\n    |\n144 |     access(all) resource NFT: NonFungibleToken.NFT, IPackNFT.NFT, IPackNFT.IPackNFTToken, IPackNFT.IPackNFTOwnerOperator {\n    |                                                                                           ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e edf9df96c92f4595.PackNFT:197:66\n    |\n197 |     access(all) resource Collection: NonFungibleToken.Collection, IPackNFT.IPackNFTCollectionPublic {\n    |                                                                   ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e edf9df96c92f4595.PackNFT:50:15\n   |\n50 |         access(IPackNFT.Operate) fun mint(distId: UInt64, commitHash: String, issuer: Address): @{IPackNFT.NFT} {\n   |                ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e edf9df96c92f4595.PackNFT:50:98\n   |\n50 |         access(IPackNFT.Operate) fun mint(distId: UInt64, commitHash: String, issuer: Address): @{IPackNFT.NFT} {\n   |                                                                                                   ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n  --\u003e edf9df96c92f4595.PackNFT:50:97\n   |\n50 |         access(IPackNFT.Operate) fun mint(distId: UInt64, commitHash: String, issuer: Address): @{IPackNFT.NFT} {\n   |                                                                                                  ^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e edf9df96c92f4595.PackNFT:61:15\n   |\n61 |         access(IPackNFT.Operate) fun reveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String) {\n   |                ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e edf9df96c92f4595.PackNFT:61:64\n   |\n61 |         access(IPackNFT.Operate) fun reveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String) {\n   |                                                                 ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n  --\u003e edf9df96c92f4595.PackNFT:61:63\n   |\n61 |         access(IPackNFT.Operate) fun reveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String) {\n   |                                                                ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e edf9df96c92f4595.PackNFT:69:15\n   |\n69 |         access(IPackNFT.Operate) fun open(id: UInt64, nfts: [{IPackNFT.Collectible}]) {\n   |                ^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e edf9df96c92f4595.PackNFT:69:62\n   |\n69 |         access(IPackNFT.Operate) fun open(id: UInt64, nfts: [{IPackNFT.Collectible}]) {\n   |                                                               ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n  --\u003e edf9df96c92f4595.PackNFT:69:61\n   |\n69 |         access(IPackNFT.Operate) fun open(id: UInt64, nfts: [{IPackNFT.Collectible}]) {\n   |                                                              ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `IPackNFT`\n  --\u003e edf9df96c92f4595.PackNFT:97:41\n   |\n97 |         access(self) fun _verify(nfts: [{IPackNFT.Collectible}], salt: String, commitHash: String): String {\n   |                                          ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n  --\u003e edf9df96c92f4595.PackNFT:97:40\n   |\n97 |         access(self) fun _verify(nfts: [{IPackNFT.Collectible}], salt: String, commitHash: String): String {\n   |                                         ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e edf9df96c92f4595.PackNFT:112:56\n    |\n112 |         access(contract) fun reveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String) {\n    |                                                         ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e edf9df96c92f4595.PackNFT:112:55\n    |\n112 |         access(contract) fun reveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String) {\n    |                                                        ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e edf9df96c92f4595.PackNFT:120:54\n    |\n120 |         access(contract) fun open(id: UInt64, nfts: [{IPackNFT.Collectible}]) {\n    |                                                       ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e edf9df96c92f4595.PackNFT:120:53\n    |\n120 |         access(contract) fun open(id: UInt64, nfts: [{IPackNFT.Collectible}]) {\n    |                                                      ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e edf9df96c92f4595.PackNFT:296:53\n    |\n296 |     access(all) fun publicReveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String) {\n    |                                                      ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e edf9df96c92f4595.PackNFT:296:52\n    |\n296 |     access(all) fun publicReveal(id: UInt64, nfts: [{IPackNFT.Collectible}], salt: String) {\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `IPackNFT`\n   --\u003e edf9df96c92f4595.PackNFT:393:50\n    |\n393 |         self.account.capabilities.storage.issue\u003c\u0026{IPackNFT.IOperator}\u003e(self.OperatorStoragePath)\n    |                                                   ^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n   --\u003e edf9df96c92f4595.PackNFT:393:49\n    |\n393 |         self.account.capabilities.storage.issue\u003c\u0026{IPackNFT.IOperator}\u003e(self.OperatorStoragePath)\n    |                                                  ^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot infer type parameter: `T`\n   --\u003e edf9df96c92f4595.PackNFT:393:8\n    |\n393 |         self.account.capabilities.storage.issue\u003c\u0026{IPackNFT.IOperator}\u003e(self.OperatorStoragePath)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0xedf9df96c92f4595","contract_name":"Pinnacle"},{"kind":"contract-update-success","account_address":"0x84b83c5922c8826d","contract_name":"bettyboo13_NFT"},{"kind":"contract-update-success","account_address":"0xb769b2dde9c41f52","contract_name":"chelu79_NFT"},{"kind":"contract-update-success","account_address":"0x15a918087ab12d86","contract_name":"FTViewUtils"},{"kind":"contract-update-success","account_address":"0x15a918087ab12d86","contract_name":"TokenList"},{"kind":"contract-update-success","account_address":"0x15a918087ab12d86","contract_name":"ViewResolvers"},{"kind":"contract-update-success","account_address":"0x2d56600123262c88","contract_name":"miracleboi_NFT"},{"kind":"contract-update-success","account_address":"0x3ca53e3acebe979c","contract_name":"nottobragg_NFT"},{"kind":"contract-update-success","account_address":"0x550e2ae891dd4186","contract_name":"mhtkab_NFT"},{"kind":"contract-update-success","account_address":"0x1a9caf561de25a86","contract_name":"PriceOracle"},{"kind":"contract-update-success","account_address":"0x8b23585edf6cfbc3","contract_name":"rad_NFT"},{"kind":"contract-update-success","account_address":"0x24427bd0652129a6","contract_name":"lorenzo_NFT"},{"kind":"contract-update-success","account_address":"0x3357b77bbecb12b9","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0xa9102e56a8b7a680","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0x8ac807fc95b148f6","contract_name":"vaseyaudio_NFT"},{"kind":"contract-update-success","account_address":"0xd6937e4cd3c026f7","contract_name":"shortbuskustomz_NFT"},{"kind":"contract-update-success","account_address":"0xfbb6f29199f87926","contract_name":"sordidlives_NFT"},{"kind":"contract-update-success","account_address":"0x29b043823b48fef0","contract_name":"purplepiranha_NFT"},{"kind":"contract-update-success","account_address":"0x0cecc52785b2b3a5","contract_name":"hopereed_NFT"},{"kind":"contract-update-success","account_address":"0x8466b758d2faa8e7","contract_name":"xfx_NFT"},{"kind":"contract-update-success","account_address":"0xd57ea11ec725e6a3","contract_name":"TwoSegmentsInterestRateModel"},{"kind":"contract-update-success","account_address":"0xef4162279c3dabaf","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0x592eb32b47d8b85f","contract_name":"FlowtyWrapped"},{"kind":"contract-update-success","account_address":"0x592eb32b47d8b85f","contract_name":"WrappedEditions"},{"kind":"contract-update-success","account_address":"0x662881e32a6728b5","contract_name":"DapperWalletCollections"},{"kind":"contract-update-success","account_address":"0x6383e5d90bb9a7e2","contract_name":"kingtech_NFT"},{"kind":"contract-update-success","account_address":"0x4c73ff01e46dadb1","contract_name":"aligarshasebi_NFT"},{"kind":"contract-update-success","account_address":"0x533b4ffa90a18993","contract_name":"flow_NFT"},{"kind":"contract-update-success","account_address":"0x52e31c2b98776351","contract_name":"mgtkab_NFT"},{"kind":"contract-update-success","account_address":"0x610860fe966b0cf5","contract_name":"a3yaheard_NFT"},{"kind":"contract-update-success","account_address":"0xbab14ccb9f904f32","contract_name":"nft110_NFT"},{"kind":"contract-update-success","account_address":"0x59d79b7502983559","contract_name":"tass_NFT"},{"kind":"contract-update-success","account_address":"0xafb8473247d9354c","contract_name":"FlowNia"},{"kind":"contract-update-success","account_address":"0x11b69dcfd16724af","contract_name":"PriceOracle"},{"kind":"contract-update-success","account_address":"0x4aec40272c01a94e","contract_name":"FlowtyTestNFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"AmericanAirlines_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"Andbox_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"Art_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"Atheletes_Unlimited_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"AtlantaNft_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"BlockleteGames_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"BreakingT_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"CNN_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"Canes_Vault_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"Costacos_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"DGD_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"GL_BridgeTest_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"GiglabsShopifyDemo_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"NFL_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"RaceDay_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"RareRooms_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"The_Next_Cartel_NFT"},{"kind":"contract-update-success","account_address":"0x329feb3ab062d289","contract_name":"UFC_NFT"},{"kind":"contract-update-success","account_address":"0x42a54b4f70e7dc81","contract_name":"DapperWalletCollections"},{"kind":"contract-update-success","account_address":"0x123cb666996b8432","contract_name":"Flomies"},{"kind":"contract-update-success","account_address":"0x123cb666996b8432","contract_name":"GeneratedExperiences"},{"kind":"contract-update-success","account_address":"0x123cb666996b8432","contract_name":"NFGv3"},{"kind":"contract-update-success","account_address":"0x123cb666996b8432","contract_name":"PartyFavorz"},{"kind":"contract-update-success","account_address":"0x123cb666996b8432","contract_name":"PartyFavorzExtraData"},{"kind":"contract-update-success","account_address":"0x56150bbd6d34c484","contract_name":"jkallday_NFT"},{"kind":"contract-update-success","account_address":"0xcc75fb8605ca0fad","contract_name":"zani_NFT"},{"kind":"contract-update-success","account_address":"0x921ea449dffec68a","contract_name":"DummyDustTokenMinter"},{"kind":"contract-update-success","account_address":"0x921ea449dffec68a","contract_name":"Flobot"},{"kind":"contract-update-success","account_address":"0x921ea449dffec68a","contract_name":"Flovatar"},{"kind":"contract-update-success","account_address":"0x921ea449dffec68a","contract_name":"FlovatarComponent"},{"kind":"contract-update-success","account_address":"0x921ea449dffec68a","contract_name":"FlovatarComponentTemplate"},{"kind":"contract-update-failure","account_address":"0x921ea449dffec68a","contract_name":"FlovatarComponentUpgrader","error":"error: error getting program 921ea449dffec68a.FlovatarInbox: failed to derive value: load program failed: Checking failed:\nerror: cannot access `withdrawFlovatarComponent`: function requires `Withdraw` authorization, but reference is unauthorized\n   --\u003e 921ea449dffec68a.FlovatarInbox:400:22\n\nerror: cannot access `withdrawWalletComponent`: function requires `Withdraw` authorization, but reference is unauthorized\n   --\u003e 921ea449dffec68a.FlovatarInbox:433:21\n\nerror: cannot access `withdrawFlovatarDust`: function requires `Withdraw` authorization, but reference is unauthorized\n   --\u003e 921ea449dffec68a.FlovatarInbox:458:17\n\nerror: cannot access `withdrawWalletDust`: function requires `Withdraw` authorization, but reference is unauthorized\n   --\u003e 921ea449dffec68a.FlovatarInbox:484:16\n\n--\u003e 921ea449dffec68a.FlovatarInbox\n\nerror: cannot access `withdrawRandomComponent`: function requires `Withdraw` authorization, but reference is unauthorized\n   --\u003e 921ea449dffec68a.FlovatarComponentUpgrader:251:4\n    |\n251 | \t\t\t\tupgraderCollection.withdrawRandomComponent(\n    | \t\t\t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `FlovatarInbox`\n   --\u003e 921ea449dffec68a.FlovatarComponentUpgrader:260:65\n    |\n260 | \t\t\t\tself.account.storage.borrow\u003cauth(NonFungibleToken.Withdraw) \u0026FlovatarInbox.Collection\u003e(\n    | \t\t\t\t                                                             ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find variable in this scope: `FlovatarInbox`\n   --\u003e 921ea449dffec68a.FlovatarComponentUpgrader:261:11\n    |\n261 | \t\t\t\t\tfrom: FlovatarInbox.CollectionStoragePath\n    | \t\t\t\t\t      ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type parameter: `T`\n   --\u003e 921ea449dffec68a.FlovatarComponentUpgrader:260:4\n    |\n260 | \t\t\t\tself.account.storage.borrow\u003cauth(NonFungibleToken.Withdraw) \u0026FlovatarInbox.Collection\u003e(\n261 | \t\t\t\t\tfrom: FlovatarInbox.CollectionStoragePath\n262 | \t\t\t\t){ \n    | \t\t\t\t^\n"},{"kind":"contract-update-success","account_address":"0x921ea449dffec68a","contract_name":"FlovatarDustCollectible"},{"kind":"contract-update-success","account_address":"0x921ea449dffec68a","contract_name":"FlovatarDustCollectibleAccessory"},{"kind":"contract-update-success","account_address":"0x4eb8a10cb9f87357","contract_name":"NFTStorefront"},{"kind":"contract-update-success","account_address":"0x4eb8a10cb9f87357","contract_name":"NFTStorefrontV2"},{"kind":"contract-update-success","account_address":"0x921ea449dffec68a","contract_name":"FlovatarDustCollectibleTemplate"},{"kind":"contract-update-success","account_address":"0x921ea449dffec68a","contract_name":"FlovatarDustToken"},{"kind":"contract-update-failure","account_address":"0x921ea449dffec68a","contract_name":"FlovatarInbox","error":"error: cannot access `withdrawFlovatarComponent`: function requires `Withdraw` authorization, but reference is unauthorized\n   --\u003e 921ea449dffec68a.FlovatarInbox:400:22\n    |\n400 | \t\t\t\t\tlet component \u003c- inboxCollection.withdrawFlovatarComponent(id: id, withdrawID: componentIds[i])\n    | \t\t\t\t\t                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot access `withdrawWalletComponent`: function requires `Withdraw` authorization, but reference is unauthorized\n   --\u003e 921ea449dffec68a.FlovatarInbox:433:21\n    |\n433 | \t\t\t\tlet component \u003c- inboxCollection.withdrawWalletComponent(address: address, withdrawID: componentIds[i])\n    | \t\t\t\t                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot access `withdrawFlovatarDust`: function requires `Withdraw` authorization, but reference is unauthorized\n   --\u003e 921ea449dffec68a.FlovatarInbox:458:17\n    |\n458 | \t\t\t\tlet vault \u003c- inboxCollection.withdrawFlovatarDust(id: id)\n    | \t\t\t\t             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot access `withdrawWalletDust`: function requires `Withdraw` authorization, but reference is unauthorized\n   --\u003e 921ea449dffec68a.FlovatarInbox:484:16\n    |\n484 | \t\t\tlet vault \u003c- inboxCollection.withdrawWalletDust(address: address)\n    | \t\t\t             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x921ea449dffec68a","contract_name":"FlovatarMarketplace"},{"kind":"contract-update-success","account_address":"0x921ea449dffec68a","contract_name":"FlovatarPack"},{"kind":"contract-update-success","account_address":"0x282cd67844f046cf","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0x5f00b9b4277b47ca","contract_name":"mrmehdi1369_NFT"},{"kind":"contract-update-success","account_address":"0xa722eca5cfebda16","contract_name":"azukidarkside_NFT"},{"kind":"contract-update-success","account_address":"0xd8a7e05a7ac670c0","contract_name":"CapabilityDelegator"},{"kind":"contract-update-success","account_address":"0xd8a7e05a7ac670c0","contract_name":"CapabilityFactory"},{"kind":"contract-update-success","account_address":"0xd8a7e05a7ac670c0","contract_name":"CapabilityFilter"},{"kind":"contract-update-success","account_address":"0xd8a7e05a7ac670c0","contract_name":"FTAllFactory"},{"kind":"contract-update-success","account_address":"0xd8a7e05a7ac670c0","contract_name":"FTBalanceFactory"},{"kind":"contract-update-success","account_address":"0xd8a7e05a7ac670c0","contract_name":"FTProviderFactory"},{"kind":"contract-update-success","account_address":"0xd8a7e05a7ac670c0","contract_name":"FTReceiverBalanceFactory"},{"kind":"contract-update-success","account_address":"0xd8a7e05a7ac670c0","contract_name":"FTReceiverFactory"},{"kind":"contract-update-success","account_address":"0xd8a7e05a7ac670c0","contract_name":"HybridCustody"},{"kind":"contract-update-success","account_address":"0xd8a7e05a7ac670c0","contract_name":"NFTCollectionPublicFactory"},{"kind":"contract-update-success","account_address":"0xd8a7e05a7ac670c0","contract_name":"NFTProviderAndCollectionFactory"},{"kind":"contract-update-success","account_address":"0xd8a7e05a7ac670c0","contract_name":"NFTProviderFactory"},{"kind":"contract-update-success","account_address":"0xf3cf8f1de0e540bb","contract_name":"shopsgigantikio_NFT"},{"kind":"contract-update-success","account_address":"0x08dd120226ec2213","contract_name":"DelayedTransfer"},{"kind":"contract-update-success","account_address":"0x08dd120226ec2213","contract_name":"FTMinterBurner"},{"kind":"contract-update-success","account_address":"0x08dd120226ec2213","contract_name":"Pb"},{"kind":"contract-update-success","account_address":"0x08dd120226ec2213","contract_name":"PbPegged"},{"kind":"contract-update-success","account_address":"0x08dd120226ec2213","contract_name":"SafeBox"},{"kind":"contract-update-success","account_address":"0x08dd120226ec2213","contract_name":"VolumeControl"},{"kind":"contract-update-success","account_address":"0x08dd120226ec2213","contract_name":"cBridge"},{"kind":"contract-update-success","account_address":"0xd93dc6acd0914941","contract_name":"nephiermsales_NFT"},{"kind":"contract-update-success","account_address":"0x324d0cf59ec534fe","contract_name":"Stanz"},{"kind":"contract-update-success","account_address":"0x61fa8d9945597cb7","contract_name":"rustexsoulreclaimeds_NFT"},{"kind":"contract-update-success","account_address":"0xacc5081c003e24cf","contract_name":"CapabilityCache"},{"kind":"contract-update-success","account_address":"0x67fc7ce590446d53","contract_name":"peace_NFT"},{"kind":"contract-update-success","account_address":"0xd370ae493b8acc86","contract_name":"Planarias"},{"kind":"contract-update-success","account_address":"0xd808fc6a3b28bc4e","contract_name":"Gigantik_NFT"},{"kind":"contract-update-success","account_address":"0xb7d4a6a16e724951","contract_name":"ilikefoooooood_NFT"},{"kind":"contract-update-success","account_address":"0x395c3366ce346ac0","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0xd400997a9e9a5326","contract_name":"habib_NFT"},{"kind":"contract-update-success","account_address":"0x71e9fe404af525f1","contract_name":"divineessence_NFT"},{"kind":"contract-update-success","account_address":"0x52a45cddeae34564","contract_name":"elidadgar_NFT"},{"kind":"contract-update-success","account_address":"0x481914259cb9174e","contract_name":"Aggretsuko"},{"kind":"contract-update-success","account_address":"0x4f7ff543c936072b","contract_name":"OneShots"},{"kind":"contract-update-success","account_address":"0xc2718d5834da3c93","contract_name":"nft_NFT"},{"kind":"contract-update-failure","account_address":"0x728ff3131b18cb34","contract_name":"ZDptOT","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e 728ff3131b18cb34.ZDptOT:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e 728ff3131b18cb34.ZDptOT:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-failure","account_address":"0x67daad91e3782c80","contract_name":"Vampire","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e 67daad91e3782c80.Vampire:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e 67daad91e3782c80.Vampire:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0xd45e2bd9a3d5003b","contract_name":"Bobblz_NFT"},{"kind":"contract-update-success","account_address":"0x4787d838c25a467b","contract_name":"tulsakoin_NFT"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"CoCreatable"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"CoCreatableV2"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"HighsnobietyNotInParis"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"PrimalRaveVariantMintLimits"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"Revealable"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"RevealableV2"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"TheFabricantAccessList"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"TheFabricantKapers"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"TheFabricantMarketplaceHelper"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"TheFabricantMetadataViews"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"TheFabricantMetadataViewsV2"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"TheFabricantNFTStandard"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"TheFabricantNFTStandardV2"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"TheFabricantPrimalRave"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"TheFabricantS2GarmentNFT"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"TheFabricantS2ItemNFT"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"TheFabricantS2MaterialNFT"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"TheFabricantXXories"},{"kind":"contract-update-success","account_address":"0x7752ea736384322f","contract_name":"Weekday"},{"kind":"contract-update-success","account_address":"0x4da127056dc9ba3f","contract_name":"Escrow"},{"kind":"contract-update-success","account_address":"0xbc2129bef2fba29c","contract_name":"mahshidwatch_NFT"},{"kind":"contract-update-success","account_address":"0x5b82f21c0edf76e3","contract_name":"StarlyCard"},{"kind":"contract-update-success","account_address":"0x5b82f21c0edf76e3","contract_name":"StarlyCardMarket"},{"kind":"contract-update-success","account_address":"0x5b82f21c0edf76e3","contract_name":"StarlyCollectorScore"},{"kind":"contract-update-success","account_address":"0x5b82f21c0edf76e3","contract_name":"StarlyIDParser"},{"kind":"contract-update-success","account_address":"0x5b82f21c0edf76e3","contract_name":"StarlyMetadata"},{"kind":"contract-update-success","account_address":"0x5b82f21c0edf76e3","contract_name":"StarlyMetadataViews"},{"kind":"contract-update-success","account_address":"0x5b82f21c0edf76e3","contract_name":"StarlyPack"},{"kind":"contract-update-success","account_address":"0x5b82f21c0edf76e3","contract_name":"StarlyRoyalties"},{"kind":"contract-update-success","account_address":"0x1222ad3257fc03d6","contract_name":"fukcocaine_NFT"},{"kind":"contract-update-success","account_address":"0x219165a550fff611","contract_name":"king_NFT"},{"kind":"contract-update-success","account_address":"0xd4bcbcc3830e0343","contract_name":"twinangel1984gmailco_NFT"},{"kind":"contract-update-success","account_address":"0x8e45ebba4b147203","contract_name":"apokalips_NFT"},{"kind":"contract-update-success","account_address":"0x5a9cb1335d941523","contract_name":"jere_NFT"},{"kind":"contract-update-success","account_address":"0x9549effe56544515","contract_name":"theman_NFT"},{"kind":"contract-update-success","account_address":"0x11d54a6634cd61de","contract_name":"addey_NFT"},{"kind":"contract-update-success","account_address":"0x8b1f9572bd37eda8","contract_name":"amirhmz_NFT"},{"kind":"contract-update-success","account_address":"0xe8bed7e9e7628e7b","contract_name":"moondreamer_NFT"},{"kind":"contract-update-success","account_address":"0xd0af9288d8786e97","contract_name":"kehinsoft_NFT"},{"kind":"contract-update-success","account_address":"0x337be15de3a31915","contract_name":"hoodlums_NFT"},{"kind":"contract-update-success","account_address":"0x681a33a6faf8c632","contract_name":"neginnaderi_NFT"},{"kind":"contract-update-success","account_address":"0x8d88675ccda9e4f1","contract_name":"jacob_NFT"},{"kind":"contract-update-success","account_address":"0xf4d72df58acbdba1","contract_name":"eda_NFT"},{"kind":"contract-update-success","account_address":"0x53d8a74d349c8a1a","contract_name":"joyskitchen_NFT"},{"kind":"contract-update-success","account_address":"0x79a481074c8aa70d","contract_name":"sip_NFT"},{"kind":"contract-update-success","account_address":"0x8ef0de367cd8a472","contract_name":"waketfup_NFT"},{"kind":"contract-update-success","account_address":"0x332dd271dd11e195","contract_name":"malihe_NFT"},{"kind":"contract-update-failure","account_address":"0xe7d94746e4d95a1d","contract_name":"KSociosKorp","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e e7d94746e4d95a1d.KSociosKorp:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e e7d94746e4d95a1d.KSociosKorp:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x9adc0c979c5d5e58","contract_name":"leverle_NFT"},{"kind":"contract-update-success","account_address":"0x91b4cc10b2aa0e75","contract_name":"AllDaySeasonal"},{"kind":"contract-update-success","account_address":"0x1166ae8009097e27","contract_name":"minda4032_NFT"},{"kind":"contract-update-success","account_address":"0x17545cc9158052c5","contract_name":"funnyphotographer_NFT"},{"kind":"contract-update-success","account_address":"0x790b8e6b2fa3760b","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0x2718cae757a2c57e","contract_name":"firewolf_NFT"},{"kind":"contract-update-success","account_address":"0x957deccb9fc07813","contract_name":"sunnygunn_NFT"},{"kind":"contract-update-success","account_address":"0xeb801fb0bea5eeab","contract_name":"traw808_NFT"},{"kind":"contract-update-success","account_address":"0x25af1b0f88b77e63","contract_name":"deano_NFT"},{"kind":"contract-update-success","account_address":"0xbe0f4317188b872f","contract_name":"spookytobi_NFT"},{"kind":"contract-update-success","account_address":"0x33c942747f6cadf4","contract_name":"nfttre_NFT"},{"kind":"contract-update-success","account_address":"0xdb69101ab00c5aca","contract_name":"lobolunaarts_NFT"},{"kind":"contract-update-success","account_address":"0xc6945445cdbefec9","contract_name":"PackNFT"},{"kind":"contract-update-success","account_address":"0xc6945445cdbefec9","contract_name":"TuneGONFT"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"ETHUtils"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"EVMAgent"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FGameLottery"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FGameLotteryFactory"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FGameLotteryRegistry"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20AccountsPool"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20Agents"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20Converter"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20FTShared"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20FungibleToken"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20Indexer"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20MarketManager"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20Marketplace"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20NFTWrapper"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20SemiNFT"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20Staking"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20StakingForwarder"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20StakingManager"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20StakingVesting"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20Storefront"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20TradingRecord"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20VoteCommands"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FRC20Votes"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"Fixes"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FixesAssetMeta"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FixesAvatar"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FixesBondingCurve"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FixesFungibleTokenInterface"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FixesHeartbeat"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FixesInscriptionFactory"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FixesTokenAirDrops"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FixesTokenLockDrops"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FixesTradablePool"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FixesTraits"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FixesWrappedNFT"},{"kind":"contract-update-success","account_address":"0xd2abb5dbf5e08666","contract_name":"FungibleTokenManager"},{"kind":"contract-update-success","account_address":"0xc38527b0b37ab597","contract_name":"nofaulstoni_NFT"},{"kind":"contract-update-success","account_address":"0x8c1f11aac68c6777","contract_name":"Atelier"},{"kind":"contract-update-success","account_address":"0xe2c47fc4ec84dcec","contract_name":"hugo_NFT"},{"kind":"contract-update-success","account_address":"0x900b6ac450630219","contract_name":"ghostnft626_NFT"},{"kind":"contract-update-success","account_address":"0x54ab5383b8e5ffec","contract_name":"young1122_NFT"},{"kind":"contract-update-success","account_address":"0xf1140795523871bb","contract_name":"mmookzworldo4_NFT"},{"kind":"contract-update-success","account_address":"0x6018b5faa803628f","contract_name":"seblikmega_NFT"},{"kind":"contract-update-success","account_address":"0xd3df824bf81910a4","contract_name":"CryptoPiggo"},{"kind":"contract-update-success","account_address":"0xd3df824bf81910a4","contract_name":"CryptoPiggoPotion"},{"kind":"contract-update-success","account_address":"0xd3df824bf81910a4","contract_name":"CryptoPiggoV2"},{"kind":"contract-update-success","account_address":"0xe81193c424cfd3fb","contract_name":"Admin"},{"kind":"contract-update-success","account_address":"0xe81193c424cfd3fb","contract_name":"Clock"},{"kind":"contract-update-success","account_address":"0xe81193c424cfd3fb","contract_name":"Debug"},{"kind":"contract-update-success","account_address":"0xe81193c424cfd3fb","contract_name":"DoodleNames"},{"kind":"contract-update-success","account_address":"0xe81193c424cfd3fb","contract_name":"DoodlePackTypes"},{"kind":"contract-update-success","account_address":"0xe81193c424cfd3fb","contract_name":"DoodlePacks"},{"kind":"contract-update-success","account_address":"0xe81193c424cfd3fb","contract_name":"Doodles"},{"kind":"contract-update-success","account_address":"0x11f592931238aaf6","contract_name":"StarlyTokenReward"},{"kind":"contract-update-failure","account_address":"0xe81193c424cfd3fb","contract_name":"DoodlesWearablesProxy","error":"error: mismatching field `doodlesRecipient` in `DoodlesWearablesProxy`\n  --\u003e e81193c424cfd3fb.DoodlesWearablesProxy:68:43\n   |\n68 |     access(contract) var doodlesRecipient: Capability\u003c\u0026{NonFungibleToken.Receiver}\u003e\n   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ incompatible type annotations. expected `Doodles.Collection`, found `{NonFungibleToken.Receiver}`\n\nerror: mismatching field `wearablesRecipient` in `DoodlesWearablesProxy`\n  --\u003e e81193c424cfd3fb.DoodlesWearablesProxy:71:45\n   |\n71 |     access(contract) var wearablesRecipient: Capability\u003c\u0026{NonFungibleToken.Receiver}\u003e\n   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ incompatible type annotations. expected `Wearables.Collection`, found `{NonFungibleToken.Receiver}`\n"},{"kind":"contract-update-success","account_address":"0xe81193c424cfd3fb","contract_name":"GenesisBoxRegistry"},{"kind":"contract-update-success","account_address":"0xe81193c424cfd3fb","contract_name":"OpenDoodlePacks"},{"kind":"contract-update-success","account_address":"0xe81193c424cfd3fb","contract_name":"Random"},{"kind":"contract-update-success","account_address":"0xe81193c424cfd3fb","contract_name":"Redeemables"},{"kind":"contract-update-success","account_address":"0xe81193c424cfd3fb","contract_name":"Teleport"},{"kind":"contract-update-success","account_address":"0xe81193c424cfd3fb","contract_name":"Templates"},{"kind":"contract-update-success","account_address":"0xe81193c424cfd3fb","contract_name":"TransactionsRegistry"},{"kind":"contract-update-success","account_address":"0xe81193c424cfd3fb","contract_name":"Wearables"},{"kind":"contract-update-success","account_address":"0x184f49b8b7776b04","contract_name":"cmadbacom_NFT"},{"kind":"contract-update-success","account_address":"0x5da615e7385f307a","contract_name":"LendingAprSnapshot"},{"kind":"contract-update-success","account_address":"0x15ed0bb14bce0d5c","contract_name":"_3epehr_NFT"},{"kind":"contract-update-success","account_address":"0x4f156d0d19f67a7a","contract_name":"ephemera_NFT"},{"kind":"contract-update-success","account_address":"0x8a5ee401a0189fa5","contract_name":"spacelysprockets_NFT"},{"kind":"contract-update-success","account_address":"0xb8f49fad88022f72","contract_name":"alirezashop0088_NFT"},{"kind":"contract-update-success","account_address":"0xb8ea91944fd51c43","contract_name":"DapperOffersV2"},{"kind":"contract-update-success","account_address":"0xb8ea91944fd51c43","contract_name":"OffersV2"},{"kind":"contract-update-success","account_address":"0xb8ea91944fd51c43","contract_name":"Resolver"},{"kind":"contract-update-success","account_address":"0x0a2fbb92a8ae5c6d","contract_name":"Sk8tibles"},{"kind":"contract-update-success","account_address":"0x28303df21a1d8830","contract_name":"ultrawholesaleelectr_NFT"},{"kind":"contract-update-success","account_address":"0xa056f93a654ee669","contract_name":"_100fishes_NFT"},{"kind":"contract-update-failure","account_address":"0xc4b1f4387748f389","contract_name":"PuffPalz","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e c4b1f4387748f389.PuffPalz:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e c4b1f4387748f389.PuffPalz:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x269f55c6502bfa37","contract_name":"mjcajuns_NFT"},{"kind":"contract-update-success","account_address":"0x21ed482619b1cad4","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x3602a7f3baa6aae4","contract_name":"trextuf_NFT"},{"kind":"contract-update-success","account_address":"0x2fc0d080618ee419","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0x074899bbb7a36f06","contract_name":"yomammasnfts_NFT"},{"kind":"contract-update-success","account_address":"0xa45ead1cf1ca9eda","contract_name":"Base64Util"},{"kind":"contract-update-success","account_address":"0xa45ead1cf1ca9eda","contract_name":"Clock"},{"kind":"contract-update-success","account_address":"0xa45ead1cf1ca9eda","contract_name":"FlowRewards"},{"kind":"contract-update-success","account_address":"0xa45ead1cf1ca9eda","contract_name":"FlowRewardsMetadataViews"},{"kind":"contract-update-success","account_address":"0xa45ead1cf1ca9eda","contract_name":"FlowRewardsModels"},{"kind":"contract-update-success","account_address":"0xa45ead1cf1ca9eda","contract_name":"FlowRewardsRegistry"},{"kind":"contract-update-success","account_address":"0xa45ead1cf1ca9eda","contract_name":"FlowRewardsValets"},{"kind":"contract-update-success","account_address":"0x864f3be2244a7dd5","contract_name":"behzad_NFT"},{"kind":"contract-update-success","account_address":"0xadb8c4f5c889d2b8","contract_name":"traderflow_NFT"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"Admin"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"CharityNFT"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"Clock"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"Dandy"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"Debug"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FIND"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FINDNFTCatalog"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FINDNFTCatalogAdmin"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FTRegistry"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindAirdropper"},{"kind":"contract-update-success","account_address":"0x0b82493f5db2800e","contract_name":"bobblzpartdeux_NFT"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindForge"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindForgeOrder"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindForgeStruct"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindFurnace"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindLeaseMarket"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindLeaseMarketAuctionSoft"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindLeaseMarketDirectOfferSoft"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindLeaseMarketSale"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindLostAndFoundWrapper"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindMarket"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindMarketAdmin"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindMarketAuctionEscrow"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindMarketAuctionSoft"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindMarketCut"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindMarketCutInterface"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindMarketCutStruct"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindMarketDirectOfferEscrow"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindMarketDirectOfferSoft"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindMarketInfrastructureCut"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindMarketSale"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindPack"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindRelatedAccounts"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindRulesCache"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindThoughts"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindUtils"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindVerifier"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"FindViews"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"Giefts"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"NameVoucher"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"Profile"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"ProfileCache"},{"kind":"contract-update-success","account_address":"0x097bafa4e0b48eef","contract_name":"Sender"},{"kind":"contract-update-success","account_address":"0xd6ffbecf9e94aa8b","contract_name":"deamagica_NFT"},{"kind":"contract-update-success","account_address":"0x991b8f7a15de3c17","contract_name":"blueheadchk_NFT"},{"kind":"contract-update-success","account_address":"0x8ebcbfd516b1da27","contract_name":"MFLAdmin"},{"kind":"contract-update-success","account_address":"0x8ebcbfd516b1da27","contract_name":"MFLClub"},{"kind":"contract-update-success","account_address":"0x8ebcbfd516b1da27","contract_name":"MFLPack"},{"kind":"contract-update-success","account_address":"0x8ebcbfd516b1da27","contract_name":"MFLPackTemplate"},{"kind":"contract-update-success","account_address":"0x8ebcbfd516b1da27","contract_name":"MFLPlayer"},{"kind":"contract-update-success","account_address":"0x8ebcbfd516b1da27","contract_name":"MFLViews"},{"kind":"contract-update-success","account_address":"0x14f3b7ccef482cbd","contract_name":"taminvan_NFT"},{"kind":"contract-update-success","account_address":"0xd8f4a6515dcabe43","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0xfc70322d94bb5cc6","contract_name":"streetart_NFT"},{"kind":"contract-update-success","account_address":"0x7a9442be0b3c178a","contract_name":"Boneyard"},{"kind":"contract-update-success","account_address":"0x83af29e4539ffb95","contract_name":"amirlook_NFT"},{"kind":"contract-update-success","account_address":"0x520f423791c5045d","contract_name":"dariomadethis_NFT"},{"kind":"contract-update-success","account_address":"0x5c57f79c6694797f","contract_name":"Flowty"},{"kind":"contract-update-success","account_address":"0x5c57f79c6694797f","contract_name":"FlowtyRentals"},{"kind":"contract-update-success","account_address":"0x5c57f79c6694797f","contract_name":"RoyaltiesLedger"},{"kind":"contract-update-success","account_address":"0x36b1a29d10c00c1a","contract_name":"Base64Util"},{"kind":"contract-update-success","account_address":"0x36b1a29d10c00c1a","contract_name":"Snapshot"},{"kind":"contract-update-success","account_address":"0x36b1a29d10c00c1a","contract_name":"SnapshotLogic"},{"kind":"contract-update-success","account_address":"0x36b1a29d10c00c1a","contract_name":"SnapshotViewer"},{"kind":"contract-update-success","account_address":"0x39f50289bca0d951","contract_name":"williams_NFT"},{"kind":"contract-update-success","account_address":"0xda3d9ad6d996602c","contract_name":"thewolfofflow_NFT"},{"kind":"contract-update-success","account_address":"0x4ec2ff833170df24","contract_name":"itslemaandrew_NFT"},{"kind":"contract-update-success","account_address":"0xf4f2b30da23a156a","contract_name":"ehsan120_NFT"},{"kind":"contract-update-success","account_address":"0xea01c9e6254e986c","contract_name":"rezamilad_NFT"},{"kind":"contract-update-success","account_address":"0xfb76224092e356f5","contract_name":"boobs_NFT"},{"kind":"contract-update-success","account_address":"0x32c1f561918c1d48","contract_name":"theforgotennftz_NFT"},{"kind":"contract-update-success","account_address":"0x29eece8cbe9b293e","contract_name":"Base64Util"},{"kind":"contract-update-success","account_address":"0x29eece8cbe9b293e","contract_name":"Unleash"},{"kind":"contract-update-success","account_address":"0x5962a845b9bedc47","contract_name":"realnfts_NFT"},{"kind":"contract-update-success","account_address":"0xfb4a98987d676b87","contract_name":"toyman_NFT"},{"kind":"contract-update-success","account_address":"0x23a8da48717eef86","contract_name":"luxcash_NFT"},{"kind":"contract-update-success","account_address":"0x09caa090c85d7ec0","contract_name":"richest_NFT"},{"kind":"contract-update-success","account_address":"0x0f8d3495fb3e8d4b","contract_name":"GigDapper_NFT"},{"kind":"contract-update-success","account_address":"0xfb0d40739999cdb4","contract_name":"correanftarts_NFT"},{"kind":"contract-update-success","account_address":"0xf6be71a029067559","contract_name":"guillaume_NFT"},{"kind":"contract-update-success","account_address":"0x3d7e3fa5680d2a2c","contract_name":"thelilbois_NFT"},{"kind":"contract-update-success","account_address":"0xdd6e4940dfaf4b29","contract_name":"nfts_NFT"},{"kind":"contract-update-failure","account_address":"0x9db94c9564243ba7","contract_name":"aiSportsJuice","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e 9db94c9564243ba7.aiSportsJuice:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e 9db94c9564243ba7.aiSportsJuice:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x0ee69950fd8d58da","contract_name":"minez_NFT"},{"kind":"contract-update-success","account_address":"0x2781e845425b5db1","contract_name":"verbose_NFT"},{"kind":"contract-update-success","account_address":"0xcd3c32e68803fbb3","contract_name":"cornbreadnloudmuszic_NFT"},{"kind":"contract-update-failure","account_address":"0xed398881d9bf40fb","contract_name":"CricketMoments","error":"error: cannot find declaration `NonFungibleToken` in `631e88ae7f1d7c20.NonFungibleToken`\n --\u003e ed398881d9bf40fb.CricketMoments:3:7\n  |\n3 | import NonFungibleToken from 0x631e88ae7f1d7c20\n  |        ^^^^^^^^^^^^^^^^ available exported declarations are:\n\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:132:40\n    |\n132 |         access(all) fun deposit(token: @{NonFungibleToken.NFT})\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:134:55\n    |\n134 |         access(all) view fun borrowNFT(_ id: UInt64): \u0026{NonFungibleToken.NFT}?\n    |                                                        ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:123:50\n    |\n123 |         access(all) fun createEmptyCollection(): @{NonFungibleToken.Collection} {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:151:45\n    |\n151 |         access(all) var ownedNFTs: @{UInt64: {NonFungibleToken.NFT}}\n    |                                              ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:168:77\n    |\n168 |         access(NonFungibleToken.Withdraw) fun withdraw(withdrawID: UInt64): @{NonFungibleToken.NFT} {\n    |                                                                              ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:178:40\n    |\n178 |         access(all) fun deposit(token: @{NonFungibleToken.NFT}) {\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:202:55\n    |\n202 |         access(all) view fun borrowNFT(_ id: UInt64): \u0026{NonFungibleToken.NFT}? {\n    |                                                        ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:224:50\n    |\n224 |         access(all) fun createEmptyCollection(): @{NonFungibleToken.Collection} {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:252:48\n    |\n252 |         access(all) fun mintNewNFTs(recipient: \u0026{NonFungibleToken.CollectionPublic}, serialQuantity: UInt64, metadata: {String : String}) {\n    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:286:48\n    |\n286 |         access(all) fun mintOldNFTs(recipient: \u0026{NonFungibleToken.CollectionPublic}, momentId:UInt64, serialQuantity: UInt64, metadata: {String : String}) {\n    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:237:59\n    |\n237 |     access(all) fun createEmptyCollection(nftType: Type): @{NonFungibleToken.Collection} {\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:203:44\n    |\n203 |             return (\u0026self.ownedNFTs[id] as \u0026{NonFungibleToken.NFT}?)\n    |                                             ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:214:51\n    |\n214 |                 let ref = (\u0026self.ownedNFTs[id] as \u0026{NonFungibleToken.NFT}?)!\n    |                                                    ^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-failure","account_address":"0xed398881d9bf40fb","contract_name":"CricketMomentsShardedCollection","error":"error: cannot find declaration `NonFungibleToken` in `631e88ae7f1d7c20.NonFungibleToken`\n  --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:20:7\n   |\n20 | import NonFungibleToken from 0x631e88ae7f1d7c20\n   |        ^^^^^^^^^^^^^^^^ available exported declarations are:\n\n\nerror: error getting program ed398881d9bf40fb.CricketMoments: failed to derive value: load program failed: Checking failed:\nerror: cannot find declaration `NonFungibleToken` in `631e88ae7f1d7c20.NonFungibleToken`\n --\u003e ed398881d9bf40fb.CricketMoments:3:7\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:132:40\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:134:55\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:123:50\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:151:45\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:168:77\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:178:40\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:202:55\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:224:50\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:252:48\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:286:48\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:237:59\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:203:44\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMoments:214:51\n\n--\u003e ed398881d9bf40fb.CricketMoments\n\nerror: cannot find type in this scope: `CricketMoments`\n  --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:29:44\n   |\n29 |     access(all) resource ShardedCollection: CricketMoments.CricketMomentsCollectionPublic, NonFungibleToken.CollectionPublic, NonFungibleToken.Provider, NonFungibleToken.Receiver { \n   |                                             ^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `CricketMoments`\n  --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:32:47\n   |\n32 |         access(all) var collections: @{UInt64: CricketMoments.Collection}\n   |                                                ^^^^^^^^^^^^^^ not found in this scope\n\nerror: ambiguous intersection type\n  --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:61:77\n   |\n61 |         access(NonFungibleToken.Withdraw) fun withdraw(withdrawID: UInt64): @{NonFungibleToken.NFT} {\n   |                                                                              ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: ambiguous intersection type\n  --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:75:40\n   |\n75 |         access(all) fun deposit(token: @{NonFungibleToken.NFT}) {\n   |                                         ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:102:55\n    |\n102 |         access(all) view fun borrowNFT(_ id: UInt64): \u0026{NonFungibleToken.NFT}? {\n    |                                                        ^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `CricketMoments`\n   --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:122:63\n    |\n122 |         access(all) view fun borrowCricketMoment(id: UInt64): \u0026CricketMoments.NFT? {\n    |                                                                ^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `CricketMoments`\n  --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:53:120\n   |\n53 |                 self.collections[i] \u003c-! CricketMoments.createEmptyCollection(nftType: Type\u003c@CricketMoments.NFT\u003e()) as! @CricketMoments.Collection\n   |                                                                                                                         ^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find variable in this scope: `CricketMoments`\n  --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:53:40\n   |\n53 |                 self.collections[i] \u003c-! CricketMoments.createEmptyCollection(nftType: Type\u003c@CricketMoments.NFT\u003e()) as! @CricketMoments.Collection\n   |                                         ^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `CricketMoments`\n  --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:53:92\n   |\n53 |                 self.collections[i] \u003c-! CricketMoments.createEmptyCollection(nftType: Type\u003c@CricketMoments.NFT\u003e()) as! @CricketMoments.Collection\n   |                                                                                             ^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type parameter: `T`\n  --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:53:86\n   |\n53 |                 self.collections[i] \u003c-! CricketMoments.createEmptyCollection(nftType: Type\u003c@CricketMoments.NFT\u003e()) as! @CricketMoments.Collection\n   |                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `CricketMoments`\n  --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:36:54\n   |\n36 |                  let col = \u0026self.collections[key] as \u0026CricketMoments.Collection?\n   |                                                       ^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot find type in this scope: `CricketMoments`\n  --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:81:63\n   |\n81 |             let collectionRef = (\u0026self.collections[bucket] as \u0026CricketMoments.Collection?)!\n   |                                                                ^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type: requires an explicit type annotation\n  --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:94:71\n   |\n94 |                 let collectionIDs = self.collections[key]?.getIDs() ?? []\n   |                                                                        ^\n\nerror: cannot find type in this scope: `CricketMoments`\n   --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:133:33\n    |\n133 |             supportedTypes[Type\u003c@CricketMoments.NFT\u003e()] = true\n    |                                  ^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type parameter: `T`\n   --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:133:27\n    |\n133 |             supportedTypes[Type\u003c@CricketMoments.NFT\u003e()] = true\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: cannot find type in this scope: `CricketMoments`\n   --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:140:33\n    |\n140 |             return type == Type\u003c@CricketMoments.NFT\u003e()\n    |                                  ^^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot infer type parameter: `T`\n   --\u003e ed398881d9bf40fb.CricketMomentsShardedCollection:140:27\n    |\n140 |             return type == Type\u003c@CricketMoments.NFT\u003e()\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-failure","account_address":"0xed398881d9bf40fb","contract_name":"FazeUtilityCoin","error":"error: cannot find declaration `FungibleToken` in `9a0766d93b6608b7.FungibleToken`\n --\u003e ed398881d9bf40fb.FazeUtilityCoin:3:7\n  |\n3 | import FungibleToken from 0x9a0766d93b6608b7\n  |        ^^^^^^^^^^^^^ available exported declarations are:\n\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.FazeUtilityCoin:106:70\n    |\n106 |         access(FungibleToken.Withdraw) fun withdraw(amount: UFix64): @{FungibleToken.Vault} {\n    |                                                                       ^^^^^^^^^^^^^^^^^^^^^\n\nerror: ambiguous intersection type\n   --\u003e ed398881d9bf40fb.FazeUtilityCoin:121:39\n    |\n121 |         access(all) fun deposit(from: @{FungibleToken.Vault}) {\n    |                                        ^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x432fdc8c0f271f3b","contract_name":"_44countryashell_NFT"},{"kind":"contract-update-success","account_address":"0xb15301e4b9e15edf","contract_name":"appstoretest8_NFT"},{"kind":"contract-update-success","account_address":"0x6415c6dd84b6356d","contract_name":"hamidreza_NFT"},{"kind":"contract-update-success","account_address":"0x76b18b054fba7c29","contract_name":"samiratabiat_NFT"},{"kind":"contract-update-success","account_address":"0xeed5383afebcbe9a","contract_name":"porno_NFT"},{"kind":"contract-update-success","account_address":"0x50558a0ce6697354","contract_name":"alisalimkelas_NFT"},{"kind":"contract-update-success","account_address":"0xbb613eea273c2582","contract_name":"pratabkshirsagar_NFT"},{"kind":"contract-update-success","account_address":"0xf468f89ba98c5272","contract_name":"tokyotime_NFT"},{"kind":"contract-update-success","account_address":"0xe3a8c7b552094d26","contract_name":"koroush_NFT"},{"kind":"contract-update-success","account_address":"0x21d01bd033d6b2b3","contract_name":"behnam_NFT"},{"kind":"contract-update-success","account_address":"0x228c946410e83cfc","contract_name":"bsnine_NFT"},{"kind":"contract-update-success","account_address":"0x45caec600164c9e6","contract_name":"Xorshift128plus"},{"kind":"contract-update-success","account_address":"0x5388dd16964c3b14","contract_name":"thatsonubaby_NFT"},{"kind":"contract-update-success","account_address":"0x26f49a0396e012ba","contract_name":"pnutscollectables_NFT"},{"kind":"contract-update-success","account_address":"0x8a0fd995a3c385b3","contract_name":"carostudio_NFT"},{"kind":"contract-update-success","account_address":"0x1044dfd1cfd449ad","contract_name":"overver_NFT"},{"kind":"contract-update-failure","account_address":"0x7ba45bdcac17806a","contract_name":"AnchainUtils","error":"error: restricted types have been removed; replace with the concrete type or an equivalent intersection type\n  --\u003e 7ba45bdcac17806a.AnchainUtils:46:41\n   |\n46 |     access(all) let thumbnail: AnyStruct{MetadataViews.File}\n   |                                          ^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0xce0ebd3df46ea037","contract_name":"FixesFungibleToken"},{"kind":"contract-update-success","account_address":"0x8c3a52900ffc60de","contract_name":"loli_NFT"},{"kind":"contract-update-success","account_address":"0x2d2cdc1ea9cb1ab0","contract_name":"bigbadbeardedbikers_NFT"},{"kind":"contract-update-success","account_address":"0x1f17d314a98d99c3","contract_name":"notapes_NFT"},{"kind":"contract-update-success","account_address":"0xb6a85d31b00d862f","contract_name":"cardoza9_NFT"},{"kind":"contract-update-success","account_address":"0x322d96c958eb8c46","contract_name":"FlowtyOffersResolver"},{"kind":"contract-update-success","account_address":"0x59c17948dfa13074","contract_name":"sophia_NFT"},{"kind":"contract-update-success","account_address":"0x985978d40d0b3ad2","contract_name":"innersect_NFT"},{"kind":"contract-update-success","account_address":"0x9490fbe0ff8904cf","contract_name":"jorex_NFT"},{"kind":"contract-update-success","account_address":"0xd5340d54bf62d889","contract_name":"otishi_NFT"},{"kind":"contract-update-failure","account_address":"0xee09029f1dbcd9d1","contract_name":"TopShotBETA","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e ee09029f1dbcd9d1.TopShotBETA:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e ee09029f1dbcd9d1.TopShotBETA:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x9aa6b176a046ee07","contract_name":"firedrops_NFT"},{"kind":"contract-update-success","account_address":"0xb6f2481eba4df97b","contract_name":"NFTLocker"},{"kind":"contract-update-success","account_address":"0xf38fadaba79009cc","contract_name":"MessageCard"},{"kind":"contract-update-success","account_address":"0xf38fadaba79009cc","contract_name":"MessageCardRenderers"},{"kind":"contract-update-failure","account_address":"0x577a3c409c5dcb5e","contract_name":"Toucans","error":"error: conformances do not match in `Project`: missing `ProjectPublic`\n   --\u003e 577a3c409c5dcb5e.Toucans:266:23\n    |\n266 |   access(all) resource Project {\n    |                        ^^^^^^^\n\nerror: conformances do not match in `Collection`: missing `CollectionPublic`\n    --\u003e 577a3c409c5dcb5e.Toucans:1390:23\n     |\n1390 |   access(all) resource Collection {\n     |                        ^^^^^^^^^^\n\nerror: conformances do not match in `Manager`: missing `ManagerPublic`\n    --\u003e 577a3c409c5dcb5e.Toucans:1580:23\n     |\n1580 |   access(all) resource Manager {\n     |                        ^^^^^^^\n\nerror: missing resource interface declaration `CollectionPublic`\n  --\u003e 577a3c409c5dcb5e.Toucans:15:21\n   |\n15 | access(all) contract Toucans {\n   |                      ^^^^^^^\n\nerror: missing resource interface declaration `ManagerPublic`\n  --\u003e 577a3c409c5dcb5e.Toucans:15:21\n   |\n15 | access(all) contract Toucans {\n   |                      ^^^^^^^\n\nerror: missing resource interface declaration `ProjectPublic`\n  --\u003e 577a3c409c5dcb5e.Toucans:15:21\n   |\n15 | access(all) contract Toucans {\n   |                      ^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x577a3c409c5dcb5e","contract_name":"ToucansActions"},{"kind":"contract-update-success","account_address":"0x577a3c409c5dcb5e","contract_name":"ToucansLockTokens"},{"kind":"contract-update-success","account_address":"0x577a3c409c5dcb5e","contract_name":"ToucansTokens"},{"kind":"contract-update-success","account_address":"0x577a3c409c5dcb5e","contract_name":"ToucansUtils"},{"kind":"contract-update-success","account_address":"0x1e096f690d0bb822","contract_name":"mangaeds_NFT"},{"kind":"contract-update-success","account_address":"0xfb77658f33e8fded","contract_name":"hodgebu_NFT"},{"kind":"contract-update-success","account_address":"0xe3ad6030cbaff1c2","contract_name":"DimensionX"},{"kind":"contract-update-success","account_address":"0xe3ad6030cbaff1c2","contract_name":"DimensionXComics"},{"kind":"contract-update-success","account_address":"0x4360bd8acdc9b97c","contract_name":"kiangallery_NFT"},{"kind":"contract-update-success","account_address":"0x97cc025ee79e27fe","contract_name":"contentw_NFT"},{"kind":"contract-update-success","account_address":"0xaae2e94149ab52d1","contract_name":"jacquelinecampenelli_NFT"},{"kind":"contract-update-success","account_address":"0xd791dc5f5ac795a6","contract_name":"GigantikEvents_NFT"},{"kind":"contract-update-success","account_address":"0xfdb8221dfc9fe8b0","contract_name":"whynot9791_NFT"},{"kind":"contract-update-success","account_address":"0x2fb4614ede95ab2b","contract_name":"FlowtyRaffleSource"},{"kind":"contract-update-success","account_address":"0x2fb4614ede95ab2b","contract_name":"FlowtyRaffles"},{"kind":"contract-update-success","account_address":"0xb2c83147e68d76af","contract_name":"protestbadges_NFT"},{"kind":"contract-update-success","account_address":"0x44b0765e8aec0dc1","contract_name":"kainonabel_NFT"},{"kind":"contract-update-success","account_address":"0x93b3ed68474a4031","contract_name":"xcapitainparsax_NFT"},{"kind":"contract-update-success","account_address":"0x79112c96ed2cf17a","contract_name":"doubleornunn_NFT"},{"kind":"contract-update-success","account_address":"0x26836b2113af9115","contract_name":"TransactionTypes"},{"kind":"contract-update-success","account_address":"0x93f573b2b449cb7d","contract_name":"seibert_NFT"},{"kind":"contract-update-success","account_address":"0xd627e218e84476e6","contract_name":"maiconbra_NFT"},{"kind":"contract-update-success","account_address":"0x67e3fe5bd0e67c7b","contract_name":"awk47_NFT"},{"kind":"contract-update-success","account_address":"0xf6421a577b6fe19f","contract_name":"tripled_NFT"},{"kind":"contract-update-success","account_address":"0xa740ab48b5123489","contract_name":"mighty_NFT"},{"kind":"contract-update-success","account_address":"0x799fad7a080df8ef","contract_name":"thewhitehouise_NFT"},{"kind":"contract-update-success","account_address":"0x3d85b4fdaa4e7104","contract_name":"penguinempire_NFT"},{"kind":"contract-update-success","account_address":"0xf5516d06ba23cff6","contract_name":"astro_NFT"},{"kind":"contract-update-success","account_address":"0x159876f1e17374f8","contract_name":"nftburg_NFT"},{"kind":"contract-update-success","account_address":"0x013cf4d6eedf4ecf","contract_name":"cemnavega_NFT"},{"kind":"contract-update-success","account_address":"0x280df619a6107051","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x699bf284101a76f1","contract_name":"JollyJokers"},{"kind":"contract-update-success","account_address":"0x699bf284101a76f1","contract_name":"JollyJokersMinter"},{"kind":"contract-update-failure","account_address":"0x53f389d96fb4ce5e","contract_name":"SloppyStakes","error":"error: cannot find type in this scope: `Toucans.Owner`\n   --\u003e 53f389d96fb4ce5e.SloppyStakes:233:70\n    |\n233 |       let toucansProjectCollection = self.account.storage.borrow\u003cauth(Toucans.Owner) \u0026Toucans.Collection\u003e(from: Toucans.CollectionStoragePath)!\n    |                                                                       ^^^^^^^^^^^^^ not found in this scope\n\nerror: cannot access `createProject`: function requires `CollectionOwner` authorization, but reference only has `Toucans` authorization\n   --\u003e 53f389d96fb4ce5e.SloppyStakes:234:6\n    |\n234 |       toucansProjectCollection.createProject(\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"},{"kind":"contract-update-success","account_address":"0x1933b2286908a47a","contract_name":"ankylosingnft_NFT"},{"kind":"contract-update-success","account_address":"0x54317f5ad2f47ad3","contract_name":"NBA_NFT"},{"kind":"contract-update-success","account_address":"0x44fe3d9157770b2d","contract_name":"LendingPool"},{"kind":"contract-update-success","account_address":"0xf9487d022348808c","contract_name":"jmoon_NFT"},{"kind":"contract-update-success","account_address":"0x28a8b68803ac969f","contract_name":"ami_NFT"},{"kind":"contract-update-success","account_address":"0x3c931f8c4c30be9c","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x74a5fc147b6f001e","contract_name":"aiquantify_NFT"},{"kind":"contract-update-success","account_address":"0x1127a6ff510997fb","contract_name":"iyrtitl_NFT"},{"kind":"contract-update-success","account_address":"0xd114186ee26b04c6","contract_name":"Collectible"},{"kind":"contract-update-success","account_address":"0x2a1887cf4c93e26c","contract_name":"liivelifeentertainme_NFT"},{"kind":"contract-update-success","account_address":"0x144872da62f6b336","contract_name":"kikollections_NFT"},{"kind":"contract-update-success","account_address":"0xfef48806337aabf1","contract_name":"TicalUniverse"},{"kind":"contract-update-success","account_address":"0x07341b272cf33ba9","contract_name":"megabazus_NFT"},{"kind":"contract-update-success","account_address":"0x09e03b1f871b3513","contract_name":"TheFabricantMarketplace"},{"kind":"contract-update-success","account_address":"0x09e03b1f871b3513","contract_name":"TheFabricantS1GarmentNFT"},{"kind":"contract-update-success","account_address":"0x09e03b1f871b3513","contract_name":"TheFabricantS1ItemNFT"},{"kind":"contract-update-success","account_address":"0x09e03b1f871b3513","contract_name":"TheFabricantS1MaterialNFT"},{"kind":"contract-update-success","account_address":"0x27ea5074094f9e25","contract_name":"gelareh_NFT"},{"kind":"contract-update-success","account_address":"0xdd778377b59995e8","contract_name":"aastore_NFT"},{"kind":"contract-update-success","account_address":"0x0fb03c999da59094","contract_name":"usonlineterrordefens_NFT"},{"kind":"contract-update-success","account_address":"0x17790dd620483104","contract_name":"omid_NFT"}]