// Code generated by "stringer -type=ComputationKind -trimprefix=ComputationKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ComputationKindUnknown-0]
	_ = x[ComputationKindStatement-1001]
	_ = x[ComputationKindLoop-1002]
	_ = x[ComputationKindFunctionInvocation-1003]
	_ = x[ComputationKindCreateCompositeValue-1010]
	_ = x[ComputationKindTransferCompositeValue-1011]
	_ = x[ComputationKindDestroyCompositeValue-1012]
	_ = x[ComputationKindCreateArrayValue-1025]
	_ = x[ComputationKindTransferArrayValue-1026]
	_ = x[ComputationKindDestroyArrayValue-1027]
	_ = x[ComputationKindCreateDictionaryValue-1040]
	_ = x[ComputationKindTransferDictionaryValue-1041]
	_ = x[ComputationKindDestroyDictionaryValue-1042]
	_ = x[ComputationKindStringToLower-1055]
	_ = x[ComputationKindStringDecodeHex-1056]
	_ = x[ComputationKindGraphemesIteration-1057]
	_ = x[ComputationKindEncodeValue-1080]
	_ = x[ComputationKindUintParse-1082]
	_ = x[ComputationKindIntParse-1083]
	_ = x[ComputationKindBigIntParse-1084]
	_ = x[ComputationKindUfixParse-1085]
	_ = x[ComputationKindFixParse-1086]
	_ = x[ComputationKindSTDLIBPanic-1100]
	_ = x[ComputationKindSTDLIBAssert-1101]
	_ = x[ComputationKindSTDLIBRevertibleRandom-1102]
	_ = x[ComputationKindSTDLIBRLPDecodeString-1108]
	_ = x[ComputationKindSTDLIBRLPDecodeList-1109]
	_ = x[ComputationKindAtreeArrayBatchConstruction-1201]
	_ = x[ComputationKindAtreeArrayGet-1202]
	_ = x[ComputationKindAtreeArraySet-1203]
	_ = x[ComputationKindAtreeArrayAppend-1204]
	_ = x[ComputationKindAtreeArrayInsert-1205]
	_ = x[ComputationKindAtreeArrayRemove-1206]
	_ = x[ComputationKindAtreeMapConstruction-1220]
	_ = x[ComputationKindAtreeMapBatchConstruction-1221]
	_ = x[ComputationKindAtreeMapHas-1222]
	_ = x[ComputationKindAtreeMapGet-1223]
	_ = x[ComputationKindAtreeMapSet-1224]
	_ = x[ComputationKindAtreeMapRemove-1225]
}

const _ComputationKind_name = "UnknownStatementLoopFunctionInvocationCreateCompositeValueTransferCompositeValueDestroyCompositeValueCreateArrayValueTransferArrayValueDestroyArrayValueCreateDictionaryValueTransferDictionaryValueDestroyDictionaryValueStringToLowerStringDecodeHexGraphemesIterationEncodeValueUintParseIntParseBigIntParseUfixParseFixParseSTDLIBPanicSTDLIBAssertSTDLIBRevertibleRandomSTDLIBRLPDecodeStringSTDLIBRLPDecodeListAtreeArrayBatchConstructionAtreeArrayGetAtreeArraySetAtreeArrayAppendAtreeArrayInsertAtreeArrayRemoveAtreeMapConstructionAtreeMapBatchConstructionAtreeMapHasAtreeMapGetAtreeMapSetAtreeMapRemove"

var _ComputationKind_map = map[ComputationKind]string{
	0:    _ComputationKind_name[0:7],
	1001: _ComputationKind_name[7:16],
	1002: _ComputationKind_name[16:20],
	1003: _ComputationKind_name[20:38],
	1010: _ComputationKind_name[38:58],
	1011: _ComputationKind_name[58:80],
	1012: _ComputationKind_name[80:101],
	1025: _ComputationKind_name[101:117],
	1026: _ComputationKind_name[117:135],
	1027: _ComputationKind_name[135:152],
	1040: _ComputationKind_name[152:173],
	1041: _ComputationKind_name[173:196],
	1042: _ComputationKind_name[196:218],
	1055: _ComputationKind_name[218:231],
	1056: _ComputationKind_name[231:246],
	1057: _ComputationKind_name[246:264],
	1080: _ComputationKind_name[264:275],
	1082: _ComputationKind_name[275:284],
	1083: _ComputationKind_name[284:292],
	1084: _ComputationKind_name[292:303],
	1085: _ComputationKind_name[303:312],
	1086: _ComputationKind_name[312:320],
	1100: _ComputationKind_name[320:331],
	1101: _ComputationKind_name[331:343],
	1102: _ComputationKind_name[343:365],
	1108: _ComputationKind_name[365:386],
	1109: _ComputationKind_name[386:405],
	1201: _ComputationKind_name[405:432],
	1202: _ComputationKind_name[432:445],
	1203: _ComputationKind_name[445:458],
	1204: _ComputationKind_name[458:474],
	1205: _ComputationKind_name[474:490],
	1206: _ComputationKind_name[490:506],
	1220: _ComputationKind_name[506:526],
	1221: _ComputationKind_name[526:551],
	1222: _ComputationKind_name[551:562],
	1223: _ComputationKind_name[562:573],
	1224: _ComputationKind_name[573:584],
	1225: _ComputationKind_name[584:598],
}

func (i ComputationKind) String() string {
	if str, ok := _ComputationKind_map[i]; ok {
		return str
	}
	return "ComputationKind(" + strconv.FormatInt(int64(i), 10) + ")"
}
