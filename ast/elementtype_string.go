// Code generated by "stringer -type=ElementType"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ElementTypeUnknown-0]
	_ = x[ElementTypeProgram-1]
	_ = x[ElementTypeBlock-2]
	_ = x[ElementTypeFunctionBlock-3]
	_ = x[ElementTypeFunctionDeclaration-4]
	_ = x[ElementTypeSpecialFunctionDeclaration-5]
	_ = x[ElementTypeCompositeDeclaration-6]
	_ = x[ElementTypeInterfaceDeclaration-7]
	_ = x[ElementTypeEntitlementDeclaration-8]
	_ = x[ElementTypeEntitlementMappingDeclaration-9]
	_ = x[ElementTypeAttachmentDeclaration-10]
	_ = x[ElementTypeFieldDeclaration-11]
	_ = x[ElementTypeEnumCaseDeclaration-12]
	_ = x[ElementTypePragmaDeclaration-13]
	_ = x[ElementTypeImportDeclaration-14]
	_ = x[ElementTypeTransactionDeclaration-15]
	_ = x[ElementTypeReturnStatement-16]
	_ = x[ElementTypeBreakStatement-17]
	_ = x[ElementTypeContinueStatement-18]
	_ = x[ElementTypeIfStatement-19]
	_ = x[ElementTypeSwitchStatement-20]
	_ = x[ElementTypeWhileStatement-21]
	_ = x[ElementTypeForStatement-22]
	_ = x[ElementTypeEmitStatement-23]
	_ = x[ElementTypeVariableDeclaration-24]
	_ = x[ElementTypeAssignmentStatement-25]
	_ = x[ElementTypeSwapStatement-26]
	_ = x[ElementTypeExpressionStatement-27]
	_ = x[ElementTypeRemoveStatement-28]
	_ = x[ElementTypeVoidExpression-29]
	_ = x[ElementTypeBoolExpression-30]
	_ = x[ElementTypeNilExpression-31]
	_ = x[ElementTypeIntegerExpression-32]
	_ = x[ElementTypeFixedPointExpression-33]
	_ = x[ElementTypeArrayExpression-34]
	_ = x[ElementTypeDictionaryExpression-35]
	_ = x[ElementTypeIdentifierExpression-36]
	_ = x[ElementTypeInvocationExpression-37]
	_ = x[ElementTypeMemberExpression-38]
	_ = x[ElementTypeIndexExpression-39]
	_ = x[ElementTypeConditionalExpression-40]
	_ = x[ElementTypeUnaryExpression-41]
	_ = x[ElementTypeBinaryExpression-42]
	_ = x[ElementTypeFunctionExpression-43]
	_ = x[ElementTypeStringExpression-44]
	_ = x[ElementTypeCastingExpression-45]
	_ = x[ElementTypeCreateExpression-46]
	_ = x[ElementTypeDestroyExpression-47]
	_ = x[ElementTypeReferenceExpression-48]
	_ = x[ElementTypeForceExpression-49]
	_ = x[ElementTypePathExpression-50]
	_ = x[ElementTypeAttachExpression-51]
	_ = x[ElementTypeStringTemplateExpression-52]
}

const _ElementType_name = "ElementTypeUnknownElementTypeProgramElementTypeBlockElementTypeFunctionBlockElementTypeFunctionDeclarationElementTypeSpecialFunctionDeclarationElementTypeCompositeDeclarationElementTypeInterfaceDeclarationElementTypeEntitlementDeclarationElementTypeEntitlementMappingDeclarationElementTypeAttachmentDeclarationElementTypeFieldDeclarationElementTypeEnumCaseDeclarationElementTypePragmaDeclarationElementTypeImportDeclarationElementTypeTransactionDeclarationElementTypeReturnStatementElementTypeBreakStatementElementTypeContinueStatementElementTypeIfStatementElementTypeSwitchStatementElementTypeWhileStatementElementTypeForStatementElementTypeEmitStatementElementTypeVariableDeclarationElementTypeAssignmentStatementElementTypeSwapStatementElementTypeExpressionStatementElementTypeRemoveStatementElementTypeVoidExpressionElementTypeBoolExpressionElementTypeNilExpressionElementTypeIntegerExpressionElementTypeFixedPointExpressionElementTypeArrayExpressionElementTypeDictionaryExpressionElementTypeIdentifierExpressionElementTypeInvocationExpressionElementTypeMemberExpressionElementTypeIndexExpressionElementTypeConditionalExpressionElementTypeUnaryExpressionElementTypeBinaryExpressionElementTypeFunctionExpressionElementTypeStringExpressionElementTypeCastingExpressionElementTypeCreateExpressionElementTypeDestroyExpressionElementTypeReferenceExpressionElementTypeForceExpressionElementTypePathExpressionElementTypeAttachExpressionElementTypeStringTemplateExpression"

var _ElementType_index = [...]uint16{0, 18, 36, 52, 76, 106, 143, 174, 205, 238, 278, 310, 337, 367, 395, 423, 456, 482, 507, 535, 557, 583, 608, 631, 655, 685, 715, 739, 769, 795, 820, 845, 869, 897, 928, 954, 985, 1016, 1047, 1074, 1100, 1132, 1158, 1185, 1214, 1241, 1269, 1296, 1324, 1354, 1380, 1405, 1432, 1467}

func (i ElementType) String() string {
	if i >= ElementType(len(_ElementType_index)-1) {
		return "ElementType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ElementType_name[_ElementType_index[i]:_ElementType_index[i+1]]
}
